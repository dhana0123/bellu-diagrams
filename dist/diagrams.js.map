{"version":3,"file":"diagrams.js","sources":["../src/vector.ts","../src/BBcode.ts","../src/tag_names.ts","../src/diagram.ts","../src/utils.ts","../src/color_palette.ts","../src/unicode_utils.ts","../src/draw_svg.ts","../src/shapes.ts","../src/shapes/shapes_geometry.ts","../src/alignment.ts","../src/html_interactivity.ts","../src/modifier.ts","../node_modules/@velipso/polybool/dist/polybool.js","../src/boolean.ts","../src/filter.ts","../src/shapes/shapes_graph.ts","../src/shapes/shapes_annotation.ts","../src/shapes/shapes_mechanics.ts","../src/shapes/shapes_bar.ts","../src/shapes/shapes_numberline.ts","../src/shapes/shapes_table.ts","../src/shapes/shapes_boxplot.ts","../src/geo_construct/geo_construct.ts","../src/shapes/utils_tree.ts","../src/shapes/shapes_tree.ts","../src/shapes/shapes_curves.ts","../src/shapes/shapes_interactive.ts","../src/encoding.ts"],"sourcesContent":["/**\r\n *  Class for 2D Vectors \r\n*/\r\nexport class Vector2 {\r\n    constructor(public x: number, public y: number) { }\r\n    add(v: Vector2) : Vector2 {\r\n        return new Vector2(this.x + v.x, this.y + v.y);\r\n    }\r\n    sub(v: Vector2) : Vector2 {\r\n        return new Vector2(this.x - v.x, this.y - v.y);\r\n    }\r\n    scale(s: number) : Vector2 {\r\n        return new Vector2(this.x * s, this.y * s);\r\n    }\r\n    mul(v: Vector2) : Vector2 {\r\n        return new Vector2(this.x * v.x, this.y * v.y);\r\n    }\r\n    rotate(angle: number) : Vector2 {\r\n        let x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\r\n        let y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\r\n        return new Vector2(x, y);\r\n    }\r\n    dot(v: Vector2) : number {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    cross(v: Vector2) : number {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n    equals(v: Vector2) : boolean {\r\n        return this.x == v.x && this.y == v.y;\r\n    }\r\n    length() : number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    length_sq() : number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    angle() : number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    normalize() : Vector2 {\r\n        let len = this.length();\r\n        return new Vector2(this.x / len, this.y / len);\r\n    }\r\n    copy() : Vector2 {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n    apply(f : (v : Vector2) => Vector2) : Vector2 {\r\n        return f(this.copy());\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function to create a Vector2\r\n */\r\nexport function V2(x : number, y : number) : Vector2 {\r\n    return new Vector2(x, y);\r\n}\r\n\r\n/**\r\n * Helper function to create a Vector2 from an angle\r\n * @param angle angle in radians\r\n * @returns Vector2 with length 1\r\n */\r\nexport function Vdir(angle : number) : Vector2 {\r\n    return new Vector2(Math.cos(angle), Math.sin(angle));\r\n}\r\n\r\n\r\n// transformation functions\r\ntype TransformFunc = (p : Vector2) => Vector2;\r\nexport class Transform {\r\n    static translate(v : Vector2) : TransformFunc {\r\n        return (p : Vector2) => p.add(v);\r\n    }\r\n    static rotate(angle : number, pivot : Vector2) : TransformFunc {\r\n        return (p : Vector2) => p.sub(pivot).rotate(angle).add(pivot);\r\n    }\r\n    static scale(scale : Vector2, origin : Vector2) : TransformFunc {\r\n        return (p : Vector2) => p.sub(origin).mul(scale).add(origin);\r\n    }\r\n    static reflect_over_point(q : Vector2) : TransformFunc {\r\n        return (p : Vector2) => p.sub(q).rotate(Math.PI).add(q);\r\n    }\r\n    static reflect_over_line(p1 : Vector2, p2 : Vector2) : TransformFunc {\r\n        let v = p2.sub(p1);\r\n        let n = v.rotate(Math.PI / 2).normalize();\r\n        return (p : Vector2) => {\r\n            let d = n.dot(p.sub(p1));\r\n            return p.sub(n.scale(2*d));\r\n        }   \r\n    }\r\n    static skewX(angle : number, ybase : number) : TransformFunc {\r\n        return (p : Vector2) => {\r\n            let x = p.x + (ybase - p.y) * Math.tan(angle);\r\n            return new Vector2(x, p.y);\r\n        }\r\n    }\r\n    static skewY(angle : number, xbase : number) : TransformFunc {\r\n        return (p : Vector2) => {\r\n            let y = p.y + (xbase - p.x) * Math.tan(angle);\r\n            return new Vector2(p.x, y);\r\n        }\r\n    }\r\n};\r\n","import type { TextSpanData } from \"./diagram\";\r\n// BBCode parser for multiline text object\r\n//\r\n\r\nenum BB_TokenType {\r\n    TEXT      = \"TEXT\",\r\n    OPEN_TAG  = \"OPEN_TAG\",\r\n    CLOSE_TAG = \"CLOSE_TAG\",\r\n    EOF       = \"EOF\",\r\n}\r\ntype BB_Token = {\r\n    type       : BB_TokenType,\r\n    attributes : { [key: string]: string }\r\n}\r\n\r\nexport class BB_Lexer {\r\n    static parse_tag_content(str : string) : BB_Token {\r\n        if (str[0] === \"/\") {\r\n        // close tag\r\n            let name = str.substring(1);\r\n            return {\r\n                type: BB_TokenType.CLOSE_TAG,\r\n                attributes: {_tag_name : name}\r\n            }\r\n        }\r\n\r\n        // open tag\r\n        let space_id = str.indexOf(\" \");\r\n        let equal_id = str.indexOf(\"=\");\r\n        if (space_id === -1 && equal_id === -1) {\r\n        // [name]\r\n            return {\r\n                type: BB_TokenType.OPEN_TAG,\r\n                attributes: {_tag_name : str}\r\n            }\r\n        }\r\n        if (space_id === -1 && equal_id > 0) {\r\n        // [name=value]\r\n            let name = str.substring(0, equal_id);\r\n            let value = str.substring(equal_id + 1);\r\n            let attributes : any = {_tag_name : name}\r\n            attributes[name] = value;\r\n            return {\r\n                type: BB_TokenType.OPEN_TAG,\r\n                attributes\r\n            }\r\n        }\r\n        // [name attr1=value1 attr2=value2]\r\n        throw new Error(\"Unimplemented\");\r\n    }\r\n\r\n    static parse(text : string) : BB_Token[] | null {\r\n        let tokens : BB_Token[] = [];\r\n\r\n        let pos = 0;\r\n        let len = text.length;\r\n        while (pos < len) {\r\n            // Find the next tag\r\n            // Find [\r\n            let TagLeft = text.indexOf(\"[\", pos);\r\n            if (TagLeft === -1) {\r\n            // no more tags, add the rest of the text\r\n                tokens.push({ \r\n                    type: BB_TokenType.TEXT, \r\n                    attributes: {_text : text.substring(pos)} \r\n                });\r\n                break;\r\n            }\r\n            if (TagLeft > pos) {\r\n            // add the text before the [\r\n                tokens.push({ \r\n                    type: BB_TokenType.TEXT, \r\n                    attributes: {_text : text.substring(pos, TagLeft)} \r\n                });\r\n            }\r\n\r\n            // find ]\r\n            let TagRight = text.indexOf(\"]\", TagLeft);\r\n            let nextTagLeft  = text.indexOf(\"[\", TagLeft + 1);\r\n            // make sure there is no [ between the [ and ]\r\n            if (nextTagLeft > 0 && nextTagLeft < TagRight) return null;\r\n            // make sure there is a ] after the [\r\n            if (TagRight === -1) return null;\r\n\r\n            let tag_content = text.substring(TagLeft + 1, TagRight);\r\n            tokens.push(BB_Lexer.parse_tag_content(tag_content));\r\n\r\n            pos = TagRight + 1;\r\n        }\r\n        return tokens;\r\n    }\r\n}\r\n\r\nexport class BB_multiline {\r\n    static from_BBCode(text : string, linespace : string = \"1em\") : TextSpanData[] {\r\n        let tspans : {text : string, style : {}}[]  = []\r\n        let tag_stack : { [key: string]: string }[] = [];\r\n        let tokens = BB_Lexer.parse(text);\r\n        if (tokens === null) {\r\n            console.error(\"Invalid BBCode\");\r\n            return [];\r\n        }\r\n        for (let token of tokens) {\r\n            switch (token.type) {\r\n                case BB_TokenType.OPEN_TAG: {\r\n                    // if the token is [br] then add a new line\r\n                    if (token.attributes['_tag_name'] === \"br\") {\r\n                        const style = BB_multiline.build_style(tag_stack);\r\n                        const dy = style['_line-height'] ?? linespace;\r\n                        tspans.push({text: \"\\n\", style: {dy}});\r\n                        break;\r\n                    }\r\n                    tag_stack.push(token.attributes);\r\n                } break;\r\n                case BB_TokenType.CLOSE_TAG: {\r\n                    if (tag_stack.length === 0) {\r\n                        console.error(\"Invalid BBCode\");\r\n                        return [];\r\n                    }\r\n                    let tag_top = tag_stack[tag_stack.length - 1];\r\n                    if (tag_top['_tag_name'] !== token.attributes['_tag_name']) {\r\n                        console.error(\"Invalid BBCode\");\r\n                        return [];\r\n                    }\r\n                    tag_stack.pop();\r\n                } break;\r\n                case BB_TokenType.TEXT: {\r\n                    let style = BB_multiline.build_style(tag_stack);\r\n                    tspans.push({text: token.attributes['_text'], style});\r\n                } break;\r\n            }\r\n        }\r\n\r\n        return tspans;\r\n    }\r\n    \r\n    static split_tspans_by_words(text_span_data: TextSpanData[]) : TextSpanData[] {\r\n      let new_text_span_data : TextSpanData[] = [];\r\n      for (let span of text_span_data){\r\n        const text = span.text;\r\n        let words = text.split(\" \");\r\n        for (let i = 0; i < words.length-1; i++) words[i] += \" \";\r\n        for (let word of words){\r\n          new_text_span_data.push({text: word, style: JSON.parse(JSON.stringify(span.style))});\r\n        }\r\n      }\r\n      return new_text_span_data;\r\n    }\r\n\r\n    static build_style(tag_stack : { [key: string]: string }[]) {\r\n        let style : {[key: string]: any} = {};\r\n        for (let tag of tag_stack) {\r\n            switch (tag['_tag_name']) {\r\n                case \"b\"          : style[\"font-weight\"] = \"bold\"; break;\r\n                case \"i\"          : style[\"font-style\"] = \"italic\"; break;\r\n                case \"color\"      : style[\"fill\"] = tag[\"color\"]; break;\r\n                case \"size\"       : style[\"font-size\"] = tag[\"size\"]; break;\r\n                case \"dx\"         : style[\"dx\"] = tag[\"dx\"]; break;\r\n                case \"dy\"         : style[\"dy\"] = tag[\"dy\"]; break;\r\n                case \"font\"       : style[\"font-family\"] = tag[\"font\"]; break;\r\n                case \"var\"        : style[\"textvar\"] = true; break;\r\n                case \"tag\"        : style[\"tag\"] = tag[\"tag\"]; break;\r\n                case \"lineheight\" : style[\"_line-height\"] = tag[\"lineheight\"]; break;\r\n                case \"sup\": {\r\n                    style[\"baseline-shift\"] = \"super\";\r\n                    style[\"font-size-scale-factor\"] = 0.7;\r\n                    style[\"is-prev-word\"] = true;\r\n                } break;\r\n                case \"sub\": {\r\n                    style[\"baseline-shift\"] = \"-20%\";\r\n                    style[\"font-size-scale-factor\"] = 0.7;\r\n                    style[\"is-prev-word\"] = true;\r\n                } break;\r\n            }\r\n        }\r\n        return style;\r\n    }\r\n}\r\n","/*\r\n* For objects that contain children, having a tag is useful so that the children can be easily accessed.\r\n*/\r\n\r\nexport enum TAG {\r\n    EMPTY = \"empty\",\r\n    LINE = \"line\",\r\n    CIRCLE = \"circle\",\r\n    TEXTVAR = \"textvar\",\r\n    \r\n    // prefix\r\n    ROW_ = \"row_\",\r\n    COL_ = \"col_\",\r\n    \r\n    // arrow\r\n    ARROW_LINE = \"arrow_line\",\r\n    ARROW_HEAD = \"arrow_head\",\r\n    \r\n    // table\r\n    TABLE = \"table\",\r\n    CONTAIN_TABLE = \"contain_table\",\r\n    TABLE_CELL = \"table_cell\",\r\n    TABLE_CONTENT = \"table_content\",\r\n    EMPTY_CELL = \"empty_cell\",\r\n    \r\n    //graph\r\n    GRAPH_AXIS = \"graph_axis_line\",\r\n    GRAPH_TICK = \"graph_tick\",\r\n    GRAPH_TICK_LABEL = \"graph_tick_label\",\r\n    GRAPH_GRID = \"graph_grid\",\r\n}\r\n","import { Vector2, V2, Transform } from './vector.js';\r\nimport { BB_multiline } from './BBcode.js'\r\nimport { TAG } from './tag_names.js'\r\n\r\nfunction assert(condition : boolean, message : string) : void {\r\n    if (!condition) {\r\n        throw new Error(message || \"Assertion failed\");\r\n    }\r\n}\r\n\r\nexport enum DiagramType {\r\n    Polygon = 'polygon',\r\n    Curve   = 'curve',\r\n    Text    = 'text',\r\n    Image   = 'image',\r\n    Diagram = 'diagram',\r\n    MultilineText = 'multilinetext',\r\n}\r\n\r\nexport const DEFAULT_FONTSIZE = \"16\"; // 16px (12pt) is the web default\r\n\r\nexport type Anchor = \r\n    'top-left'    | 'top-center'    | 'top-right'    | \r\n    'center-left' | 'center-center' | 'center-right' | \r\n    'bottom-left' | 'bottom-center' | 'bottom-right' ;\r\n\r\n/**\r\n * Make sure that every function return a new Diagram\r\n * Diagram is immutable to the user\r\n */\r\n\r\nexport type DiagramStyle = {\r\n    \"stroke\"           : string,\r\n    \"fill\"             : string | LinearGradient,\r\n    \"opacity\"          : string,\r\n    \"stroke-width\"     : string, // number\r\n    \"stroke-linecap\"   : string,\r\n    \"stroke-dasharray\" : string, // number[]\r\n    \"stroke-linejoin\"  : string,\r\n    \"vector-effect\"    : string,\r\n    \"filter\"?          : string\r\n    // TODO : add more style\r\n}\r\n\r\nexport type LinearGradient = {\r\n    type: 'linearGradient',\r\n    x1?: string,\r\n    y1?: string,\r\n    x2?: string,\r\n    y2?: string,\r\n    stops: Array<{offset: string, color: string, opacity?: number }>\r\n}\r\n\r\nexport type TextData = {\r\n    \"text\"             : string,\r\n    \"font-family\"      : string,\r\n    \"font-size\"        : string,\r\n    \"font-weight\"      : string,\r\n    \"font-style\"       : string,\r\n    \"text-anchor\"      : string,\r\n    \"dy\"               : string, // used to be \"dominant-baseline\": string,\r\n    \"angle\"            : string,\r\n    \"font-scale\"       : string, // this is a custom attribute that is not present in SVG\r\n    // \"letter-spacing\"   : string,\r\n    // \"word-spacing\"     : string,\r\n    // \"text-decoration\"  : string,\r\n    // \"writing-mode\"     : string,\r\n}\r\n\r\nexport type ImageData = {\r\n    \"src\"    : string,\r\n}\r\n\r\ntype ExtraTspanStyle = {\r\n    \"dy\" : string,\r\n    \"dx\" : string,\r\n    \"textvar\" : boolean,\r\n    \"tag\" : string,\r\n    \"baseline-shift\" : string,\r\n    \"font-size-scale-factor\": number,\r\n    \"is-prev-word\" : boolean, // tag to indicate that this is part of the previous word\r\n}\r\nexport type TextSpanData = {\r\n    \"text\"  : string,\r\n    \"style\" : Partial<TextData> & Partial<DiagramStyle> & Partial<ExtraTspanStyle>,\r\n}\r\nexport type MultilineTextData = {\r\n    \"content\" : TextSpanData[],\r\n    \"scale-factor\" : number,\r\n}\r\n\r\nfunction anchor_to_textdata(anchor : Anchor) : Partial<TextData> {\r\n    // TODO : might want to look at\r\n    // hanging vs text-before-edge\r\n    // ideographic vs text-after-edge\r\n    switch (anchor) {\r\n        case \"top-left\"      : return {\"text-anchor\" : \"start\" , \"dy\" : \"0.75em\"};\r\n        case \"top-center\"    : return {\"text-anchor\" : \"middle\", \"dy\" : \"0.75em\"};\r\n        case \"top-right\"     : return {\"text-anchor\" : \"end\"   , \"dy\" : \"0.75em\"};\r\n        case \"center-left\"   : return {\"text-anchor\" : \"start\" , \"dy\" : \"0.25em\"};\r\n        case \"center-center\" : return {\"text-anchor\" : \"middle\", \"dy\" : \"0.25em\"};\r\n        case \"center-right\"  : return {\"text-anchor\" : \"end\"   , \"dy\" : \"0.25em\"};\r\n        case \"bottom-left\"   : return {\"text-anchor\" : \"start\" , \"dy\" : \"-0.25em\"};\r\n        case \"bottom-center\" : return {\"text-anchor\" : \"middle\", \"dy\" : \"-0.25em\"};\r\n        case \"bottom-right\"  : return {\"text-anchor\" : \"end\"   , \"dy\" : \"-0.25em\"};\r\n        default: throw new Error(\"Unknown anchor \" + anchor);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n* Diagram Class \r\n*\r\n* Diagram is a tree structure\r\n* Diagram can be a polygon, curve, text, image, or diagram\r\n* Polygon is a closed path\r\n* Curve is an open path\r\n* Diagram is a tree of Diagrams\r\n*/\r\nexport class Diagram {\r\n    type          : DiagramType;\r\n    children      : Diagram[] = [];\r\n    path          : Path | undefined = undefined; // Polygon and Curve have a path\r\n    origin        : Vector2 = new Vector2(0, 0); // position of the origin of the diagram\r\n    style         : Partial<DiagramStyle>      = {};\r\n    textdata      : Partial<TextData>          = {};\r\n    multilinedata : Partial<MultilineTextData> = {};\r\n    imgdata       : Partial<ImageData>         = {};\r\n    mutable       : boolean   = false;\r\n    tags          : string[] = [];\r\n    \r\n    private _bbox_cache : [Vector2, Vector2] | undefined = undefined;\r\n\r\n    constructor(type_ : DiagramType, \r\n        args : { \r\n            path?     : Path, \r\n            children? : Diagram[], \r\n            textdata? : Partial<TextData>, \r\n            imgdata?  : Partial<ImageData>,\r\n            multilinedata? : Partial<MultilineTextData>,\r\n            tags?     : string[],\r\n        } = {}\r\n    ) {\r\n        this.type = type_;\r\n        this.path = args.path;\r\n        if (args.children) { this.children = args.children; }\r\n        if (args.textdata) { this.textdata = args.textdata; }\r\n        if (args.imgdata)  { this.imgdata  = args.imgdata; }\r\n        if (args.tags)     { this.tags     = args.tags; }\r\n        if (args.multilinedata) { this.multilinedata = args.multilinedata; }\r\n    }\r\n\r\n    /**\r\n     * Turn the diagram into a mutable diagram\r\n     */\r\n    public mut() : Diagram {\r\n        this.mutable = true;\r\n        // make path mutable\r\n        if (this.path != undefined) this.path.mutable = true;\r\n        // make all of the children mutable\r\n        for (let i = 0; i < this.children.length; i++) this.children[i].mut();\r\n        return this;\r\n    }\r\n\r\n    public mut_parent_only() : Diagram {\r\n        this.mutable = true;\r\n        // make path mutable\r\n        if (this.path != undefined) this.path.mutable = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create a copy of the diagram that is immutable\r\n     */\r\n    public immut() : Diagram {\r\n        let newd : Diagram = this.copy();\r\n        newd.mutable = false;\r\n        // make path immutable\r\n        if (this.path != undefined) this.path.mutable = false;\r\n        // make all of the children immutable\r\n        for (let i = 0; i < newd.children.length; i++) newd.children[i].immut();\r\n        return newd;\r\n    }\r\n\r\n    private static deep_setPrototypeOf(obj : any) : void {\r\n        Object.setPrototypeOf(obj, Diagram.prototype);\r\n        let objd : Diagram = obj;\r\n        // convert position and origin_offset to Vector2\r\n        objd.origin = Object.setPrototypeOf(objd.origin, Vector2.prototype);\r\n        // make sure all of the children are Diagram\r\n        for (let c = 0; c < objd.children.length; c++)\r\n            Diagram.deep_setPrototypeOf(objd.children[c]);\r\n\r\n        // set path to Path\r\n        if (objd.path != undefined) {\r\n            Object.setPrototypeOf(objd.path, Path.prototype);\r\n            objd.path = objd.path.copy();\r\n        }\r\n        \r\n        // bbox cache \r\n        if (objd._bbox_cache != undefined && objd._bbox_cache.length == 2) {\r\n            Object.setPrototypeOf(objd._bbox_cache[0], Vector2.prototype);\r\n            Object.setPrototypeOf(objd._bbox_cache[1], Vector2.prototype);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copy the diagram\r\n     * @return { Diagram }\r\n     */\r\n    public copy() : Diagram {\r\n        // do deepcopy with JSON\r\n        let newd : Diagram = JSON.parse(JSON.stringify(this));\r\n        // turn newd into Diagram\r\n        Diagram.deep_setPrototypeOf(newd);\r\n        return newd;\r\n    }\r\n\r\n    public copy_if_not_mutable() : Diagram {\r\n        return this.mutable ? this : this.copy();\r\n    }\r\n\r\n    /**\r\n     * Append tags to the diagram\r\n     */\r\n    public append_tags(tags : string | string[]) : Diagram {\r\n        let newd = this.copy_if_not_mutable();\r\n        if (!Array.isArray(tags)) tags = [tags];\r\n        for (let tag of tags){\r\n            if(!newd.tags.includes(tag)) newd.tags.push(tag);\r\n        }\r\n        return newd;\r\n    }\r\n    /**\r\n     * Remove tags from the diagram\r\n     */\r\n    public remove_tags(tags : string | string[]) : Diagram {\r\n        let newd = this.copy_if_not_mutable();\r\n        newd.tags = newd.tags.filter(t => !tags.includes(t));\r\n        return newd;\r\n    }\r\n    /**\r\n     * Reset all tags of the diagram\r\n     */\r\n    public reset_tags() : Diagram {\r\n        let newd = this.copy_if_not_mutable();\r\n        newd.tags = [];\r\n        return newd;\r\n    }\r\n    /**\r\n    * Check if the diagram contains a tag\r\n    */\r\n    public contain_tag(tag : string) : boolean {\r\n        return this.tags.includes(tag);\r\n    }\r\n    public contain_all_tags(tags : string[]) : boolean {\r\n        for (let tag of tags){\r\n            if (!this.tags.includes(tag)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Collect all children and subchildren of the diagram\r\n     * helper function for flatten()\r\n     */\r\n    private collect_children() : Diagram[] {\r\n        let children : Diagram[] = [];\r\n        if (this.type == DiagramType.Diagram) {\r\n            for (let c of this.children) {\r\n                children = children.concat(c.collect_children());\r\n            }\r\n        } else {\r\n            children.push(this);\r\n        }\r\n        return children;\r\n    }\r\n\r\n    /**\r\n     * Flatten the children structure of the diagram\r\n     * so that the diagram only has one level of children\r\n     * \\* implemented for performance reason\r\n     */\r\n    public flatten() : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        newd.children = newd.collect_children();\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Apply a function to the diagram\r\n     * @param func function to apply\r\n     * func takes in a diagram and returns a diagram\r\n     */\r\n    public apply(func : (d : Diagram) => Diagram) : Diagram {\r\n        return func(this.copy_if_not_mutable());\r\n    }\r\n\r\n    /**\r\n     * Apply a function to the diagram and all of its children recursively\r\n     * @param func function to apply\r\n     * func takes in a diagram and returns a diagram\r\n     */\r\n    public apply_recursive(func : (d : Diagram) => Diagram) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        // apply to self\r\n        newd = func(newd);\r\n        // apply to children\r\n        for (let i = 0; i < newd.children.length; i++) {\r\n            newd.children[i] = newd.children[i].apply_recursive(func);\r\n        }\r\n        return newd;\r\n    }\r\n    \r\n    /**\r\n    * Apply a function to the diagram and all of its children recursively\r\n    * The function is only applied to the diagrams that contain a specific tag\r\n    * @param tags the tag to filter the diagrams\r\n    * @param func function to apply\r\n    * func takes in a diagram and returns a diagram\r\n    */ \r\n    public apply_to_tagged_recursive(tags : string | string[], func : (d : Diagram) => Diagram) : Diagram {\r\n        if (!Array.isArray(tags)) tags = [tags];\r\n        \r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        // if the diagram has the tag, apply the function to self\r\n        if (newd.contain_all_tags(tags)) newd = func(newd);\r\n        // apply to children\r\n        for (let i = 0; i < newd.children.length; i++) {\r\n            newd.children[i] = newd.children[i].apply_to_tagged_recursive(tags, func);\r\n        }\r\n        return newd;\r\n    }\r\n    \r\n    /**\r\n    * Get all the diagrams that contain a specific tag\r\n    * @param tags the tag to filter the diagrams\r\n    * @return a list of diagrams\r\n    */\r\n    public get_tagged_elements(tags : string | string[] ) : Diagram[] {\r\n        if (!Array.isArray(tags)) tags = [tags];\r\n        let result = [];\r\n        \r\n        if (this.contain_all_tags(tags)) result.push(this.copy_if_not_mutable());\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            result = result.concat(this.children[i].get_tagged_elements(tags));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Combine another diagram with this diagram\r\n     * @param diagrams a diagram or a list of diagrams\r\n     */\r\n    public combine(...diagrams : Diagram[]) : Diagram {\r\n        return diagram_combine(this, ...diagrams);\r\n    }\r\n\r\n    /**\r\n     * Convert the diagram to a curve\r\n     * If the diagram is a polygon, convert it to a curve\r\n     * If the diagram is a Diagram, convert all of the children to curves\r\n     */\r\n    public to_curve() : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Polygon) {\r\n            newd.type = DiagramType.Curve;\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.to_curve());\r\n            for (let i = 0; i < newd.children.length; i++) \r\n                newd.children[i] = newd.children[i].to_curve();\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Convert the diagram to a polygon\r\n     * If the diagram is a curve, convert it to a polygon\r\n     * If the diagram is a Diagram, convert all of the children to polygons\r\n     */\r\n    public to_polygon() : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Curve) {\r\n            newd.type = DiagramType.Polygon;\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.to_polygon());\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].to_polygon();\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Add points to the diagram\r\n     * if the diagram is a polygon or curve, add points to the path\r\n     * if the diagram is a diagram, add points to the last polygon or curve child\r\n     * @param points points to add\r\n     */\r\n    public add_points(points : Vector2[]) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve) {\r\n            if (newd.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n            newd.path = newd.path.add_points(points);\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // add point to the last polygon or curve child\r\n            let last_child = newd.children[newd.children.length - 1];\r\n            newd.children[newd.children.length - 1] = last_child.add_points(points);\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    private update_style(stylename : keyof Diagram['style'], stylevalue : string | LinearGradient, excludedType? : DiagramType[]) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (excludedType?.includes(newd.type)) { \r\n            return newd; \r\n        } else if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve \r\n            || newd.type == DiagramType.Text || newd.type == DiagramType.Image \r\n            || newd.type == DiagramType.MultilineText\r\n        ) {\r\n           if(stylename === \"fill\") {\r\n            newd.style[stylename] = stylevalue;\r\n           } else { \r\n            newd.style[stylename] = stylevalue as string;\r\n           }\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.update_style(stylename, stylevalue, excludedType));\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].update_style(stylename, stylevalue, excludedType);\r\n        } else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + newd.type);\r\n        }\r\n        return newd;\r\n    }\r\n    \r\n    /* * Clone style from another diagram */\r\n    public clone_style_from(diagram : Diagram) : Diagram {\r\n        return this.apply_recursive(d => {\r\n            d.style = {...diagram.style};\r\n            return d;\r\n        });\r\n    }\r\n\r\n    public fill(color : string | LinearGradient) : Diagram { \r\n        return this.update_style('fill', color, [DiagramType.Text]);\r\n    }\r\n    public stroke(color : string) : Diagram { \r\n        return this.update_style('stroke', color, [DiagramType.Text]);\r\n    }\r\n    public opacity(opacity : number) : Diagram {\r\n        return this.update_style('opacity', opacity.toString());\r\n    }\r\n    public strokewidth(width : number) : Diagram { \r\n        return this.update_style('stroke-width', width.toString(), [DiagramType.Text]);\r\n    }\r\n    public strokelinecap(linecap : 'butt' | 'round' | 'square') : Diagram {\r\n        return this.update_style('stroke-linecap', linecap);\r\n    }\r\n    public strokelinejoin(linejoin : 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round') : Diagram {\r\n        return this.update_style('stroke-linejoin', linejoin);\r\n    }\r\n    public strokedasharray(dasharray : number[]) : Diagram {\r\n        return this.update_style('stroke-dasharray', dasharray.join(','));\r\n    }\r\n    public vectoreffect(vectoreffect : 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position'\r\n) : Diagram {\r\n        return this.update_style('vector-effect', vectoreffect);\r\n    }\r\n    public filter(filter : string) : Diagram {\r\n        return this.update_style('filter', `url(#${filter})`);\r\n    }\r\n\r\n    public textfill(color : string) : Diagram {\r\n        return this.update_style('fill', color, [DiagramType.Polygon, DiagramType.Curve]);\r\n    }\r\n    public textstroke(color : string) : Diagram {\r\n        return this.update_style('stroke', color, [DiagramType.Polygon, DiagramType.Curve]);\r\n    }\r\n    public textstrokewidth(width : number) : Diagram {\r\n        return this.update_style('stroke-width', width.toString(), [DiagramType.Polygon, DiagramType.Curve]);\r\n    }\r\n\r\n\r\n    private update_textdata(textdataname : keyof Diagram['textdata'], textdatavalue : string) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Text || newd.type == DiagramType.MultilineText) {\r\n            newd.textdata[textdataname] = textdatavalue;\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.update_textdata(textdataname, textdatavalue));\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].update_textdata(textdataname, textdatavalue);\r\n        } else if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve) {\r\n            // do nothing\r\n        } else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + newd.type);\r\n        }\r\n        return newd;\r\n    }\r\n    public fontfamily(fontfamily : string) : Diagram {\r\n        return this.update_textdata('font-family', fontfamily);\r\n    }\r\n    public fontstyle(fontstyle : string) : Diagram {\r\n        return this.update_textdata('font-style', fontstyle);\r\n    }\r\n    public fontsize(fontsize : number) : Diagram {\r\n        return this.update_textdata('font-size', fontsize.toString());\r\n    }\r\n    public fontweight(fontweight : 'normal' | 'bold' | 'bolder' | 'lighter' | number ) : Diagram {\r\n        return this.update_textdata('font-weight', fontweight.toString());\r\n    }\r\n    public fontscale(fontscale : number | 'auto') : Diagram {\r\n        return this.update_textdata('font-scale', fontscale.toString());\r\n    }\r\n    public textanchor(textanchor : 'start' | 'middle' | 'end' ) : Diagram {\r\n        return this.update_textdata('text-anchor', textanchor);\r\n    }\r\n    public textdy(dy : string) : Diagram {\r\n        return this.update_textdata('dy', dy);\r\n    }\r\n    public textangle(angle : number){\r\n        return this.update_textdata('angle', angle.toString());\r\n    }\r\n    public text_tovar() : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Text) {\r\n            newd = newd.append_tags(TAG.TEXTVAR);\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.text_tovar());\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].text_tovar();\r\n        }\r\n        return newd;\r\n    }\r\n    public text_totext() : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (newd.type == DiagramType.Text) {\r\n            newd = newd.remove_tags('textvar');\r\n        } else if (newd.type == DiagramType.Diagram) {\r\n            // newd.children = newd.children.map(c => c.text_totext());\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].text_totext();\r\n        }\r\n        return newd;\r\n    }\r\n            \r\n\r\n\r\n    /**\r\n     * Get the bounding box of the diagram\r\n     * @returns [min, max] where min is the top left corner and max is the bottom right corner\r\n     */\r\n    public bounding_box() : [Vector2, Vector2] {\r\n        if (this._bbox_cache != undefined) return this._bbox_cache;\r\n        let minx = Infinity, miny = Infinity;\r\n        let maxx = -Infinity, maxy = -Infinity;\r\n        if (this.type == DiagramType.Diagram){\r\n                for (let c = 0; c < this.children.length; c++){\r\n                    let child = this.children[c];\r\n                    let [min, max] = child.bounding_box();\r\n                    minx = Math.min(minx, min.x);\r\n                    miny = Math.min(miny, min.y);\r\n                    maxx = Math.max(maxx, max.x);\r\n                    maxy = Math.max(maxy, max.y);\r\n                }\r\n                const bbox = [new Vector2(minx, miny), new Vector2(maxx, maxy)] as [Vector2, Vector2];\r\n                this._bbox_cache = bbox;\r\n                return bbox;\r\n        }\r\n        else if (this.type == DiagramType.Curve || this.type == DiagramType.Polygon \r\n            || this.type == DiagramType.Image){\r\n                if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n                for (let p = 0; p < this.path.points.length; p++) {\r\n                    let point = this.path.points[p];\r\n                    minx = Math.min(minx, point.x);\r\n                    miny = Math.min(miny, point.y);\r\n                    maxx = Math.max(maxx, point.x);\r\n                    maxy = Math.max(maxy, point.y);\r\n                }\r\n                const bbox = [new Vector2(minx, miny), new Vector2(maxx, maxy)] as [Vector2, Vector2];\r\n                this._bbox_cache = bbox;\r\n                return bbox;\r\n        } \r\n        else if (this.type == DiagramType.Text || this.type == DiagramType.MultilineText){\r\n            const bbox = [this.origin.copy(), this.origin.copy()] as [Vector2, Vector2];\r\n            this._bbox_cache = bbox;\r\n            return bbox;\r\n        }\r\n        else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transform the diagram by a function\r\n     * @param transform_function function to transform the diagram\r\n     */\r\n    public transform(transform_function : (p : Vector2) => Vector2) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        newd._bbox_cache = undefined;\r\n        // transform all children\r\n        // newd.children = newd.children.map(c => c.transform(transform_function));\r\n        for (let i = 0; i < newd.children.length; i++)\r\n            newd.children[i] = newd.children[i].transform(transform_function);\r\n        // transform path\r\n        if (newd.path != undefined) newd.path = newd.path.transform(transform_function);\r\n        // transform origin\r\n        newd.origin = transform_function(newd.origin);\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Translate the diagram by a vector\r\n     * @param v vector to translate\r\n     */\r\n    public translate(v : Vector2) : Diagram {\r\n        // return this.transform(Transform.translate(v));\r\n        const prev_cached_bbox = this._bbox_cache;\r\n        const newd = this.transform(Transform.translate(v));\r\n        if (prev_cached_bbox != undefined) {\r\n            newd._bbox_cache = prev_cached_bbox.map(p => Transform.translate(v)(p)) as [Vector2, Vector2];\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * move the diagram to a position\r\n     * @param v position to move to (if left undefined, move to the origin)\r\n     */\r\n    public position(v : Vector2 = new Vector2(0,0)) : Diagram {\r\n        let dv = v.sub(this.origin)\r\n        return this.translate(dv);\r\n    }\r\n\r\n    /**\r\n     * Rotate the diagram by an angle around a pivot\r\n     * @param angle angle to rotate\r\n     * @param pivot pivot point, if left undefined, rotate around the origin\r\n     */\r\n    public rotate(angle : number, pivot : Vector2 | undefined = undefined) : Diagram {\r\n        if (pivot == undefined) { pivot = this.origin; }\r\n        return this.transform(Transform.rotate(angle, pivot));\r\n    }\r\n\r\n    /**\r\n     * Scale the diagram by a scale around a origin\r\n     * @param scale scale to scale (x, y)\r\n     * @param origin origin point, if left undefined, scale around the origin\r\n     */\r\n    public scale(scale : Vector2 | number, origin? : Vector2) : Diagram {\r\n        if (origin == undefined) { origin = this.origin; }\r\n        if (typeof scale == 'number') { scale = new Vector2(scale, scale); }\r\n        return this.transform(Transform.scale(scale, origin));\r\n    }\r\n\r\n    /**\r\n     * Scale texts contained in the diagram by a scale\r\n     * @param scale scaling factor\r\n     */\r\n    public scaletext(scale : number) : Diagram {\r\n        return this.apply_recursive(d => {\r\n            switch (d.type) {\r\n                case DiagramType.Text: {\r\n                    let fontsize = parseFloat(d.textdata['font-size'] || DEFAULT_FONTSIZE);\r\n                    let newd = d.copy_if_not_mutable();\r\n                    newd.textdata['font-size'] = (fontsize * scale).toString();\r\n                    return newd;\r\n                }\r\n                case DiagramType.MultilineText: {\r\n                    let newd = d.copy_if_not_mutable();\r\n                    newd.multilinedata['scale-factor'] = (newd.multilinedata['scale-factor'] || 1) * scale;\r\n                    return newd;\r\n                }\r\n                default: return d;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Skew the diagram in the x direction by an angle around a base\r\n     * @param angle angle to skew\r\n     * @param base base point, if left undefined, skew around the origin\r\n     */\r\n    public skewX(angle : number, base? : Vector2) : Diagram {\r\n        if (base == undefined) { base = this.origin; }\r\n        return this.transform(Transform.skewX(angle, base.y));\r\n    }\r\n\r\n    /**\r\n     * Skew the diagram in the y direction by an angle around a base\r\n     * @param angle angle to skew\r\n     * @param base base point, if left undefined, skew around the origin\r\n     */\r\n    public skewY(angle : number, base? : Vector2) : Diagram {\r\n        if (base == undefined) { base = this.origin; }\r\n        return this.transform(Transform.skewY(angle, base.x));\r\n    }\r\n\r\n    /**\r\n     * Reflect the diagram over a point\r\n     * @param p point to reflect over\r\n     */\r\n    public reflect_over_point(p : Vector2) {\r\n        return this.transform(Transform.reflect_over_point(p));\r\n    }\r\n\r\n    /**\r\n     * Reflect the diagram over a line defined by two points\r\n     * @param p1 point on the line\r\n     * @param p2 point on the line\r\n     */\r\n    public reflect_over_line(p1 : Vector2, p2 : Vector2) {\r\n        return this.transform(Transform.reflect_over_line(p1, p2));\r\n    }\r\n\r\n    /**\r\n     * Reflect the diagram\r\n     * if given 0 arguments, reflect over the origin\r\n     * if given 1 argument, reflect over a point p1\r\n     * if given 2 arguments, reflect over a line defined by two points p1 and p2\r\n     * @param p1 point\r\n     * @param p2 point\r\n     */\r\n    public reflect(p1? : Vector2, p2? : Vector2){\r\n        if (p1 == undefined && p2 == undefined) {\r\n            return this.reflect_over_point(this.origin);\r\n        } else if (p1 != undefined && p2 == undefined) {\r\n            return this.reflect_over_point(p1);\r\n        } else if (p1 != undefined && p2 != undefined) {\r\n            return this.reflect_over_line(p1, p2);\r\n        } else {\r\n            throw new Error(\"Unreachable\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Vertical flip\r\n     * Reflect the diagram over a horizontal line y = a\r\n     * @param a y value of the line\r\n     * if left undefined, flip over the origin\r\n     */\r\n    public vflip(a? : number) {\r\n        if (a == undefined) { a = this.origin.y; }\r\n        return this.reflect(new Vector2(0, a), new Vector2(1, a));\r\n    }\r\n\r\n    /**\r\n     * Horizontal flip\r\n     * Reflect the diagram over a vertical line x = a\r\n     * @param a x value of the line\r\n     * if left undefined, flip over the origin\r\n     */\r\n    public hflip(a? : number){\r\n        if (a == undefined) { a = this.origin.x; }\r\n        return this.reflect(new Vector2(a, 0), new Vector2(a, 1));\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the position of the anchor of the diagram\r\n     * @param anchor anchor to get, anchors can be\r\n     *   'top-left', 'top-center', 'top-right'\r\n     *   'center-left', 'center-center', 'center-right'\r\n     *   'bottom-left', 'bottom-center', 'bottom-right'\r\n     * @returns the position of the anchor\r\n     */\r\n    public get_anchor(anchor : Anchor) : Vector2 {\r\n        let [min, max] = this.bounding_box();\r\n        let minx = min.x, miny = min.y;\r\n        let maxx = max.x, maxy = max.y;\r\n        let midx = (minx + maxx) / 2;\r\n        let midy = (miny + maxy) / 2;\r\n        switch (anchor) {\r\n            case \"top-left\"      : return new Vector2(minx, maxy);\r\n            case \"top-center\"    : return new Vector2(midx, maxy);\r\n            case \"top-right\"     : return new Vector2(maxx, maxy);\r\n            case \"center-left\"   : return new Vector2(minx, midy);\r\n            case \"center-center\" : return new Vector2(midx, midy);\r\n            case \"center-right\"  : return new Vector2(maxx, midy);\r\n            case \"bottom-left\"   : return new Vector2(minx, miny);\r\n            case \"bottom-center\" : return new Vector2(midx, miny);\r\n            case \"bottom-right\"  : return new Vector2(maxx, miny);\r\n            default: throw new Error(\"Unknown anchor \" + anchor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move the origin of the diagram to a position or anchor\r\n     * @param pos position to move the origin to (Vector2), or anchor to move the origin to.\r\n     * anchors can be\r\n     *  'top-left', 'top-center', 'top-right'\r\n     *  'center-left', 'center-center', 'center-right'\r\n     *  'bottom-left', 'bottom-center', 'bottom-right'\r\n     * * for texts, use `move_origin_text()`\r\n     */\r\n    public move_origin(pos : Vector2 | Anchor) : Diagram {\r\n        let newd : Diagram = this.copy_if_not_mutable();\r\n        if (pos instanceof Vector2) {\r\n            newd.origin = pos;\r\n        } else {\r\n            newd.origin = newd.get_anchor(pos);\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Move the origin of text diagram to an anchor\r\n     * @param anchor anchor to move the origin to.\r\n     * anchors can be\r\n     * 'top-left', 'top-center', 'top-right'\r\n     * 'center-left', 'center-center', 'center-right'\r\n     * 'bottom-left', 'bottom-center', 'bottom-right'\r\n     */\r\n    private __move_origin_text(anchor : Anchor) : Diagram {\r\n        // for text, use text-anchor and dominant-baseline\r\n        let newd = this.copy_if_not_mutable();\r\n        let textdata = anchor_to_textdata(anchor);\r\n        newd.textdata['text-anchor'] = textdata['text-anchor'];\r\n        newd.textdata['dy'] = textdata['dy'];\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Move the origin of text diagram to a position\r\n     * @param anchor anchor to move the origin to.\r\n     * anchors can be\r\n     * 'top-left', 'top-center', 'top-right'\r\n     * 'center-left', 'center-center', 'center-right'\r\n     * 'bottom-left', 'bottom-center', 'bottom-right'\r\n     *\r\n     */\r\n    public move_origin_text(anchor : Anchor) : Diagram {\r\n        let newd = this.copy_if_not_mutable();\r\n        if (this.type == DiagramType.Text || this.type == DiagramType.MultilineText) {\r\n            newd = newd.__move_origin_text(anchor);\r\n        } else if (this.type == DiagramType.Diagram) {\r\n            //newd.children = newd.children.map(c => c.move_origin_text(anchor));\r\n            for (let i = 0; i < newd.children.length; i++)\r\n                newd.children[i] = newd.children[i].move_origin_text(anchor);\r\n        } else {\r\n            // do nothing\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    public path_length() : number {\r\n        if (this.type == DiagramType.Diagram) {\r\n            let length = 0;\r\n            for (let c = 0; c < this.children.length; c++) {\r\n                length += this.children[c].path_length();\r\n            }\r\n            return length;\r\n        } else if (this.type == DiagramType.Curve || this.type == DiagramType.Polygon) {\r\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n            return this.path.length();\r\n        } else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Reverse the order of the points in the path\r\n    */\r\n    public reverse_path() {\r\n        let newd = this.copy_if_not_mutable();\r\n        if (newd.path) {\r\n            newd.path = newd.path?.reverse();\r\n        }\r\n        return newd;\r\n    }\r\n\r\n    /**\r\n     * Get the point on the path at t\r\n     * Path can be described parametrically in the form of (x(t), y(t))\r\n     * Path starts at t=0 and ends at t=1\r\n     * @param t parameter\r\n     * @param segment_index (only works for polygon and curves)\r\n     * If segment_index (n) is defined, get the point at the nth segment\r\n     * If segment_index (n) is defined, t can be outside of [0, 1] and will return the extrapolated point\r\n     * @returns the position of the point\r\n     */\r\n    public parametric_point(t : number, segment_index? : number) : Vector2 {\r\n        if (this.type == DiagramType.Diagram) {\r\n            // use entire length, use the childrens\r\n            let cumuative_length = [];\r\n            let length   = 0.0;\r\n            for (let c = 0; c < this.children.length; c++) {\r\n                length += this.children[c].path_length();\r\n                cumuative_length.push(length);\r\n            }\r\n            let total_length = length;\r\n            let cumulative_t = cumuative_length.map(l => l / total_length);\r\n\r\n            // figure out which children t is in\r\n            for (let i = 0; i < cumulative_t.length; i++) {\r\n                if (t <= cumulative_t[i]) {\r\n                    let child_id = i;\r\n\r\n                    let prev_t = (i == 0) ? 0 : cumulative_t[i-1];\r\n                    let segment_t = (t - prev_t) / (cumulative_t[i] - prev_t);\r\n                    return this.children[child_id].parametric_point(segment_t);\r\n                }\r\n            }\r\n            throw Error(\"Unreachable\");\r\n        } else if (this.type == DiagramType.Curve) {\r\n            // get the point on the path\r\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n            return this.path.parametric_point(t, false, segment_index);\r\n        } else if (this.type == DiagramType.Polygon) {\r\n            // get the point on the path\r\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n            return this.path.parametric_point(t, true, segment_index);\r\n        } else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\r\n        }\r\n    }\r\n\r\n    public debug_bbox() : Diagram {\r\n        // TODO : let user supply the styling function\r\n        let style_bbox = (d : Diagram) => {\r\n            return d.fill('none').stroke('gray').strokedasharray([5,5])\r\n        };\r\n\r\n        let [min, max] = this.bounding_box();\r\n        let rect_bbox = polygon([\r\n            new Vector2(min.x, min.y), new Vector2(max.x, min.y), \r\n            new Vector2(max.x, max.y), new Vector2(min.x, max.y)\r\n        ]).apply(style_bbox);\r\n\r\n        let origin_x = text('+').position(this.origin)\r\n\r\n        return rect_bbox.combine(origin_x);\r\n    }\r\n\r\n    public debug(show_index : boolean = true) : Diagram {\r\n        // TODO : let user supply the styling function\r\n        let style_path = (d : Diagram) => {\r\n            return d.fill('none').stroke('red').strokedasharray([5,5])\r\n        };\r\n        let style_index = (d : Diagram) => {\r\n            let bg = d.textfill('white').textstroke('white').textstrokewidth(5);\r\n            let dd = d.fill('black');\r\n            return bg.combine(dd);\r\n        };\r\n\r\n        // handle each type separately\r\n        if (this.type == DiagramType.Diagram) {\r\n            return this.debug_bbox();\r\n        } \r\n        else if (this.type == DiagramType.Text){\r\n            // return empty at diagram origin\r\n            return empty(this.origin);\r\n        }\r\n        else if (this.type == DiagramType.Polygon || this.type == DiagramType.Curve \r\n            || this.type == DiagramType.Image){\r\n            let f_obj = this.type == DiagramType.Polygon || DiagramType.Image ? polygon : curve;\r\n\r\n            let deb_bbox = this.debug_bbox();\r\n\r\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\r\n            let deb_object = f_obj(this.path.points).apply(style_path);\r\n\r\n            // if show_index is false, return only the bbox and polygon\r\n            if (show_index == false) { return deb_bbox.combine(deb_object); }\r\n\r\n            // iterate for all path points\r\n            let points = this.path.points;\r\n            // let point_texts = points.map((p, i) => text(i.toString()).position(p).apply(style_index));\r\n            let point_texts : Diagram[] = [];\r\n            let prev_point : Vector2 | undefined = undefined;\r\n\r\n            let [min, max] = this.bounding_box();\r\n            let minimum_dist_tolerance = Math.min(max.x - min.x, max.y - min.y) / 10;\r\n            for (let i = 0; i < points.length; i++) {\r\n                // push to point_texts only if far enough from prev_point\r\n                let dist_to_prev = prev_point == undefined ? Infinity : points[i].sub(prev_point).length();\r\n                if (dist_to_prev < minimum_dist_tolerance) continue;\r\n\r\n                point_texts.push(text(i.toString()).position(points[i]).apply(style_index));\r\n                prev_point = points[i];\r\n            }\r\n\r\n            return deb_bbox.combine(deb_object,...point_texts);\r\n        }\r\n        else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\r\n        }\r\n    }\r\n    \r\n    public is_empty() : boolean {\r\n        return this.contain_tag(TAG.EMPTY);\r\n    }\r\n}\r\n\r\nexport class Path {\r\n    mutable : boolean = false;\r\n    constructor(public points : Vector2[]) { }\r\n\r\n    copy() : Path {\r\n        let newpoints = this.points.map(p => new Vector2(p.x,p.y));\r\n        return new Path(newpoints);\r\n    }\r\n    copy_if_not_mutable() : Path {\r\n        return this.mutable ? this : this.copy();\r\n    }\r\n    \r\n    /**\r\n    * Reverse the order of the points in the path\r\n    */\r\n    public reverse() : Path {\r\n        let newp : Path = this.copy_if_not_mutable();\r\n        newp.points = newp.points.reverse();\r\n        return newp;\r\n    }\r\n\r\n    /**\r\n     * Get the length of the path\r\n     */\r\n    public length() : number {\r\n        let length = 0;\r\n        for (let i = 1; i < this.points.length; i++) {\r\n            length += this.points[i].sub(this.points[i-1]).length();\r\n        }\r\n        return length;\r\n    }\r\n\r\n    /**\r\n     * add points to the path\r\n     * @param points points to add\r\n     */\r\n    public add_points(points : Vector2[]) : Path {\r\n        let newp : Path = this.copy_if_not_mutable();\r\n        newp.points = newp.points.concat(points);\r\n        return newp;\r\n    }\r\n\r\n    /**\r\n     * Get the point on the path at t \r\n     * Path can be described parametrically in the form of (x(t), y(t))\r\n     * Path starts at t=0 and ends at t=1\r\n     * @param t parameter\r\n     * @param closed if true, the path is closed\r\n     * @param segment_index \r\n     * If `segment_index` (n) is defined, get the point at the nth segment.\r\n     * If `segment_index` (n) is defined, t can be outside of [0, 1] and will return the extrapolated point.\r\n     * @returns the position of the point\r\n    */\r\n    public parametric_point(t : number, closed : boolean = false, segment_index? : number) : Vector2 {\r\n        let extended_points = this.points;\r\n        if (closed) extended_points = this.points.concat(this.points[0]);\r\n        // for a closed path, there's an extra segment connecting the last point to the first point\r\n\r\n        if (segment_index == undefined) { \r\n            if (t < 0 || t > 1) { throw Error(\"t must be between 0 and 1\"); }\r\n            // use entire length\r\n            let cumulative_length = [];\r\n            let length   = 0.0;\r\n            for (let i = 1; i < extended_points.length; i++) {\r\n                length += extended_points[i].sub(extended_points[i-1]).length();\r\n                cumulative_length.push(length);\r\n            }\r\n            let total_length = length;\r\n            let cumulative_t = cumulative_length.map(l => l / total_length);\r\n            // figure out which segment t is in\r\n            for (let i = 0; i < cumulative_t.length; i++) {\r\n                if (t <= cumulative_t[i]) {\r\n                    let segment_id = i;\r\n\r\n                    let prev_t = (i == 0) ? 0 : cumulative_t[i-1];\r\n                    let segment_t = (t - prev_t) / (cumulative_t[i] - prev_t);\r\n                    return this.parametric_point(segment_t, closed, segment_id);\r\n                }\r\n            }\r\n            // segment must have been retrieved at this point\r\n            throw Error(\"Unreachable\");\r\n        } else {\r\n            // take nth segment\r\n            if (segment_index < 0 || segment_index > extended_points.length - 1) { \r\n                throw Error(\"segment_index must be between 0 and n-1\"); \r\n            }\r\n            let start = extended_points[segment_index];\r\n            let end   = extended_points[segment_index + 1];\r\n            let dir : Vector2 = end.sub(start);\r\n            return start.add(dir.scale(t));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tranfrom the path by a function\r\n     * @param transform_function function to transform the path\r\n     */\r\n    public transform(transform_function : (p : Vector2) => Vector2) : Path {\r\n        let newp : Path = this.copy_if_not_mutable();\r\n        // transform all the points\r\n        // newp.points = newp.points.map(p => transform_function(p));\r\n        for (let i = 0; i < newp.points.length; i++) newp.points[i] = transform_function(newp.points[i]);\r\n        return newp;\r\n    }\r\n}\r\n\r\n/**\r\n * Combine multiple diagrams into one diagram\r\n * @param diagrams list of diagrams to combine\r\n * @returns a diagram\r\n */\r\nexport function diagram_combine(...diagrams : Diagram[]) : Diagram {\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = diagrams.map(d => d.copy_if_not_mutable());\r\n\r\n    // check if all children is mutable\r\n    // if they are, then set the new diagram to be mutable\r\n    let all_children_mutable = true;\r\n    for (let i = 0; i < newdiagrams.length; i++) {\r\n        if (!newdiagrams[i].mutable) { \r\n            all_children_mutable = false; \r\n            break; \r\n        }\r\n    }\r\n\r\n    let newd = new Diagram(DiagramType.Diagram, {children : newdiagrams});\r\n    newd.mutable = all_children_mutable;\r\n    return newd.move_origin(diagrams[0].origin);\r\n    // return newd.move_origin(Anchor.CenterCenter);\r\n    // i think it's better to keep the origin at the origin of the first diagram\r\n}\r\n\r\n// ====== function helpers to create primitives =========\r\n\r\n\r\n/**\r\n * Create a curve from a list of points\r\n * @param points list of points\r\n * @returns a curve diagram\r\n */\r\nexport function curve(points : Vector2[]) : Diagram {\r\n    let path : Path = new Path(points);\r\n    let curve = new Diagram(DiagramType.Curve, {path : path});\r\n    return curve;\r\n}\r\n\r\n/**\r\n * Create a line from start to end \r\n * @param start start point\r\n * @param end end point\r\n * @returns a line diagram\r\n */\r\nexport function line(start : Vector2, end : Vector2) : Diagram {\r\n    return curve([start, end]).append_tags(TAG.LINE);\r\n}\r\n\r\n\r\n/**\r\n * Create a polygon from a list of points\r\n * @param points list of points\r\n * @returns a polygon diagram\r\n */\r\nexport function polygon(points: Vector2[]) : Diagram {\r\n    assert(points.length >= 3, \"Polygon must have at least 3 points\");\r\n    let path : Path = new Path(points);\r\n\r\n    // create diagram\r\n    let polygon = new Diagram(DiagramType.Polygon, {path : path});\r\n    return polygon;\r\n}\r\n\r\n/**\r\n * Create an empty diagram, contain just a single point\r\n * @param v position of the point\r\n * @returns an empty diagram\r\n */\r\nexport function empty(v : Vector2 = V2(0,0)) : Diagram {\r\n    let emp = curve([v]).append_tags(TAG.EMPTY);\r\n    return emp;\r\n}\r\n\r\n/**\r\n * Create a text diagram\r\n * @param str text to display\r\n * @returns a text diagram\r\n */\r\nexport function text(str : string) : Diagram {\r\n    let dtext = new Diagram(DiagramType.Text, {\r\n        textdata : { text : str, \"font-size\" : DEFAULT_FONTSIZE },\r\n        path : new Path([new Vector2(0, 0)]),\r\n    });\r\n    return dtext;\r\n}\r\n\r\n/**\r\n * Create an image diagram\r\n * @param src image source\r\n * @param width width of the image\r\n * @param height height of the image\r\n * @returns an image diagram\r\n */\r\nexport function image(src : string, width : number, height: number){\r\n    let imgdata : ImageData = { src }\r\n    // path: bottom-left, bottom-right, top-right, top-left\r\n    let path    : Path      = new Path([\r\n        V2(-width/2, -height/2), V2(width/2, -height/2),\r\n        V2(width/2, height/2), V2(-width/2, height/2),\r\n    ]);\r\n    let img = new Diagram(DiagramType.Image, {imgdata : imgdata, path : path});\r\n    return img;\r\n}\r\n\r\n/**\r\n * Create a multiline text diagram\r\n * @param strs list of text to display\r\n */\r\nexport function multiline(spans : ([string] | [string,Partial<TextData>])[]) : Diagram {\r\n    let tspans : TextSpanData[] = [];\r\n    for (let i = 0; i < spans.length; i++) {\r\n        let text = spans[i][0];\r\n        let style = spans[i][1] ?? {};\r\n        tspans.push({text, style});\r\n    }\r\n    let dmulti = new Diagram(DiagramType.MultilineText, {\r\n        multilinedata : { content : tspans, \"scale-factor\" : 1 },\r\n        path : new Path([new Vector2(0, 0)]),\r\n    });\r\n    return dmulti;\r\n}\r\n\r\nexport function multiline_bb(bbstr : string, linespace? : string, split_by_word : boolean = false) : Diagram {\r\n    let tspans : TextSpanData[] = BB_multiline.from_BBCode(bbstr,linespace) as TextSpanData[];\r\n    if (split_by_word) tspans = BB_multiline.split_tspans_by_words(tspans);\r\n    let dmulti = new Diagram(DiagramType.MultilineText, {\r\n        multilinedata : { content : tspans, \"scale-factor\" : 1 },\r\n        path : new Path([new Vector2(0, 0)]),\r\n    });\r\n    return dmulti;\r\n}\r\n\r\n\r\n// END primitives =============================\r\n\r\nexport function diagram_from_jsonstring(str : string) : Diagram {\r\n    try {\r\n        // turn str into JSON object\r\n        let d : Diagram = JSON.parse(str);\r\n        // turn d into Diagram\r\n        Object.setPrototypeOf(d, Diagram.prototype);\r\n        d = d.copy();\r\n        return d;\r\n    } catch (e) {\r\n        // if there's a mistake, return an empty diagram\r\n        console.warn(e);\r\n        return empty(new Vector2(0,0));\r\n    }\r\n}\r\n","import { Vector2, V2 } from \"./vector.js\";\r\n\r\n/**\r\n * Helper function to convert from degrees to radians\r\n */\r\nexport function to_radian(angle: number) : number {\r\n    return angle * Math.PI / 180;\r\n}\r\n\r\n/**\r\n * Helper function to convert from radians to degrees\r\n */\r\nexport function to_degree(angle: number) : number {\r\n    return angle * 180 / Math.PI;\r\n}\r\n\r\n\r\n\r\nexport function array_repeat<T>(arr : T[], len : number) : T[] {\r\n    let new_arr : T[] = [];\r\n    for (let i = 0; i < len; i++) {\r\n        new_arr.push(arr[i % arr.length]);\r\n    }\r\n    return new_arr;\r\n}\r\n\r\n/**\r\n * Create a equivalently spaced array of numbers from start to end (inclusive) \r\n * [start, end]\r\n * @param start start value\r\n * @param end end value\r\n * @param n number of points\r\n */\r\nexport function linspace(start: number, end: number, n: number = 100) : number[] {\r\n    let result = [];\r\n    let step = (end - start) / (n - 1);\r\n    for (let i = 0; i < n; i++) {\r\n        result.push(start + step * i);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a equivalently spaced array of numbers from start to end (exclusice) \r\n * [start, end)\r\n * @param start start value\r\n * @param end end value\r\n * @param n number of points\r\n */\r\nexport function linspace_exc(start: number, end: number, n: number = 100) : number[] {\r\n    let result = [];\r\n    let step = (end - start) / n;\r\n    for (let i = 0; i < n; i++) {\r\n        result.push(start + step * i);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a equivalently spaced array of numbers from start to end (exclusive)\r\n * [start, end)\r\n * @param start start value\r\n * @param end end value\r\n * @param step step size\r\n */\r\nexport function range(start: number, end: number, step: number = 1) : number[] {\r\n    // step cannot be 0 and cannot be in the wrong direction\r\n    if (step == 0) return [];\r\n    let n = Math.floor((end - start) / step);\r\n    if (n <= 0) return [];\r\n\r\n    let result = [];\r\n    if (step > 0){\r\n        for (let i = start; i < end; i += step) {\r\n            result.push(i);\r\n        }\r\n    } else {\r\n        for (let i = start; i > end; i += step) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a equivalently spaced array of numbers from start to end (inc)\r\n * [start, end]\r\n * @param start start value\r\n * @param end end value\r\n * @param step step size\r\n */\r\nexport function range_inc(start: number, end: number, step: number = 1) : number[] {\r\n    // step cannot be 0 and cannot be in the wrong direction\r\n    if (step == 0) return [];\r\n    let n = Math.floor((end - start) / step);\r\n    if (n <= 0) return [];\r\n\r\n    let result = [];\r\n    if (step > 0){\r\n        for (let i = start; i <= end; i += step) {\r\n            result.push(i);\r\n        }\r\n    } else {\r\n        for (let i = start; i >= end; i += step) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Transpose a 2D array\r\n * if the array is not a rectangle, the transposed array will be padded with undefined\r\n * @param arr 2D array\r\n * @returns transposed 2D array\r\n */\r\nexport function transpose<T>(arr : T[][]) : (T|undefined)[][] {\r\n    let result : T[][] = [];\r\n    let n = Math.max(...arr.map(a => a.length));\r\n    for (let i = 0; i < n; i++) {\r\n        result.push([]);\r\n        for (let j = 0; j < arr.length; j++) {\r\n            result[i].push(arr[j][i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/* @return [top, right, bottom, left] */\r\nexport function expand_directional_value(padding : number | number[]) : [number,number,number,number] {\r\n    let p = padding;\r\n    if (typeof p === 'number') return [p,p,p,p];\r\n    if (!Array.isArray(p)) return [0,0,0,0];\r\n    if (p.length === 1) return [p[0], p[0], p[0], p[0]];\r\n    if (p.length === 2) return [p[0], p[1], p[0], p[1]];\r\n    if (p.length === 3) return [p[0], p[1], p[2], p[1]];\r\n    if (p.length >= 4)  return [p[0], p[1], p[2], p[3]];\r\n    return [0,0,0,0];\r\n}\r\n","// color from matpltlib's tab20\r\nexport const tab_color : {[key : string]: string} = {\r\n    'blue'        : '#1f77b4',\r\n    'lightblue'   : '#aec7e8',\r\n    'orange'      : '#ff7f0e',\r\n    'lightorange' : '#ffbb78',\r\n    'green'       : '#2ca02c',\r\n    'lightgreen'  : '#98df8a',\r\n    'red'         : '#d62728',\r\n    'lightred'    : '#ff9896',\r\n    'purple'      : '#9467bd',\r\n    'lightpurple' : '#c5b0d5',\r\n    'brown'       : '#8c564b',\r\n    'lightbrown'  : '#c49c94',\r\n    'pink'        : '#e377c2',\r\n    'lightpink'   : '#f7b6d2',\r\n    'grey'        : '#7f7f7f',\r\n    'lightgrey'   : '#c7c7c7',\r\n    'gray'        : '#7f7f7f',\r\n    'lightgray'   : '#c7c7c7',\r\n    'olive'       : '#bcbd22',\r\n    'lightolive'  : '#dbdb8d',\r\n    'cyan'        : '#17becf',\r\n    'lightcyan'   : '#9edae5',\r\n}\r\n\r\nexport function get_color(colorname : string, palette : {[key : string]: string}) : string {\r\n    return palette[colorname] ?? colorname;\r\n}\r\n","const unicode_mathematical_italic = {\r\n    'A' : '𝐴', 'B' : '𝐵', 'C' : '𝐶', 'D' : '𝐷', 'E' : '𝐸',\r\n    'F' : '𝐹', 'G' : '𝐺', 'H' : '𝐻', 'I' : '𝐼', 'J' : '𝐽',\r\n    'K' : '𝐾', 'L' : '𝐿', 'M' : '𝑀', 'N' : '𝑁', 'O' : '𝑂',\r\n    'P' : '𝑃', 'Q' : '𝑄', 'R' : '𝑅', 'S' : '𝑆', 'T' : '𝑇',\r\n    'U' : '𝑈', 'V' : '𝑉', 'W' : '𝑊', 'X' : '𝑋', 'Y' : '𝑌', 'Z' : '𝑍',\r\n    'a' : '𝑎', 'b' : '𝑏', 'c' : '𝑐', 'd' : '𝑑', 'e' : '𝑒',\r\n    'f' : '𝑓', 'g' : '𝑔', 'h' : 'ℎ', 'i' : '𝑖', 'j' : '𝑗',\r\n    'k' : '𝑘', 'l' : '𝑙', 'm' : '𝑚', 'n' : '𝑛', 'o' : '𝑜',\r\n    'p' : '𝑝', 'q' : '𝑞', 'r' : '𝑟', 's' : '𝑠', 't' : '𝑡',\r\n    'u' : '𝑢', 'v' : '𝑣', 'w' : '𝑤', 'x' : '𝑥', 'y' : '𝑦', 'z' : '𝑧',\r\n\r\n    'Α' : '𝛢', 'Β' : '𝛣', 'Γ' : '𝛤', 'Δ' : '𝛥', 'Ε' : '𝛦',\r\n    'Ζ' : '𝛧', 'Η' : '𝛨', 'Θ' : '𝛩', 'Ι' : '𝛪', 'Κ' : '𝛫',\r\n    'Λ' : '𝛬', 'Μ' : '𝛭', 'Ν' : '𝛮', 'Ξ' : '𝛯', 'Ο' : '𝛰',\r\n    'Π' : '𝛱', 'Ρ' : '𝛲', 'Σ' : '𝛴', 'Τ' : '𝛵', 'Υ' : '𝛶',\r\n    'Φ' : '𝛷', 'Χ' : '𝛸', 'Ψ' : '𝛹', 'Ω' : '𝛺',\r\n    'α' : '𝛼', 'β' : '𝛽', 'γ' : '𝛾', 'δ' : '𝛿', 'ε' : '𝜀',\r\n    'ζ' : '𝜁', 'η' : '𝜂', 'θ' : '𝜃', 'ι' : '𝜄', 'κ' : '𝜅',\r\n    'λ' : '𝜆', 'μ' : '𝜇', 'ν' : '𝜈', 'ξ' : '𝜉', 'ο' : '𝜊',\r\n    'π' : '𝜋', 'ρ' : '𝜌', 'ς' : '𝜍', 'σ' : '𝜎', 'τ' : '𝜏', 'υ' : '𝜐', \r\n    'φ' : '𝜑', 'χ' : '𝜒', 'ψ' : '𝜓', 'ω' : '𝜔',\r\n    'ϑ' : '𝜗', 'ϰ' : '𝜘', 'ϕ' : '𝜙', 'ϱ' : '𝜚', 'ϖ' : '𝜛',\r\n    // '.' : '𝛻', '.' : '𝛳', '.' : '𝜕', '.' : '𝜖',\r\n}\r\nconst reversed_unicode_mathematical_italic = Object.fromEntries(\r\n    Object.entries(unicode_mathematical_italic).map(([k,v]) => [v,k])\r\n);\r\n\r\nconst latex_greek  = {\r\n    '\\\\alpha'   : 'α', '\\\\beta'    : 'β', '\\\\gamma'   : 'γ', '\\\\delta'   : 'δ', '\\\\epsilon' : 'ε',\r\n    '\\\\zeta'    : 'ζ', '\\\\eta'     : 'η', '\\\\theta'   : 'θ', '\\\\iota'    : 'ι', '\\\\kappa'   : 'κ',\r\n    '\\\\lambda'  : 'λ', '\\\\mu'      : 'μ', '\\\\nu'      : 'ν', '\\\\xi'      : 'ξ', '\\\\omicron' : 'ο',\r\n    '\\\\pi'      : 'π', '\\\\rho'     : 'ρ', '\\\\sigma'   : 'σ', '\\\\tau'     : 'τ', '\\\\upsilon' : 'υ',\r\n    '\\\\phi'     : 'ϕ', '\\\\chi'     : 'χ', '\\\\psi'     : 'ψ', '\\\\omega'   : 'ω',\r\n    '\\\\vartheta'   : 'ϑ', '\\\\varchi'     : 'ϰ', '\\\\varphi'     : 'φ', '\\\\varepsilon' : 'ε',\r\n    '\\\\varrho'     : 'ϱ', '\\\\varsigma'   : 'ς',\r\n}\r\n\r\nconst latex_symbols = {\r\n    \"textfractionsolidus\" : \"⁄\",\r\n    \"leftrightsquigarrow\" : \"↭\",\r\n    \"textpertenthousand\" : \"‱\",\r\n    \"blacktriangleright\" : \"▸\",\r\n    \"blacktriangledown\" : \"▾\",\r\n    \"blacktriangleleft\" : \"◂\",\r\n    \"twoheadrightarrow\" : \"↠\",\r\n    \"leftrightharpoons\" : \"⇋\",\r\n    \"rightleftharpoons\" : \"⇌\",\r\n    \"textreferencemark\" : \"※\",\r\n    \"circlearrowright\" : \"↻\",\r\n    \"rightrightarrows\" : \"⇉\",\r\n    \"vartriangleright\" : \"⊳\",\r\n    \"textordmasculine\" : \"º\",\r\n    \"textvisiblespace\" : \"␣\",\r\n    \"twoheadleftarrow\" : \"↞\",\r\n    \"downharpoonright\" : \"⇂\",\r\n    \"ntrianglerighteq\" : \"⋭\",\r\n    \"rightharpoondown\" : \"⇁\",\r\n    \"textperthousand\" : \"‰\",\r\n    \"leftrightarrows\" : \"⇆\",\r\n    \"textmusicalnote\" : \"♪\",\r\n    \"nleftrightarrow\" : \"↮\",\r\n    \"rightleftarrows\" : \"⇄\",\r\n    \"bigtriangledown\" : \"▽\",\r\n    \"textordfeminine\" : \"ª\",\r\n    \"ntrianglelefteq\" : \"⋬\",\r\n    \"rightthreetimes\" : \"⋌\",\r\n    \"trianglerighteq\" : \"⊵\",\r\n    \"vartriangleleft\" : \"⊲\",\r\n    \"rightsquigarrow\" : \"⇝\",\r\n    \"downharpoonleft\" : \"⇃\",\r\n    \"curvearrowright\" : \"↷\",\r\n    \"circlearrowleft\" : \"↺\",\r\n    \"leftharpoondown\" : \"↽\",\r\n    \"nLeftrightarrow\" : \"⇎\",\r\n    \"curvearrowleft\" : \"↶\",\r\n    \"guilsinglright\" : \"›\",\r\n    \"leftthreetimes\" : \"⋋\",\r\n    \"leftrightarrow\" : \"↔\",\r\n    \"rightharpoonup\" : \"⇀\",\r\n    \"guillemotright\" : \"»\",\r\n    \"downdownarrows\" : \"⇊\",\r\n    \"hookrightarrow\" : \"↪\",\r\n    \"dashrightarrow\" : \"⇢\",\r\n    \"leftleftarrows\" : \"⇇\",\r\n    \"trianglelefteq\" : \"⊴\",\r\n    \"ntriangleright\" : \"⋫\",\r\n    \"doublebarwedge\" : \"⌆\",\r\n    \"upharpoonright\" : \"↾\",\r\n    \"rightarrowtail\" : \"↣\",\r\n    \"looparrowright\" : \"↬\",\r\n    \"Leftrightarrow\" : \"⇔\",\r\n    \"sphericalangle\" : \"∢\",\r\n    \"divideontimes\" : \"⋇\",\r\n    \"measuredangle\" : \"∡\",\r\n    \"blacktriangle\" : \"▴\",\r\n    \"ntriangleleft\" : \"⋪\",\r\n    \"mathchar1356\" : \"⁁\",\r\n    \"texttrademark\" : \"™\",\r\n    \"mathchar2208\" : \"⌖\",\r\n    \"triangleright\" : \"▹\",\r\n    \"leftarrowtail\" : \"↢\",\r\n    \"guilsinglleft\" : \"‹\",\r\n    \"upharpoonleft\" : \"↿\",\r\n    \"mathbb{gamma}\" : \"ℽ\",\r\n    \"fallingdotseq\" : \"≒\",\r\n    \"looparrowleft\" : \"↫\",\r\n    \"textbrokenbar\" : \"¦\",\r\n    \"hookleftarrow\" : \"↩\",\r\n    \"smallsetminus\" : \"﹨\",\r\n    \"dashleftarrow\" : \"⇠\",\r\n    \"guillemotleft\" : \"«\",\r\n    \"leftharpoonup\" : \"↼\",\r\n    \"mathbb{Gamma}\" : \"ℾ\",\r\n    \"bigtriangleup\" : \"△\",\r\n    \"textcircledP\" : \"℗\",\r\n    \"risingdotseq\" : \"≓\",\r\n    \"triangleleft\" : \"◃\",\r\n    \"mathsterling\" : \"£\",\r\n    \"textcurrency\" : \"¤\",\r\n    \"triangledown\" : \"▿\",\r\n    \"blacklozenge\" : \"\",\r\n    \"sfrac{5}{6}\" : \"⅚\",\r\n    \"preccurlyeq\" : \"≼\",\r\n    \"Rrightarrow\" : \"⇛\",\r\n    \"circledcirc\" : \"⊚\",\r\n    \"nRightarrow\" : \"⇏\",\r\n    \"sfrac{3}{8}\" : \"⅜\",\r\n    \"sfrac{1}{3}\" : \"⅓\",\r\n    \"sfrac{2}{5}\" : \"⅖\",\r\n    \"vartriangle\" : \"▵\",\r\n    \"Updownarrow\" : \"⇕\",\r\n    \"nrightarrow\" : \"↛\",\r\n    \"sfrac{1}{2}\" : \"½\",\r\n    \"sfrac{3}{5}\" : \"⅗\",\r\n    \"succcurlyeq\" : \"≽\",\r\n    \"sfrac{4}{5}\" : \"⅘\",\r\n    \"diamondsuit\" : \"♦\",\r\n    \"sfrac{1}{6}\" : \"⅙\",\r\n    \"curlyeqsucc\" : \"⋟\",\r\n    \"blacksquare\" : \"▪\",\r\n    \"curlyeqprec\" : \"⋞\",\r\n    \"sfrac{1}{8}\" : \"⅛\",\r\n    \"sfrac{7}{8}\" : \"⅞\",\r\n    \"sfrac{1}{5}\" : \"⅕\",\r\n    \"sfrac{2}{3}\" : \"⅔\",\r\n    \"updownarrow\" : \"↕\",\r\n    \"backepsilon\" : \"∍\",\r\n    \"circleddash\" : \"⊝\",\r\n    \"eqslantless\" : \"⋜\",\r\n    \"sfrac{3}{4}\" : \"¾\",\r\n    \"sfrac{5}{8}\" : \"⅝\",\r\n    \"sfrac{1}{4}\" : \"¼\",\r\n    \"mathbb{Pi}\" : \"ℿ\",\r\n    \"mathcal{M}\" : \"ℳ\",\r\n    \"mathcal{o}\t\" : \"ℴ\",\r\n    \"mathcal{O}\t\" : \"𝒪\",\r\n    \"nsupseteqq\" : \"⊉\",\r\n    \"mathcal{B}\" : \"ℬ\",\r\n    \"textrecipe\" : \"℞\",\r\n    \"nsubseteqq\" : \"⊈\",\r\n    \"subsetneqq\" : \"⊊\",\r\n    \"mathcal{I}\" : \"ℑ\",\r\n    \"upuparrows\" : \"⇈\",\r\n    \"mathcal{e}\" : \"ℯ\",\r\n    \"mathcal{L}\" : \"ℒ\",\r\n    \"nleftarrow\" : \"↚\",\r\n    \"mathcal{H}\" : \"ℋ\",\r\n    \"mathcal{E}\" : \"ℰ\",\r\n    \"eqslantgtr\" : \"⋝\",\r\n    \"curlywedge\" : \"⋏\",\r\n    \"varepsilon\" : \"ε\",\r\n    \"supsetneqq\" : \"⊋\",\r\n    \"rightarrow\" : \"→\",\r\n    \"mathcal{R}\" : \"ℛ\",\r\n    \"sqsubseteq\" : \"⊑\",\r\n    \"mathcal{g}\" : \"ℊ\",\r\n    \"sqsupseteq\" : \"⊒\",\r\n    \"complement\" : \"∁\",\r\n    \"Rightarrow\" : \"⇒\",\r\n    \"gtreqqless\" : \"⋛\",\r\n    \"lesseqqgtr\" : \"⋚\",\r\n    \"circledast\" : \"⊛\",\r\n    \"nLeftarrow\" : \"⇍\",\r\n    \"Lleftarrow\" : \"⇚\",\r\n    \"varnothing\" : \"∅\",\r\n    \"mathcal{N}\" : \"𝒩\",\r\n    \"Leftarrow\" : \"⇐\",\r\n    \"gvertneqq\" : \"≩\",\r\n    \"mathbb{C}\" : \"ℂ\",\r\n    \"supsetneq\" : \"⊋\",\r\n    \"leftarrow\" : \"←\",\r\n    \"nleqslant\" : \"≰\",\r\n    \"mathbb{Q}\" : \"ℚ\",\r\n    \"mathbb{Z}\" : \"ℤ\",\r\n    \"llbracket\" : \"〚\",\r\n    \"mathbb{H}\" : \"ℍ\",\r\n    \"spadesuit\" : \"♠\",\r\n    \"mathit{o}\" : \"ℴ\",\r\n    \"mathbb{P}\" : \"ℙ\",\r\n    \"rrbracket\" : \"〛\",\r\n    \"supseteqq\" : \"⊇\",\r\n    \"copyright\" : \"©\",\r\n    \"textsc{k}\" : \"ĸ\",\r\n    \"gtreqless\" : \"⋛\",\r\n    \"mathbb{j}\" : \"ⅉ\",\r\n    \"pitchfork\" : \"⋔\",\r\n    \"estimated\" : \"℮\",\r\n    \"ngeqslant\" : \"≱\",\r\n    \"mathbb{e}\" : \"ⅇ\",\r\n    \"therefore\" : \"∴\",\r\n    \"triangleq\" : \"≜\",\r\n    \"varpropto\" : \"∝\",\r\n    \"subsetneq\" : \"⊊\",\r\n    \"heartsuit\" : \"♥\",\r\n    \"mathbb{d}\" : \"ⅆ\",\r\n    \"lvertneqq\" : \"≨\",\r\n    \"checkmark\" : \"✓\",\r\n    \"nparallel\" : \"∦\",\r\n    \"mathbb{R}\" : \"ℝ\",\r\n    \"lesseqgtr\" : \"⋚\",\r\n    \"downarrow\" : \"↓\",\r\n    \"mathbb{D}\" : \"ⅅ\",\r\n    \"mathbb{i}\" : \"ⅈ\",\r\n    \"backsimeq\" : \"⋍\",\r\n    \"mathbb{N}\" : \"ℕ\",\r\n    \"Downarrow\" : \"⇓\",\r\n    \"subseteqq\" : \"⊆\",\r\n    \"setminus\" : \"∖\",\r\n    \"succnsim\" : \"⋩\",\r\n    \"doteqdot\" : \"≑\",\r\n    \"clubsuit\" : \"♣\",\r\n    \"emptyset\" : \"∅\",\r\n    \"sqsupset\" : \"⊐\",\r\n    \"fbox{~~}\" : \"▭\",\r\n    \"curlyvee\" : \"⋎\",\r\n    \"varkappa\" : \"ϰ\",\r\n    \"llcorner\" : \"⌞\",\r\n    \"varsigma\" : \"ς\",\r\n    \"approxeq\" : \"≊\",\r\n    \"backcong\" : \"≌\",\r\n    \"supseteq\" : \"⊇\",\r\n    \"circledS\" : \"Ⓢ\",\r\n    \"circledR\" : \"®\",\r\n    \"textcent\" : \"¢\",\r\n    \"urcorner\" : \"⌝\",\r\n    \"lrcorner\" : \"⌟\",\r\n    \"boxminus\" : \"⊟\",\r\n    \"texteuro\" : \"€\",\r\n    \"vartheta\" : \"ϑ\",\r\n    \"barwedge\" : \"⊼\",\r\n    \"ding{86}\" : \"✶\",\r\n    \"sqsubset\" : \"⊏\",\r\n    \"subseteq\" : \"⊆\",\r\n    \"intercal\" : \"⊺\",\r\n    \"ding{73}\" : \"☆\",\r\n    \"ulcorner\" : \"⌜\",\r\n    \"recorder\" : \"⌕\",\r\n    \"precnsim\" : \"⋨\",\r\n    \"parallel\" : \"∥\",\r\n    \"boxtimes\" : \"⊠\",\r\n    \"ding{55}\" : \"✗\",\r\n    \"multimap\" : \"⊸\",\r\n    \"maltese\" : \"✠\",\r\n    \"nearrow\" : \"↗\",\r\n    \"swarrow\" : \"↙\",\r\n    \"lozenge\" : \"◊\",\r\n    \"sqrt[3]\" : \"∛\",\r\n    \"succsim\" : \"≿\",\r\n    \"dotplus\" : \"∔\",\r\n    \"tilde{}\" : \"~\",\r\n    \"check{}\" : \"ˇ\",\r\n    \"lessgtr\" : \"≶\",\r\n    \"Upsilon\" : \"ϒ\",\r\n    \"Cdprime\" : \"Ъ\",\r\n    \"gtrless\" : \"≷\",\r\n    \"backsim\" : \"∽\",\r\n    \"nexists\" : \"∄\",\r\n    \"searrow\" : \"↘\",\r\n    \"lessdot\" : \"⋖\",\r\n    \"boxplus\" : \"⊞\",\r\n    \"upsilon\" : \"υ\",\r\n    \"epsilon\" : \"ε\",\r\n    \"diamond\" : \"⋄\",\r\n    \"bigstar\" : \"★\",\r\n    \"ddagger\" : \"‡\",\r\n    \"cdprime\" : \"ъ\",\r\n    \"Uparrow\" : \"⇑\",\r\n    \"sqrt[4]\" : \"∜\",\r\n    \"between\" : \"≬\",\r\n    \"sqangle\" : \"∟\",\r\n    \"digamma\" : \"Ϝ\",\r\n    \"uparrow\" : \"↑\",\r\n    \"nwarrow\" : \"↖\",\r\n    \"precsim\" : \"≾\",\r\n    \"breve{}\" : \"˘\",\r\n    \"because\" : \"∵\",\r\n    \"bigcirc\" : \"◯\",\r\n    \"acute{}\" : \"´\",\r\n    \"grave{}\" : \"`\",\r\n    \"lesssim\" : \"≲\",\r\n    \"partial\" : \"∂\",\r\n    \"natural\" : \"♮\",\r\n    \"supset\" : \"⊃\",\r\n    \"hstrok\" : \"ħ\",\r\n    \"Tstrok\" : \"Ŧ\",\r\n    \"coprod\" : \"∐\",\r\n    \"models\" : \"⊧\",\r\n    \"otimes\" : \"⊗\",\r\n    \"degree\" : \"°\",\r\n    \"gtrdot\" : \"⋗\",\r\n    \"preceq\" : \"≼\",\r\n    \"Lambda\" : \"Λ\",\r\n    \"lambda\" : \"λ\",\r\n    \"cprime\" : \"ь\",\r\n    \"varrho\" : \"ϱ\",\r\n    \"Bumpeq\" : \"≎\",\r\n    \"hybull\" : \"⁃\",\r\n    \"lmidot\" : \"ŀ\",\r\n    \"nvdash\" : \"⊬\",\r\n    \"lbrace\" : \"{\",\r\n    \"bullet\" : \"•\",\r\n    \"varphi\" : \"φ\",\r\n    \"bumpeq\" : \"≏\",\r\n    \"ddot{}\" : \"¨\",\r\n    \"Lmidot\" : \"Ŀ\",\r\n    \"Cprime\" : \"Ь\",\r\n    \"female\" : \"♀\",\r\n    \"rtimes\" : \"⋊\",\r\n    \"gtrsim\" : \"≳\",\r\n    \"mapsto\" : \"↦\",\r\n    \"daleth\" : \"ℸ\",\r\n    \"square\" : \"■\",\r\n    \"nVDash\" : \"⊯\",\r\n    \"rangle\" : \"⟩\",\r\n    \"tstrok\" : \"ŧ\",\r\n    \"oslash\" : \"⊘\",\r\n    \"ltimes\" : \"⋉\",\r\n    \"lfloor\" : \"⌊\",\r\n    \"marker\" : \"▮\",\r\n    \"Subset\" : \"⋐\",\r\n    \"Vvdash\" : \"⊪\",\r\n    \"propto\" : \"∝\",\r\n    \"Hstrok\" : \"Ħ\",\r\n    \"dlcrop\" : \"⌍\",\r\n    \"forall\" : \"∀\",\r\n    \"nVdash\" : \"⊮\",\r\n    \"Supset\" : \"⋑\",\r\n    \"langle\" : \"⟨\",\r\n    \"ominus\" : \"⊖\",\r\n    \"rfloor\" : \"⌋\",\r\n    \"circeq\" : \"≗\",\r\n    \"eqcirc\" : \"≖\",\r\n    \"drcrop\" : \"⌌\",\r\n    \"veebar\" : \"⊻\",\r\n    \"ulcrop\" : \"⌏\",\r\n    \"nvDash\" : \"⊭\",\r\n    \"urcrop\" : \"⌎\",\r\n    \"exists\" : \"∃\",\r\n    \"approx\" : \"≈\",\r\n    \"dagger\" : \"†\",\r\n    \"boxdot\" : \"⊡\",\r\n    \"succeq\" : \"≽\",\r\n    \"bowtie\" : \"⋈\",\r\n    \"subset\" : \"⊂\",\r\n    \"notin\" : \"∉\",\r\n    \"Sigma\" : \"Σ\",\r\n    \"Omega\" : \"Ω\",\r\n    \"nabla\" : \"∇\",\r\n    \"colon\" : \":\",\r\n    \"boxHu\" : \"╧\",\r\n    \"boxHd\" : \"╤\",\r\n    \"aleph\" : \"ℵ\",\r\n    \"gnsim\" : \"⋧\",\r\n    \"boxHU\" : \"╩\",\r\n    \"boxHD\" : \"╦\",\r\n    \"equiv\" : \"≡\",\r\n    \"lneqq\" : \"≨\",\r\n    \"alpha\" : \"α\",\r\n    \"amalg\" : \"∐\",\r\n    \"boxhU\" : \"╨\",\r\n    \"boxhD\" : \"╥\",\r\n    \"uplus\" : \"⊎\",\r\n    \"boxhu\" : \"┴\",\r\n    \"kappa\" : \"κ\",\r\n    \"sigma\" : \"σ\",\r\n    \"boxDL\" : \"╗\",\r\n    \"Theta\" : \"Θ\",\r\n    \"Vdash\" : \"⊩\",\r\n    \"boxDR\" : \"╔\",\r\n    \"boxDl\" : \"╖\",\r\n    \"sqcap\" : \"⊓\",\r\n    \"boxDr\" : \"╓\",\r\n    \"bar{}\" : \"¯\",\r\n    \"dashv\" : \"⊣\",\r\n    \"vDash\" : \"⊨\",\r\n    \"boxdl\" : \"┐\",\r\n    \"boxVl\" : \"╢\",\r\n    \"boxVh\" : \"╫\",\r\n    \"boxVr\" : \"╟\",\r\n    \"boxdr\" : \"┌\",\r\n    \"boxdL\" : \"╕\",\r\n    \"boxVL\" : \"╣\",\r\n    \"boxVH\" : \"╬\",\r\n    \"boxVR\" : \"╠\",\r\n    \"boxdR\" : \"╒\",\r\n    \"theta\" : \"θ\",\r\n    \"lhblk\" : \"▄\",\r\n    \"uhblk\" : \"▀\",\r\n    \"ldotp\" : \".\",\r\n    \"ldots\" : \"…\",\r\n    \"boxvL\" : \"╡\",\r\n    \"boxvH\" : \"╪\",\r\n    \"boxvR\" : \"╞\",\r\n    \"boxvl\" : \"┤\",\r\n    \"boxvh\" : \"┼\",\r\n    \"boxvr\" : \"├\",\r\n    \"Delta\" : \"Δ\",\r\n    \"boxUR\" : \"╚\",\r\n    \"boxUL\" : \"╝\",\r\n    \"oplus\" : \"⊕\",\r\n    \"boxUr\" : \"╙\",\r\n    \"boxUl\" : \"╜\",\r\n    \"doteq\" : \"≐\",\r\n    \"happy\" : \"㋡\",\r\n    \"varpi\" : \"ϖ\",\r\n    \"smile\" : \"☺\",\r\n    \"boxul\" : \"┘\",\r\n    \"simeq\" : \"≃\",\r\n    \"boxuR\" : \"╘\",\r\n    \"boxuL\" : \"╛\",\r\n    \"boxhd\" : \"┬\",\r\n    \"gimel\" : \"ℷ\",\r\n    \"Gamma\" : \"Γ\",\r\n    \"lnsim\" : \"⋦\",\r\n    \"sqcup\" : \"⊔\",\r\n    \"omega\" : \"ω\",\r\n    \"sharp\" : \"♯\",\r\n    \"times\" : \"×\",\r\n    \"block\" : \"█\",\r\n    \"hat{}\" : \"^\",\r\n    \"wedge\" : \"∧\",\r\n    \"vdash\" : \"⊢\",\r\n    \"angle\" : \"∠\",\r\n    \"infty\" : \"∞\",\r\n    \"gamma\" : \"γ\",\r\n    \"asymp\" : \"≍\",\r\n    \"rceil\" : \"⌉\",\r\n    \"dot{}\" : \"˙\",\r\n    \"lceil\" : \"⌈\",\r\n    \"delta\" : \"δ\",\r\n    \"gneqq\" : \"≩\",\r\n    \"frown\" : \"⌢\",\r\n    \"phone\" : \"☎\",\r\n    \"vdots\" : \"⋮\",\r\n    \"boxr\" : \"└\",\r\n    \"k{i}\" : \"į\",\r\n    \"`{I}\" : \"Ì\",\r\n    \"perp\" : \"⊥\",\r\n    \"\\\"{o}\" : \"ö\",\r\n    \"={I}\" : \"Ī\",\r\n    \"`{a}\" : \"à\",\r\n    \"v{T}\" : \"Ť\",\r\n    \"surd\" : \"√\",\r\n    \"H{O}\" : \"Ő\",\r\n    \"vert\" : \"|\",\r\n    \"k{I}\" : \"Į\",\r\n    \"\\\"{y}\" : \"ÿ\",\r\n    \"\\\"{O}\" : \"Ö\",\r\n    \"u{u}\" : \"ў\",\r\n    \"u{G}\" : \"Ğ\",\r\n    \".{E}\" : \"Ė\",\r\n    \".{z}\" : \"ż\",\r\n    \"v{t}\" : \"ť\",\r\n    \"prec\" : \"≺\",\r\n    \"H{o}\" : \"ő\",\r\n    \"mldr\" : \"…\",\r\n    \"cong\" : \"≅\",\r\n    \".{e}\" : \"ė\",\r\n    \"star\" : \"*\",\r\n    \".{Z}\" : \"Ż\",\r\n    \"geqq\" : \"≧\",\r\n    \"cdot\" : \"⋅\",\r\n    \"cdots\" : \"…\",\r\n    \"`{U}\" : \"Ù\",\r\n    \"v{L}\" : \"Ľ\",\r\n    \"c{s}\" : \"ş\",\r\n    \"~{A}\" : \"Ã\",\r\n    \"Vert\" : \"‖\",\r\n    \"k{e}\" : \"ę\",\r\n    \"lnot\" : \"¬\",\r\n    \"leqq\" : \"≦\",\r\n    \"beta\" : \"β\",\r\n    \"beth\" : \"ℶ\",\r\n    \"~{n}\" : \"ñ\",\r\n    \"u{i}\" : \"й\",\r\n    \"c{S}\" : \"Ş\",\r\n    \"c{N}\" : \"Ņ\",\r\n    \"H{u}\" : \"ű\",\r\n    \"v{n}\" : \"ň\",\r\n    \"={U}\" : \"Ū\",\r\n    \"~{O}\" : \"Õ\",\r\n    \"v{E}\" : \"Ě\",\r\n    \"H{U}\" : \"Ű\",\r\n    \"v{N}\" : \"Ň\",\r\n    \"prod\" : \"∏\",\r\n    \"v{s}\" : \"š\",\r\n    \"\\\"{U}\" : \"Ü\",\r\n    \"c{n}\" : \"ņ\",\r\n    \"k{U}\" : \"Ų\",\r\n    \"c{R}\" : \"Ŗ\",\r\n    \"~{o}\" : \"õ\",\r\n    \"v{e}\" : \"ě\",\r\n    \"v{S}\" : \"Š\",\r\n    \"u{A}\" : \"Ă\",\r\n    \"circ\" : \"∘\",\r\n    \"\\\"{u}\" : \"ü\",\r\n    \"flat\" : \"♭\",\r\n    \"v{z}\" : \"ž\",\r\n    \"r{U}\" : \"Ů\",\r\n    \"`{O}\" : \"Ò\",\r\n    \"={u}\" : \"ū\",\r\n    \"oint\" : \"∮\",\r\n    \"c{K}\" : \"Ķ\",\r\n    \"k{u}\" : \"ų\",\r\n    \"not<\" : \"≮\",\r\n    \"not>\" : \"≯\",\r\n    \"`{o}\" : \"ò\",\r\n    \"\\\"{I}\" : \"Ï\",\r\n    \"v{D}\" : \"Ď\",\r\n    \".{G}\" : \"Ġ\",\r\n    \"r{u}\" : \"ů\",\r\n    \"not=\" : \"≠\",\r\n    \"`{u}\" : \"ù\",\r\n    \"v{c}\" : \"č\",\r\n    \"c{k}\" : \"ķ\",\r\n    \".{g}\" : \"ġ\",\r\n    \"odot\" : \"⊙\",\r\n    \"`{e}\" : \"э\",\r\n    \"c{T}\" : \"Ţ\",\r\n    \"v{d}\" : \"ď\",\r\n    \"\\\"{e}\" : \"ё\",\r\n    \"v{R}\" : \"Ř\",\r\n    \"k{a}\" : \"ą\",\r\n    \"nldr\" : \"‥\",\r\n    \"`{A}\" : \"À\",\r\n    \"~{N}\" : \"Ñ\",\r\n    \"nmid\" : \"∤\",\r\n    \".{C}\" : \"Ċ\",\r\n    \"zeta\" : \"ζ\",\r\n    \"~{u}\" : \"ũ\",\r\n    \"`{E}\" : \"Э\",\r\n    \"~{a}\" : \"ã\",\r\n    \"c{t}\" : \"ţ\",\r\n    \"={o}\" : \"ō\",\r\n    \"v{r}\" : \"ř\",\r\n    \"={A}\" : \"Ā\",\r\n    \".{c}\" : \"ċ\",\r\n    \"~{U}\" : \"Ũ\",\r\n    \"k{A}\" : \"Ą\",\r\n    \"\\\"{a}\" : \"ä\",\r\n    \"u{U}\" : \"Ў\",\r\n    \"iota\" : \"ι\",\r\n    \"={O}\" : \"Ō\",\r\n    \"c{C}\" : \"Ç\",\r\n    \"gneq\" : \"≩\",\r\n    \"boxH\" : \"═\",\r\n    \"hbar\" : \"ℏ\",\r\n    \"\\\"{A}\" : \"Ä\",\r\n    \"boxv\" : \"│\",\r\n    \"boxh\" : \"─\",\r\n    \"male\" : \"♂\",\r\n    \"sqrt\" : \"√\",\r\n    \"succ\" : \"≻\",\r\n    \"c{c}\" : \"ç\",\r\n    \"v{l}\" : \"ľ\",\r\n    \"u{a}\" : \"ă\",\r\n    \"v{Z}\" : \"Ž\",\r\n    \"c{G}\" : \"Ģ\",\r\n    \"v{C}\" : \"Č\",\r\n    \"lneq\" : \"≨\",\r\n    \"{E}\" : \"Ё\",\r\n    \"={a}\" : \"ā\",\r\n    \"c{l}\" : \"ļ\",\r\n    \"={E}\" : \"Ē\",\r\n    \"boxV\" : \"║\",\r\n    \"u{g}\" : \"ğ\",\r\n    \"u{I}\" : \"Й\",\r\n    \"c{L}\" : \"Ļ\",\r\n    \"k{E}\" : \"Ę\",\r\n    \".{I}\" : \"İ\",\r\n    \"~{I}\" : \"Ĩ\",\r\n    \"c{r}\" : \"ŗ\",\r\n    \"{Y}\" : \"Ÿ\",\r\n    \"={e}\" : \"ē\",\r\n    \"leq\" : \"≤\",\r\n    \"Cup\" : \"⋓\",\r\n    \"Psi\" : \"Ψ\",\r\n    \"neq\" : \"≠\",\r\n    \"k{}\" : \"˛\",\r\n    \"={}\" : \"‾\",\r\n    \"H{}\" : \"˝\",\r\n    \"cup\" : \"∪\",\r\n    \"geq\" : \"≥\",\r\n    \"mho\" : \"℧\",\r\n    \"Dzh\" : \"Џ\",\r\n    \"cap\" : \"∩\",\r\n    \"bot\" : \"⊥\",\r\n    \"psi\" : \"ψ\",\r\n    \"chi\" : \"χ\",\r\n    \"c{}\" : \"¸\",\r\n    \"Phi\" : \"Φ\",\r\n    \"ast\" : \"*\",\r\n    \"ell\" : \"ℓ\",\r\n    \"top\" : \"⊤\",\r\n    \"lll\" : \"⋘\",\r\n    \"tau\" : \"τ\",\r\n    \"Cap\" : \"⋒\",\r\n    \"sad\" : \"☹\",\r\n    \"iff\" : \"⇔\",\r\n    \"eta\" : \"η\",\r\n    \"eth\" : \"ð\",\r\n    \"d{\" : \"\ṭ\",\r\n    \"rho\" : \"ρ\",\r\n    \"dzh\" : \"џ\",\r\n    \"div\" : \"÷\",\r\n    \"phi\" : \"ϕ\",\r\n    \"Rsh\" : \"↱\",\r\n    \"vee\" : \"∨\",\r\n    \"b{}\" : \"ˍ\",\r\n    \"t{\" : \"\t͡\",\r\n    \"int\" : \"∫\",\r\n    \"sim\" : \"∼\",\r\n    \"r{}\" : \"˚\",\r\n    \"Lsh\" : \"↰\",\r\n    \"yen\" : \"¥\",\r\n    \"ggg\" : \"⋙\",\r\n    \"mid\" : \"∣\",\r\n    \"sum\" : \"∑\",\r\n    \"neg\" : \"¬\",\r\n    \"Dz\" : \"Ѕ\",\r\n    \"Re\" : \"ℜ\",\r\n    \"oe\" : \"œ\",\r\n    \"DH\" : \"Ð\",\r\n    \"ll\" : \"≪\",\r\n    \"ng\" : \"ŋ\",\r\n    \"wr\" : \"≀\",\r\n    \"wp\" : \"℘\",\r\n    \"=I\" : \"І\",\r\n    \":)\" : \"☺\",\r\n    \":(\" : \"☹\",\r\n    \"AE\" : \"Æ\",\r\n    \"AA\" : \"Å\",\r\n    \"ss\" : \"ß\",\r\n    \"dz\" : \"ѕ\",\r\n    \"ae\" : \"æ\",\r\n    \"aa\" : \"å\",\r\n    \"th\" : \"þ\",\r\n    \"to\" : \"→\",\r\n    \"Pi\" : \"Π\",\r\n    \"mp\" : \"∓\",\r\n    \"Im\" : \"ℑ\",\r\n    \"pm\" : \"±\",\r\n    \"pi\" : \"π\",\r\n    \"\\\"I\" : \"Ї\",\r\n    \"in\" : \"∈\",\r\n    \"ni\" : \"∋\",\r\n    \"ne\" : \"≠\",\r\n    \"TH\" : \"Þ\",\r\n    \"Xi\" : \"Ξ\",\r\n    \"nu\" : \"ν\",\r\n    \"NG\" : \"Ŋ\",\r\n    \":G\" : \"㋡\",\r\n    \"xi\" : \"ξ\",\r\n    \"OE\" : \"Œ\",\r\n    \"gg\" : \"≫\",\r\n    \"DJ\" : \"Đ\",\r\n    \"=e\" : \"є\",\r\n    \"=E\" : \"Є\",\r\n    \"mu\" : \"μ\",\r\n    \"dj\" : \"đ\",\r\n    // \"&\" : \"&\",\r\n    // \"$\" : \"$\",\r\n    // \"%\" : \"%\",\r\n    // \"#\" : \"#\",\r\n    // \"-\" : \"­\",\r\n    \"S\" : \"§\",\r\n    \"P\" : \"¶\",\r\n    \"O\" : \"Ø\",\r\n    \"L\" : \"Ł\",\r\n    // \"}\" : \"}\",\r\n    \"o\" : \"ø\",\r\n    \"l\" : \"ł\",\r\n    \"h\" : \"ℎ\",\r\n    \"i\" : \"ℹ\",\r\n    // \"-\" : \"−\",\r\n    \"'{Y}\" : \"Ý\",\r\n    \"'{y}\" : \"ý\",\r\n    \"'{L}\" : \"Ĺ\",\r\n    \"'{e}\" : \"é\",\r\n    \"'{l}\" : \"ĺ\",\r\n    \"'{s}\" : \"ś\",\r\n    \"'{z}\" : \"ź\",\r\n    \"'{E}\" : \"É\",\r\n    \"'{S}\" : \"Ś\",\r\n    \"'{Z}\" : \"Ź\",\r\n    \"'{R}\" : \"Ŕ\",\r\n    \"'{A}\" : \"Á\",\r\n    \"'{N}\" : \"Ń\",\r\n    \"'{I}\" : \"Í\",\r\n    \"'{n}\" : \"ń\",\r\n    \"'{c}\" : \"ć\",\r\n    \"'{u}\" : \"ú\",\r\n    \"'{C}\" : \"Ć\",\r\n    \"'{o}\" : \"ó\",\r\n    \"'{a}\" : \"á\",\r\n    \"'{O}\" : \"Ó\",\r\n    \"'{g}\" : \"ǵ\",\r\n    \"'{r}\" : \"ŕ\",\r\n    \"'{U}\" : \"Ú\",\r\n    \"'G\" : \"Ѓ\",\r\n    \"'C\" : \"Ћ\",\r\n    \"'K\" : \"Ќ\",\r\n    \"'k\" : \"ќ\",\r\n    \"'c\" : \"ћ\",\r\n    \"'g\" : \"ѓ\",\r\n}\r\n\r\n\r\nexport function str_latex_to_unicode(str : string){\r\n    str = str;\r\n    for (let key in latex_greek){\r\n        str = str.replaceAll(key, (latex_greek as any)[key]);\r\n    }\r\n    for (let key in latex_symbols){\r\n        str = str.replaceAll('\\\\'+key, (latex_symbols as any)[key]);\r\n    }\r\n    return str;\r\n}\r\nexport function str_to_mathematical_italic(str : string) {\r\n    return [...str_latex_to_unicode(str)]\r\n        .map(c => (unicode_mathematical_italic as any)[c] || c).join('');\r\n}\r\nexport function str_to_normal_from_mathematical_italic(str : string) {\r\n    return [...str]\r\n        .map(c => reversed_unicode_mathematical_italic[c] || c).join('');\r\n}\r\n","import { Diagram, DiagramType, DiagramStyle, TextData, DEFAULT_FONTSIZE, LinearGradient } from \"./diagram.js\";\r\nimport { tab_color, get_color } from \"./color_palette.js\";\r\nimport { to_degree, expand_directional_value } from \"./utils.js\";\r\nimport { str_to_mathematical_italic, str_to_normal_from_mathematical_italic } from './unicode_utils.js'\r\nimport { TAG } from \"./tag_names.js\";\r\n\r\n// TODO : add guard for the dictionary key\r\n// since the implementation is using `for (let stylename in style)` without checking\r\n// if the correct key is in the dictionary, it can lead to unintended behavior\r\n// for example, `font-size` could be defined in default_text_diagram_style\r\n// and will shadow the `font-size` in default_diagram_style\r\n\r\nexport const default_diagram_style : DiagramStyle = {\r\n    \"fill\"             : \"none\",\r\n    \"stroke\"           : \"black\",\r\n    \"stroke-width\"     : \"1\",\r\n    \"stroke-linecap\"   : \"butt\",\r\n    \"stroke-dasharray\" : \"none\",\r\n    \"stroke-linejoin\"  : \"round\",\r\n    \"vector-effect\"    : \"non-scaling-stroke\",\r\n    \"opacity\"          : \"1\",\r\n}\r\nexport const _init_default_diagram_style : DiagramStyle = {...default_diagram_style}\r\n\r\nexport const default_text_diagram_style : DiagramStyle = {\r\n    \"fill\"             : \"black\",\r\n    \"stroke\"           : \"none\",\r\n    \"stroke-width\"     : \"1\",\r\n    \"stroke-linecap\"   : \"butt\",\r\n    \"stroke-dasharray\" : \"none\",\r\n    \"stroke-linejoin\"  : \"round\",\r\n    \"vector-effect\"    : \"non-scaling-stroke\",\r\n    \"opacity\"          : \"1\",\r\n}\r\nexport const _init_default_text_diagram_style : DiagramStyle = {...default_text_diagram_style}\r\n\r\nexport const default_textdata : TextData = {\r\n    \"text\"             : \"\",\r\n    \"font-family\"      : \"Latin Modern Math, sans-serif\",\r\n    \"font-size\"        : DEFAULT_FONTSIZE,\r\n    \"font-weight\"      : \"normal\",\r\n    \"text-anchor\"      : \"middle\",\r\n    \"dy\"               : \"0.25em\",\r\n    \"angle\"            : \"0\",\r\n    \"font-style\"       : \"normal\",\r\n    \"font-scale\"       : \"auto\",\r\n}\r\nexport const _init_default_textdata : TextData = {...default_textdata}\r\n\r\nexport function reset_default_styles() : void {\r\n    for (let s in default_diagram_style) \r\n        (default_diagram_style as any)[s] = (_init_default_diagram_style as any)[s];\r\n    for (let s in default_text_diagram_style)\r\n        (default_text_diagram_style as any)[s] = (_init_default_text_diagram_style as any)[s];\r\n    for (let s in default_textdata)\r\n        (default_textdata as any)[s] = (_init_default_textdata as any)[s];\r\n}\r\n\r\nfunction isLinearGradient(fill: string | LinearGradient): fill is LinearGradient {\r\n    return typeof fill === \"object\" && (fill as LinearGradient).type === \"linearGradient\";\r\n}\r\n\r\nfunction draw_polygon(\r\n    svgelement : SVGSVGElement, target_element : SVGSVGElement|SVGGElement,\r\n    diagram : Diagram, svgtag? : string\r\n) : void {\r\n    // get properties\r\n    let style = {...default_diagram_style, ...diagram.style}; // use default if not defined\r\n    style.fill = get_color(style.fill as string, tab_color);\r\n    style.stroke = get_color(style.stroke as string, tab_color);\r\n\r\n    // add def\r\n    let defs = svgelement.querySelector('defs');\r\n    if(!defs) {\r\n        defs = document.createElementNS(\"http://www.w3.org/2000/svg\" ,'defs')\r\n        svgelement.appendChild(defs)\r\n    }\r\n\r\n    if(isLinearGradient(style.fill)) {\r\n        // create gradient\r\n        const gradientId = `gradient-${Math.random().toString(36).substr(2, 9)}`;\r\n        const gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", 'linearGradient');\r\n        let {x1, x2, y1, y2} = style.fill;\r\n        gradient.setAttribute(\"id\", gradientId);\r\n        gradient.setAttribute(\"x1\", x1|| \"0%\")\r\n        gradient.setAttribute(\"y1\", y1 || \"0%\");\r\n        gradient.setAttribute(\"x2\", x2 || \"100%\");\r\n        gradient.setAttribute(\"y2\", y2 || \"0%\")\r\n\r\n        style.fill.stops.forEach(stop => {\r\n            const stopElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\r\n            stopElement.setAttribute(\"offset\", stop.offset)\r\n            stopElement.setAttribute(\"stop-color\", get_color(stop.color, tab_color));\r\n            if (stop.opacity !== undefined) {\r\n                stopElement.setAttribute(\"stop-opacity\", stop.opacity.toString());\r\n            }\r\n            gradient.appendChild(stopElement)\r\n        })\r\n\r\n        defs.appendChild(gradient);\r\n        style.fill = `url(#${gradientId})`\r\n\r\n    } else {\r\n        style.fill = get_color(style.fill, tab_color)\r\n    }\r\n\r\n    // draw svg\r\n    let polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n    for (let stylename in style) {\r\n        polygon.style[stylename as any] = (style as any)[stylename as any];\r\n    }\r\n    if (svgtag != undefined) polygon.setAttribute(\"_dg_tag\", svgtag);\r\n    // polygon.style.fill = color_fill;\r\n    // polygon.style.stroke = color_stroke;\r\n    // use tab_color color palette\r\n\r\n    target_element.appendChild(polygon);\r\n    if (diagram.path != undefined) {\r\n        for (let i = 0; i < diagram.path.points.length; i++) {\r\n            let p = diagram.path.points[i];\r\n            var point = svgelement.createSVGPoint();\r\n            point.x =  p.x;\r\n            point.y = -p.y;\r\n            polygon.points.appendItem(point);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction draw_curve(\r\n    svgelement : SVGSVGElement, target_element : SVGSVGElement|SVGGElement,\r\n    diagram : Diagram, svgtag? : string\r\n) : void {\r\n    // get properties\r\n    let style = {...default_diagram_style, ...diagram.style}; // use default if not defined\r\n    style.fill = \"none\";\r\n    style.stroke = get_color(style.stroke as string, tab_color);\r\n\r\n    // draw svg\r\n    let polyline = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\r\n    for (let stylename in style) {\r\n        polyline.style[stylename as any] = (style as any)[stylename as any];\r\n    }\r\n    if (svgtag != undefined) polyline.setAttribute(\"_dg_tag\", svgtag);\r\n\r\n    target_element.appendChild(polyline);\r\n    if (diagram.path != undefined) {\r\n        for (let i = 0; i < diagram.path.points.length; i++) {\r\n            let p = diagram.path.points[i];\r\n            var point = svgelement.createSVGPoint();\r\n            point.x =  p.x;\r\n            point.y = -p.y;\r\n            polyline.points.appendItem(point);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction is_dataURL(url : string) : boolean {\r\n    // Regular expression to check for data URL\r\n    const dataUrlPattern = /^data:image\\/(png|jpeg|jpg|gif|svg\\+xml);base64,/;\r\n    return dataUrlPattern.test(url);\r\n}\r\n\r\nconst _IMAGE_DATAURL_CACHE_MAP = new Map<string, string|undefined>();\r\n\r\n/**\r\n * Convert image href to data url\r\n * This is necessary so that the image diagram can be downloaded as png\r\n */\r\nfunction set_image_href_dataURL(img : SVGImageElement, src : string) : void{\r\n    // if it is already a dataURL, just set it\r\n    if (is_dataURL(src)) {\r\n        img.setAttribute(\"href\", src);\r\n        img.setAttribute(\"xlink:href\", src);\r\n        return;\r\n    }\r\n    \r\n    // if it's already cached, just set it\r\n    if (_IMAGE_DATAURL_CACHE_MAP.has(src)){\r\n        const dataURL = _IMAGE_DATAURL_CACHE_MAP.get(src)!;\r\n        if (!dataURL) return; \r\n        // dataURL can be undefined, indicating it's still loading or\r\n        // the image is not found\r\n        img.setAttribute(\"href\", dataURL);\r\n        img.setAttribute(\"xlink:href\", dataURL);\r\n        return;\r\n    }\r\n    \r\n    // _IMAGE_DATAURL_CACHE_MAP.set(src, undefined);\r\n    let canvas    = document.createElement(\"canvas\");\r\n    let ctx       = canvas.getContext('2d');\r\n\r\n    let base_image = new Image();\r\n    base_image.crossOrigin = \"anonymous\";\r\n    base_image.onload = () => {\r\n        canvas.height = base_image.height;\r\n        canvas.width  = base_image.width;\r\n        ctx?.drawImage(base_image, 0, 0);\r\n\r\n        // NOTE : we need to set both href and xlink:href for compatibility reason\r\n        // most browser already deprecate xlink:href because of SVG 2.0\r\n        // but other browser and image viewer/editor still only support xlink:href\r\n        // might be removed in the future\r\n        const dataURL = canvas.toDataURL(\"image/png\");\r\n        img.setAttribute(\"href\", dataURL);\r\n        img.setAttribute(\"xlink:href\", dataURL);\r\n        _IMAGE_DATAURL_CACHE_MAP.set(src, dataURL);\r\n        canvas.remove();\r\n    }\r\n    base_image.src = src;\r\n\r\n}\r\n\r\n/**\r\n * if `embed_image` is `true`, the image will be embedded as dataURL\r\n * this allow the image to be downloaded as SVG with the image embedded\r\n */\r\nfunction draw_image(\r\n    target_element: SVGSVGElement|SVGGElement,\r\n    diagram : Diagram, embed_image : boolean, svgtag? : string\r\n) : void {\r\n    let image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n    image.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\r\n    if (diagram.imgdata.src == undefined) return;\r\n    // make sure path is defined and have 4 points\r\n    if (diagram.path == undefined) return;\r\n    if (diagram.path.points.length != 4) return;\r\n\r\n    // it's calculated like this to be able to apply linear transformation\r\n    // path: bottom-left, bottom-right, top-right, top-left\r\n    // width  : 0-1\r\n    // height : 1-2\r\n    let width  = diagram.path.points[1].sub(diagram.path.points[0]).length();\r\n    let height = diagram.path.points[2].sub(diagram.path.points[1]).length();\r\n    \r\n    // calculate the linear transformation matrix\r\n    // [ a c ]\r\n    // [ b d ]\r\n    let ex = diagram.path.points[1].sub(diagram.path.points[0]).normalize();\r\n    let ey = diagram.path.points[3].sub(diagram.path.points[0]).normalize();\r\n    let a =  ex.x; let b = -ex.y;\r\n    let c = -ey.x; let d =  ey.y;\r\n\r\n    let xpos = diagram.path.points[3].x;\r\n    let ypos = -diagram.path.points[3].y;\r\n\r\n    if (embed_image) {\r\n        set_image_href_dataURL(image, diagram.imgdata.src);\r\n    } else {\r\n        image.setAttribute(\"href\", diagram.imgdata.src);\r\n    }\r\n    image.setAttribute(\"width\", width.toString());\r\n    image.setAttribute(\"height\", height.toString());\r\n    image.setAttribute(\"transform\", `matrix(${a} ${b} ${c} ${d} ${xpos} ${ypos})`);\r\n    image.setAttribute(\"preserveAspectRatio\", \"none\");\r\n    if (svgtag != undefined) image.setAttribute(\"_dg_tag\", svgtag);\r\n\r\n    target_element.appendChild(image);\r\n}\r\n\r\n/**\r\n * Collect all DiagramType.Text in the diagram\r\n * @param diagram the outer diagram\r\n * @returns a list of DiagramType.Text\r\n*/\r\nfunction collect_text(diagram : Diagram, type : DiagramType.Text | DiagramType.MultilineText) : Diagram[] {\r\n    if (diagram.type == type) {\r\n        return [diagram];\r\n    } else if (diagram.type == DiagramType.Diagram) {\r\n        let result : Diagram[] = [];\r\n        for (let d of diagram.children) {\r\n            result = result.concat(collect_text(d, type));\r\n        }\r\n        return result;\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n/** Calculate the scaling factor for the text based on the reference svg element */\r\nexport function calculate_text_scale(referencesvgelement : SVGSVGElement, padding? : [number, number, number, number]) : number {\r\n    const pad = expand_directional_value(padding ?? 0)\r\n    let bbox = referencesvgelement.getBBox();\r\n    let refsvgelement_width = referencesvgelement.width.baseVal.value - pad[1] - pad[3];\r\n    let refsvgelement_height = referencesvgelement.height.baseVal.value - pad[0] - pad[2];\r\n    return Math.max(bbox.width / refsvgelement_width, bbox.height / refsvgelement_height)\r\n}\r\n\r\n/**\r\n * @param svgelement the svg element to draw to\r\n * @param diagrams the list of text diagrams to draw\r\n * @param calculated_scale the calculated scale for the text\r\n */\r\nfunction draw_texts(\r\n    target_element: SVGSVGElement|SVGGElement,\r\n    diagrams : Diagram[], \r\n    calculated_scale : number, svgtag? : string\r\n) : void {\r\n    for (let diagram of diagrams) {\r\n        let style = {...default_text_diagram_style, ...diagram.style}; // use default if not defined\r\n        style.fill = get_color(style.fill as string, tab_color);\r\n        style.stroke = get_color(style.stroke as string, tab_color);\r\n\r\n        let textdata = {...default_textdata, ...diagram.textdata}; // use default if not defined\r\n        if (diagram.path == undefined) { throw new Error(\"Text must have a path\"); }\r\n        // draw svg of text\r\n        let text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n        // text.setAttribute(\"x\", diagram.path.points[0].x.toString());\r\n        // text.setAttribute(\"y\", (-diagram.path.points[0].y).toString());\r\n        let xpos = diagram.path.points[0].x;\r\n        let ypos = -diagram.path.points[0].y;\r\n        let angle_deg = to_degree(parseFloat(textdata[\"angle\"] as string));\r\n\r\n        let scale = textdata[\"font-scale\"] == \"auto\" ? \r\n            calculated_scale : parseFloat(textdata[\"font-scale\"] as string);\r\n        let font_size = parseFloat(textdata[\"font-size\"] as string) * scale;\r\n\r\n        // set font styles (font-family, font-size, font-weight)\r\n        text.setAttribute(\"font-family\", textdata[\"font-family\"] as string);\r\n        text.setAttribute(\"font-style\", textdata[\"font-style\"] as string);\r\n        text.setAttribute(\"font-size\", font_size.toString());\r\n        text.setAttribute(\"font-weight\", textdata[\"font-weight\"] as string);\r\n        text.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\r\n        text.setAttribute(\"dy\", textdata[\"dy\"] as string);\r\n        // text.setAttribute(\"dominant-baseline\", textdata[\"dominant-baseline\"] as string);\r\n        text.setAttribute(\"transform\", `translate(${xpos} ${ypos}) rotate(${angle_deg}) `);\r\n        if (svgtag != undefined) text.setAttribute(\"_dg_tag\", svgtag);\r\n\r\n        // custom attribute for tex display\r\n        text.setAttribute(\"_x\", xpos.toString());\r\n        text.setAttribute(\"_y\", ypos.toString());\r\n        text.setAttribute(\"_angle\", angle_deg.toString());\r\n        \r\n        for (let stylename in style) {\r\n            text.style[stylename as any] = (style as any)[stylename as any];\r\n        }\r\n\r\n        // set the content of the text\r\n        let text_content = textdata[\"text\"];\r\n        if (diagram.tags.includes(TAG.TEXTVAR) && !is_texstr(text_content)) \r\n            text_content = str_to_mathematical_italic(text_content);\r\n        text.innerHTML = text_content;\r\n\r\n        // add to svgelement\r\n        target_element.appendChild(text);\r\n    }\r\n}\r\n\r\n/**\r\n * @param svgelement the svg element to draw to\r\n * @param diagrams the list of text diagrams to draw\r\n * @param calculated_scale the calculated scale for the text\r\n */\r\nfunction draw_multiline_texts(\r\n    target_element : SVGSVGElement|SVGGElement,\r\n    diagrams : Diagram[],  calculated_scale : number, svgtag? : string\r\n) : void {\r\n    for (let diagram of diagrams) {\r\n    //     let style = {...default_text_diagram_style, ...diagram.style}; // use default if not defined\r\n    //     style.fill = get_color(style.fill as string, tab_color);\r\n    //     style.stroke = get_color(style.stroke as string, tab_color);\r\n    //\r\n    //     let textdata = {...default_textdata, ...diagram.textdata}; // use default if not defined\r\n        if (diagram.path == undefined) { throw new Error(\"Text must have a path\"); }\r\n        // draw svg of text\r\n        let textsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n        let xpos = diagram.path.points[0].x;\r\n        let ypos = -diagram.path.points[0].y;\r\n        // let angle_deg = to_degree(parseFloat(textdata[\"angle\"] as string));\r\n        let angle_deg = 0;\r\n\r\n\r\n        // use default if not defined\r\n        let textdata = {...default_textdata, ...{dy:\"0\", \"text-anchor\":\"start\"}, ...diagram.textdata}; \r\n        let diagram_font_size = textdata[\"font-size\"];\r\n\r\n\r\n        if (diagram.multilinedata?.content == undefined) { throw new Error(\"MultilineText must have multilinedata\"); }\r\n        // let current_line : number = 0;\r\n        let dg_scale_factor = diagram.multilinedata[\"scale-factor\"] ?? 1;\r\n        let is_firstline : boolean = true;\r\n        let is_in_front  : boolean = true;\r\n        let newline_dy   : string  = \"1em\";\r\n        for (let tspandata of diagram.multilinedata.content) {\r\n\r\n            if (tspandata.text == \"\\n\") { \r\n                is_in_front = true; \r\n                newline_dy = tspandata.style['dy'] ?? \"1em\";\r\n                continue; \r\n            }\r\n\r\n            // create tspan for each tspandata\r\n            let tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n\r\n            let not_setting_dy = (tspandata.style['dy'] == undefined)\r\n            let tspanstyle = {\r\n                ...default_text_diagram_style, \r\n                ...textdata,\r\n                ...{dy : \"0\", dx : \"0\"}, \r\n                ...{\"font-size\" : diagram_font_size},\r\n                ...tspandata.style\r\n            };\r\n\r\n            if (is_in_front) {\r\n                tspan.setAttribute(\"x\", \"0\");\r\n                let textdata_dy = textdata[\"dy\"] as string ?? \"0\";\r\n                if (not_setting_dy) tspanstyle.dy = is_firstline ? textdata_dy : newline_dy;\r\n                is_in_front = false;\r\n            }\r\n\r\n            let scale = tspanstyle[\"font-scale\"] == \"auto\" ? \r\n                calculated_scale : parseFloat(tspanstyle[\"font-scale\"] as string);\r\n            let font_size_scale_factor = tspanstyle[\"font-size-scale-factor\"] ?? 1;\r\n            let font_size = parseFloat(tspanstyle[\"font-size\"] as string) \r\n                * scale * dg_scale_factor * font_size_scale_factor;\r\n\r\n            if (tspanstyle[\"tag\"]) tspan.setAttribute(\"_dg_tag\", tspanstyle[\"tag\"] as string);\r\n\r\n            tspan.style.whiteSpace = \"pre\";\r\n            // if we do style.whiteSpace in `textsvg`, it doesnt work in Apple's webkit\r\n            tspan.setAttribute(\"dx\", tspanstyle.dx as string);\r\n            tspan.setAttribute(\"dy\", tspanstyle.dy as string);\r\n            tspan.setAttribute(\"font-style\", tspanstyle[\"font-style\"] as string);\r\n            tspan.setAttribute(\"font-family\", tspanstyle[\"font-family\"] as string);\r\n            // tspan.setAttribute(\"font-size\", tspanstyle[\"font-size\"] as string);\r\n            tspan.setAttribute(\"font-size\", font_size.toString());\r\n            tspan.setAttribute(\"font-weight\", tspanstyle[\"font-weight\"] as string);\r\n            // tspan.setAttribute(\"text-anchor\", tspanstyle[\"text-anchor\"] as string);\r\n            tspan.style[\"fill\"] = get_color(tspanstyle.fill as string, tab_color);\r\n            tspan.style[\"stroke\"] = get_color(tspanstyle.stroke as string, tab_color);\r\n            tspan.style[\"opacity\"] = tspanstyle.opacity as string;\r\n            // if baseline-shift is defined, set it\r\n            if (tspanstyle[\"baseline-shift\"]) \r\n                tspan.setAttribute(\"baseline-shift\", tspanstyle[\"baseline-shift\"] as string);\r\n\r\n            let text = tspandata.text;\r\n            if (tspanstyle[\"textvar\"]) text = str_to_mathematical_italic(text);\r\n            tspan.innerHTML = text;\r\n            textsvg.appendChild(tspan);\r\n\r\n            is_firstline = false;\r\n        }\r\n\r\n        //\r\n        // let scale = textdata[\"font-scale\"] == \"auto\" ? \r\n        //     calculated_scale : parseFloat(textdata[\"font-scale\"] as string);\r\n        // let font_size = parseFloat(textdata[\"font-size\"] as string) * scale;\r\n        //\r\n        // // set font styles (font-family, font-size, font-weight)\r\n        // text.setAttribute(\"font-family\", textdata[\"font-family\"] as string);\r\n        // text.setAttribute(\"font-size\", font_size.toString());\r\n        // text.setAttribute(\"font-weight\", textdata[\"font-weight\"] as string);\r\n        // text.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\r\n        // // text.setAttribute(\"dominant-baseline\", textdata[\"dominant-baseline\"] as string);\r\n        textsvg.setAttribute(\"dy\", textdata[\"dy\"] as string);\r\n        textsvg.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\r\n        textsvg.setAttribute(\"transform\", `translate(${xpos} ${ypos}) rotate(${angle_deg}) `);\r\n        if (svgtag != undefined) textsvg.setAttribute(\"_dg_tag\", svgtag);\r\n        //\r\n        // // custom attribute for tex display\r\n        // text.setAttribute(\"_x\", xpos.toString());\r\n        // text.setAttribute(\"_y\", ypos.toString());\r\n        // text.setAttribute(\"_angle\", angle_deg.toString());\r\n        // \r\n        // for (let stylename in style) {\r\n        //     text.style[stylename as any] = (style as any)[stylename as any];\r\n        // }\r\n        //\r\n        // // set the content of the text\r\n        // let text_content = textdata[\"text\"];\r\n        // if (diagram.tags.includes('textvar') && !is_texstr(text_content)) \r\n        //     text_content = str_to_mathematical_italic(text_content);\r\n        // text.innerHTML = text_content;\r\n        //\r\n        // // add to svgelement\r\n        target_element.appendChild(textsvg);\r\n    }\r\n}\r\n\r\n/**\r\n * Get all svg elements with a specific tag\r\n * @param svgelement the svg element to search\r\n * @param tag the tag to search\r\n * @returns a list of svg elements with the tag\r\n */\r\nexport function get_tagged_svg_element(tag : string, svgelement : SVGElement) : SVGElement[] {\r\n    let result : SVGElement[] = [];\r\n    for (let i in svgelement.children) {\r\n        let child = svgelement.children[i];\r\n        if (!(child instanceof SVGElement)) continue;\r\n        if (child.getAttribute(\"_dg_tag\") == tag) {\r\n            result.push(child);\r\n        }\r\n        // recurse through all children\r\n        if (child.children?.length) {\r\n            result = result.concat(get_tagged_svg_element(tag, child));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param svgelement the svg element to draw to\r\n * @param diagram the diagram to draw\r\n * @param render_text whether to render text\r\n * @param embed_image (optional) whether to embed images\r\n * this allow the image to be downloaded as SVG with the image embedded\r\n * @param text_scaling_factor (optional) the scaling factor for text\r\n * @param svgtag (optional) the tag to add to the svg element\r\n */\r\nexport function f_draw_to_svg(\r\n    svgelement : SVGSVGElement, target_element: SVGSVGElement|SVGGElement,\r\n    diagram : Diagram, render_text : boolean = true, embed_image : boolean = false,\r\n    text_scaling_factor? : number, svgtag? : string\r\n) : void {\r\n    if (diagram.type == DiagramType.Polygon) {\r\n        draw_polygon(svgelement, target_element, diagram, svgtag);\r\n    } else if (diagram.type == DiagramType.Curve){\r\n        draw_curve(svgelement, target_element, diagram, svgtag);\r\n    } else if (diagram.type == DiagramType.Text || diagram.type == DiagramType.MultilineText){\r\n        // do nothing\r\n    } else if (diagram.type == DiagramType.Image){\r\n        draw_image(target_element, diagram, embed_image, svgtag);\r\n    } else if (diagram.type == DiagramType.Diagram){\r\n        for (let d of diagram.children) {\r\n            f_draw_to_svg(svgelement, target_element, d, false, embed_image, undefined, svgtag);\r\n        }\r\n    } else {\r\n        console.warn(\"Unreachable, unknown diagram type : \" + diagram.type);\r\n    }\r\n\r\n    // draw text last to make the scaling works\r\n    // because the text is scaled based on the bounding box of the svgelement\r\n    if (render_text) {\r\n        if (text_scaling_factor == undefined){\r\n            text_scaling_factor = calculate_text_scale(svgelement);\r\n        }\r\n        let text_diagrams      : Diagram[] = collect_text(diagram, DiagramType.Text);\r\n        let multiline_diagrams : Diagram[] = collect_text(diagram, DiagramType.MultilineText);\r\n        draw_texts(target_element, text_diagrams, text_scaling_factor ?? 1, svgtag);\r\n        draw_multiline_texts(target_element, multiline_diagrams, text_scaling_factor ?? 1, svgtag);\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * WARNING: DEPRECATED\r\n * use `draw_to_svg_element` instead\r\n *\r\n * Draw a diagram to an svg element\r\n * @param outer_svgelement the outer svg element to draw to\r\n * @param diagram the diagram to draw\r\n * @param set_html_attribute whether to set the html attribute of the outer_svgelement\r\n * @param render_text whether to render text\r\n * @param clear_svg whether to clear the svg before drawing\r\n */\r\nexport function draw_to_svg(outer_svgelement : SVGSVGElement, diagram : Diagram,\r\n    set_html_attribute : boolean = true, render_text : boolean = true, clear_svg : boolean = true) : void {\r\n    let options : draw_to_svg_options = {\r\n        set_html_attribute : set_html_attribute,\r\n        render_text : render_text,\r\n        clear_svg : clear_svg,\r\n    };\r\n    draw_to_svg_element(outer_svgelement, diagram, options);\r\n}\r\n\r\nexport interface draw_to_svg_options {\r\n    set_html_attribute? : boolean,\r\n    render_text? : boolean,\r\n    clear_svg? : boolean,\r\n    embed_image? : boolean,\r\n    background_color? : string,\r\n    padding? : number | number[],\r\n    text_scaling_reference_svg? : SVGSVGElement,\r\n    text_scaling_reference_padding? : number | number[],\r\n    filter_strings? : string[],\r\n}\r\n\r\n// TODO: replace draw_to_svg with the current draw_to_svg_element in the next major version\r\n\r\n/**\r\n * Draw a diagram to an svg element\r\n * @param outer_svgelement the outer svg element to draw to\r\n * @param diagram the diagram to draw\r\n * @param options the options for drawing\r\n * ```typescript\r\n * options : {\r\n *    set_html_attribute? : boolean (true),\r\n *    render_text? : boolean (true),\r\n *    clear_svg? : boolean (true),\r\n *    embed_image? : boolean (false),\r\n *    background_color? : string (undefined),\r\n *    padding? : number | number[] (10),\r\n *    text_scaling_reference_svg? : SVGSVGElement (undefined),\r\n *    text_scaling_reference_padding? : number | number[] (undefined),\r\n * }\r\n * ````\r\n * define `text_scaling_reference_svg` and `text_scaling_reference_padding` to scale text based on another svg element\r\n */\r\nexport function draw_to_svg_element(outer_svgelement : SVGSVGElement, diagram : Diagram, options : draw_to_svg_options = {}) : void {\r\n    const set_html_attribute = options.set_html_attribute ?? true;\r\n    const render_text = options.render_text ?? true;\r\n    const clear_svg = options.clear_svg ?? true;\r\n    const embed_image = options.embed_image ?? false;\r\n    \r\n    let svgelement : SVGSVGElement | undefined = undefined;\r\n    // check if outer_svgelement has a child with meta=diagram_svg\r\n    for (let i in outer_svgelement.children) {\r\n        let child = outer_svgelement.children[i];\r\n        if (child instanceof SVGSVGElement && child.getAttribute(\"meta\") == \"diagram_svg\") {\r\n            svgelement = child;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (svgelement == undefined) {\r\n        // if svgelemet doesn't exist yet, create it\r\n        // create an inner svg element\r\n        svgelement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svgelement.setAttribute(\"meta\", \"diagram_svg\")\r\n        svgelement.setAttribute(\"width\", \"100%\");\r\n        svgelement.setAttribute(\"height\", \"100%\");\r\n        outer_svgelement.appendChild(svgelement);\r\n    }\r\n    \r\n    handle_filter_strings(outer_svgelement, options.filter_strings);\r\n\r\n    let text_scaling_factor : number | undefined = undefined;\r\n    if (options.text_scaling_reference_svg) {\r\n        options.text_scaling_reference_padding = options.text_scaling_reference_padding ?? options.padding ?? 10;\r\n        options.text_scaling_reference_padding = expand_directional_value(options.text_scaling_reference_padding);\r\n        text_scaling_factor = calculate_text_scale(\r\n            options.text_scaling_reference_svg,\r\n            options.text_scaling_reference_padding as [number, number, number, number]\r\n        );\r\n    }\r\n    \r\n    // TODO : for performance, do smart clearing of svg, and not just clear everything\r\n    if (clear_svg) svgelement.innerHTML = \"\";\r\n\r\n    f_draw_to_svg(svgelement, svgelement, diagram, render_text, embed_image, text_scaling_factor);\r\n\r\n    if (set_html_attribute) {\r\n        const pad_px = expand_directional_value(options.padding ?? 10);\r\n        // set viewbox to the bounding box\r\n        let bbox = svgelement.getBBox();\r\n        // add padding of 10px to the bounding box (if the graph is small, it'll mess it up)\r\n        // scale 10px based on the width and height of the svg\r\n        let svg_width = svgelement.width.baseVal.value - pad_px[1] - pad_px[3];\r\n        let svg_height = svgelement.height.baseVal.value - pad_px[0] - pad_px[2];\r\n        let scale = Math.max(bbox.width / svg_width, bbox.height / svg_height)\r\n        let pad = pad_px.map(p => p*scale);\r\n        // [top, right, bottom, left]\r\n        bbox.x -= pad[3];\r\n        bbox.y -= pad[0];\r\n        bbox.width += pad[1] + pad[3];\r\n        bbox.height += pad[0] + pad[2];\r\n        svgelement.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`);\r\n        // set preserveAspectRatio to xMidYMid meet\r\n        svgelement.setAttribute(\"preserveAspectRatio\", \"xMidYMid meet\");\r\n        outer_svgelement.style.overflow = \"visible\";\r\n    }\r\n    \r\n    if (options.background_color) {\r\n        let bbox = svgelement.getBBox();\r\n        // if svgelement has viewBox set, use it instead of getBBox\r\n        if (svgelement.viewBox.baseVal.width !== 0) bbox = svgelement.viewBox.baseVal;\r\n        \r\n        // draw a rectangle as the background\r\n        let rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n        rect.setAttribute(\"x\", bbox.x.toString());\r\n        rect.setAttribute(\"y\", bbox.y.toString());\r\n        rect.setAttribute(\"width\", bbox.width.toString());\r\n        rect.setAttribute(\"height\", bbox.height.toString());\r\n        rect.style.fill = get_color(options.background_color as string, tab_color);\r\n        rect.style.stroke = \"none\";\r\n        \r\n        // prepend\r\n        svgelement.insertBefore(rect, svgelement.firstChild);\r\n    }\r\n}\r\n\r\nfunction handle_filter_strings(svgelement : SVGSVGElement, filter_strings? : string[]) : void {\r\n    if (filter_strings == undefined || filter_strings.length == 0) return;\r\n    \r\n    let defs = svgelement.querySelector(\"defs\");\r\n    if (defs == null) {\r\n        defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n        svgelement.insertBefore(defs, svgelement.firstChild);\r\n    }\r\n    \r\n    defs.innerHTML = \"\";\r\n    for (let filter_string of filter_strings) {\r\n        defs.innerHTML += filter_string;\r\n    }\r\n}\r\n\r\nfunction is_texstr(s : string) : boolean {\r\n    return s.startsWith(\"$\") && s.endsWith(\"$\");\r\n}\r\nfunction is_texdisplaystr(s : string) : boolean {\r\n    return s.startsWith(\"$$\") && s.endsWith(\"$$\");\r\n}\r\nfunction strip_texstr(s : string) : string {\r\n    if (is_texdisplaystr(s)) return s.substring(2, s.length-2);\r\n    if (is_texstr(s)) return s.substring(1, s.length-1);\r\n    return s;\r\n}\r\n\r\ntype texhandler_config = {\r\n    display : boolean,\r\n    // fontsize : number,\r\n}\r\ntype texhadler_function = (texstr : string, config : texhandler_config) => string; // return SVG string\r\n\r\n/**\r\n * Recursively handle tex in svg\r\n * @param svg the svg element to handle\r\n * @param texhandler the tex handler function\r\n */\r\nexport function handle_tex_in_svg(svg : SVGElement, texhandler : texhadler_function) : void {\r\n    // recurse through all children of svg until we find text\r\n    // then replace the text with the svg returned by texhandler\r\n    for (let i = 0; i < svg.children.length; i++) {\r\n        let child = svg.children[i];\r\n        if (child instanceof SVGTextElement) {\r\n            let str = child.innerHTML;\r\n            if (!is_texstr(str)) continue;\r\n\r\n            let fontsizestr = child.getAttribute('font-size');\r\n            if (fontsizestr == null) continue;\r\n            let fontsize = parseFloat(fontsizestr);\r\n\r\n            let svgstr = texhandler(strip_texstr(str), {\r\n                display : is_texdisplaystr(str),\r\n                // fontsize : parseFloat(fontsize),\r\n            });\r\n\r\n            let xstr = child.getAttribute('_x');\r\n            let ystr = child.getAttribute('_y');\r\n            // let angstr = child.getAttribute('_angle');\r\n            if (xstr == null || ystr == null) continue;\r\n\r\n            let textanchor = child.getAttribute('text-anchor');\r\n            let dy = child.getAttribute('dy');\r\n            if (textanchor == null || dy == null) continue;\r\n\r\n            child.outerHTML = svgstr;\r\n            child = svg.children[i]; // update child\r\n\r\n            // HACK: scaling for mathjax tex2svg, for other option think about it later\r\n            let widthexstr = child.getAttribute('width');   // ###ex\r\n            if (widthexstr == null) continue;\r\n            let widthex = parseFloat(widthexstr.substring(0, widthexstr.length-2));\r\n            let heightexstr = child.getAttribute('height'); // ###ex\r\n            if (heightexstr == null) continue;\r\n            let heightex = parseFloat(heightexstr.substring(0, heightexstr.length-2));\r\n\r\n            const magic_number = 2;\r\n            let width = widthex * fontsize / magic_number;\r\n            let height = heightex * fontsize / magic_number;\r\n\r\n            let xval = parseFloat(xstr);\r\n            let yval = parseFloat(ystr);\r\n            switch (textanchor) {\r\n                case \"start\": break; // left\r\n                case \"middle\":       // center\r\n                    xval -= width/2; break;\r\n                case \"end\":          // right\r\n                    xval -= width; break;\r\n            }\r\n            switch (dy) {\r\n                case \"0.75em\": break; // top\r\n                case \"0.25em\":                  // center\r\n                    yval -= height/2; break;\r\n                case \"-0.25em\":         // bottom\r\n                    yval -= height; break;\r\n            }\r\n\r\n            child.setAttribute('width', width.toString());\r\n            child.setAttribute('height', height.toString());\r\n            child.setAttribute('x', xval.toString());\r\n            child.setAttribute('y', yval.toString());\r\n        } else if (child instanceof SVGElement) {\r\n            handle_tex_in_svg(child, texhandler);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Download the svg as svg file\r\n * @param outer_svgelement the outer svg element to download\r\n */\r\nexport function download_svg_as_svg(outer_svgelement : SVGSVGElement) : void {\r\n    let inner_svgelement = outer_svgelement.querySelector(\"svg[meta=diagram_svg]\") as SVGSVGElement | null;\r\n    if (inner_svgelement == null) { console.warn(\"Cannot find svg element\"); return; }\r\n    let locator_svgelement = outer_svgelement.querySelector(\"svg[meta=control_svg]\") as SVGSVGElement | null;\r\n\r\n    let svgelement = inner_svgelement;\r\n    // concat locator_svgelement to the copy of inner_svgelement\r\n    if (locator_svgelement != null) {  \r\n        let copy_inner_svgelement = inner_svgelement.cloneNode(true) as SVGSVGElement;\r\n        for (let i in locator_svgelement.children) {\r\n            let child = locator_svgelement.children[i];\r\n            if (!(child instanceof SVGSVGElement)) continue;\r\n            copy_inner_svgelement.appendChild(child.cloneNode(true));\r\n        }\r\n        svgelement = copy_inner_svgelement;\r\n    }\r\n\r\n    // get svg string\r\n    let svg_string = new XMLSerializer().serializeToString(svgelement);\r\n    let blob = new Blob([svg_string], {type: \"image/svg+xml\"});\r\n    let url = URL.createObjectURL(blob);\r\n    let a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"diagramatics.svg\";\r\n    a.click();\r\n}\r\n\r\n/**\r\n * Download the svg as png file\r\n * @param outer_svgelement the outer svg element to download\r\n */\r\nexport function download_svg_as_png(outer_svgelement : SVGSVGElement) {\r\n    let inner_svgelement = outer_svgelement.querySelector(\"svg[meta=diagram_svg]\") as SVGSVGElement | null;\r\n    if (inner_svgelement == null) { console.warn(\"Cannot find svg element\"); return; }\r\n    let svgelem = outer_svgelement;\r\n\r\n    let svg_string = new XMLSerializer().serializeToString(svgelem);\r\n    let svg_blob = new Blob([svg_string], {type: \"image/svg+xml\"});\r\n\r\n    const DOMURL = window.URL || window.webkitURL || window;\r\n    const url = DOMURL.createObjectURL(svg_blob);\r\n\r\n    const image = new Image();\r\n    image.width = svgelem.width.baseVal.value;\r\n    image.height = svgelem.height.baseVal.value;\r\n    image.src = url;\r\n    image.onload = function() {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx?.drawImage(image, 0, 0);\r\n        DOMURL.revokeObjectURL(url);\r\n\r\n        const imgURI = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n        const a = document.createElement(\"a\");\r\n        a.href = imgURI;\r\n        a.download = \"diagramatics.png\";\r\n        a.click();\r\n    }\r\n}\r\n","import { Diagram, polygon, line, curve, text, diagram_combine } from './diagram.js';\r\nimport { Vector2, V2 } from './vector.js';\r\nimport { to_radian } from './utils.js';\r\nimport { TAG } from './tag_names.js';\r\n\r\n// function helpers to create common shapes\r\n\r\n/**\r\n * Create rectange centered at origin\r\n * @param width width of the rectangle\r\n * @param height height of the rectangle\r\n * @returns a Diagram object\r\n */\r\nexport function rectangle(width : number, height : number) : Diagram {\r\n    let points = [\r\n        V2(-width/2,-height/2), V2( width/2,-height/2), \r\n        V2( width/2, height/2), V2(-width/2, height/2)\r\n    ];\r\n    return polygon(points);\r\n}\r\n\r\n/**\r\n * Create rectange with a given bottom left corner and top right corner\r\n * @param bottomleft bottom left corner of the rectangle\r\n * @param topright top right corner of the rectangle\r\n * @returns a Diagram object\r\n */\r\nexport function rectangle_corner(bottomleft : Vector2, topright : Vector2) : Diagram {\r\n    let points = [\r\n        bottomleft, V2(topright.x, bottomleft.y),\r\n        topright, V2(bottomleft.x, topright.y),\r\n    ];\r\n    return polygon(points);\r\n}\r\n\r\n/**\r\n * Create square centered at origin\r\n * @param side side length of the square\r\n * @returns a Diagram object\r\n */\r\nexport function square(side : number = 1) : Diagram {\r\n    return rectangle(side, side);\r\n}\r\n\r\n/**\r\n * Create regular polygon centered at origin with a given radius\r\n * @param n number of sides\r\n * @param radius radius of the polygon\r\n * @returns a Diagram object\r\n * \\* if you want to create a regular polygon with a given side length, use regular_polygon_side\r\n */\r\nexport function regular_polygon(n : number, radius : number = 1) : Diagram {\r\n    let points : Vector2[] = [];\r\n    for (let i = 0; i < n; i++) {\r\n        points.push(V2(0,radius).rotate(i*2*Math.PI/n));\r\n    }\r\n    return polygon(points);\r\n}\r\n\r\n/**\r\n * Create regular polygon centered at origin with a given side length\r\n * @param n number of sides\r\n * @param sidelength side length of the polygon\r\n * @returns a Diagram object\r\n * \\* if you want to create a regular polygon with a given radius, use regular_polygon\r\n */\r\nexport function regular_polygon_side(n : number, sidelength : number = 1) : Diagram {\r\n    let radius = sidelength/(2*Math.sin(Math.PI/n));\r\n    return regular_polygon(n, radius);\r\n}\r\n\r\n/**\r\n * Create circle centered at origin\r\n * *currently implemented as a regular polygon with 50 sides*\r\n * @param radius radius of the circle\r\n * @returns a Diagram object\r\n */\r\nexport function circle(radius : number = 1) : Diagram {\r\n    return regular_polygon(50, radius).append_tags(TAG.CIRCLE);\r\n}\r\n\r\n/**\r\n * Create an arc centered at origin\r\n * @param radius radius of the arc\r\n * @param angle angle of the arc\r\n * @returns a Diagram object\r\n */\r\nexport function arc(radius : number = 1, angle : number = to_radian(360)) : Diagram {\r\n    let n = 100;\r\n    let points : Vector2[] = [];\r\n    for (let i = 0; i < n; i++) {\r\n        points.push(V2(radius,0).rotate(i*angle/(n-1)));\r\n    }\r\n    return curve(points);\r\n}\r\n\r\n/**\r\n * Create an arrow from origin to a given point\r\n * @param v the end point of the arrow\r\n * @param headsize size of the arrow head\r\n * @returns a Diagram object\r\n */\r\nexport function arrow(v : Vector2, headsize : number = 1) : Diagram {\r\n    let line_diagram = line(V2(0,0), v).append_tags(TAG.ARROW_LINE);\r\n    let raw_triangle = polygon([V2(0,0), V2(-headsize, headsize/2), V2(-headsize, -headsize/2)]);\r\n    let head_triangle = raw_triangle.rotate(v.angle()).position(v).append_tags(TAG.ARROW_HEAD);\r\n    return diagram_combine(line_diagram, head_triangle);\r\n}\r\n\r\n/**\r\n * Create an arrow from a given point to another given point\r\n * @param start the start point of the arrow\r\n * @param end the end point of the arrow\r\n * @param headsize size of the arrow head\r\n * @returns a Diagram object\r\n */\r\nexport function arrow1(start : Vector2, end : Vector2, headsize : number = 1) : Diagram {\r\n    return arrow(end.sub(start), headsize).position(start);\r\n}\r\n\r\n/**\r\n * Create a two-sided arrow from a given point to another given point\r\n * @param start the start point of the arrow\r\n * @param end the end point of the arrow\r\n * @param headsize size of the arrow head\r\n * @returns a Diagram object\r\n */\r\nexport function arrow2(start : Vector2, end : Vector2, headsize : number = 1) : Diagram {\r\n    let line_diagram = line(start, end).append_tags(TAG.ARROW_LINE);\r\n    let direction    = end.sub(start);\r\n    let raw_triangle = polygon([V2(0,0), V2(-headsize, headsize/2), V2(-headsize, -headsize/2)]);\r\n    let head_triangle  = raw_triangle.rotate(direction.angle()).position(end).append_tags(TAG.ARROW_HEAD);\r\n    let head_triangle2 = raw_triangle.rotate(direction.angle()+Math.PI).position(start).append_tags(TAG.ARROW_HEAD);\r\n    return diagram_combine(line_diagram, head_triangle, head_triangle2);\r\n}\r\n\r\n/**\r\n * Create a text object with mathematical italic font\r\n * @param str text to be displayed\r\n * @returns a Diagram object\r\n */\r\nexport function textvar(str : string) : Diagram {\r\n    return text(str).append_tags(TAG.TEXTVAR);\r\n}\r\n","import { Diagram, DiagramType } from '../diagram.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\nimport { TAG } from '../tag_names.js';\r\n\r\n// ============================= utilities\r\n/**\r\n * Calculate the area of a polygon\r\n * @param p a polygon Diagram\r\n * if p is a Diagram with children, calculate the sum of the areas of the children\r\n * @returns area of the polygon\r\n*/\r\nexport function area(p : Diagram) : number {\r\n    if (p.type == DiagramType.Polygon) {\r\n        return calculate_polygon_area(p.path?.points ?? []);\r\n    }\r\n    else if (p.type == DiagramType.Diagram) {\r\n        return p.children.reduce((acc, c) => acc + area(c), 0);\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\nfunction calculate_polygon_area(vertices: Vector2[]) : number {\r\n    let area = 0;\r\n    const n = vertices.length;\r\n    for (let i = 0; i < n; i++) {\r\n        const j = (i + 1) % n;\r\n        const xi = vertices[i].x; const yi = vertices[i].y;\r\n        const xj = vertices[j].x; const yj = vertices[j].y;\r\n        area += xi * yj - xj * yi;\r\n    }\r\n    return Math.abs(area) / 2;\r\n}\r\n\r\n/**\r\n * Get the radius of a circle\r\n * @param circle a circle Diagram\r\n * @returns radius of the circle\r\n */\r\nexport function circle_radius(circle : Diagram) : number {\r\n    let tags = circle.tags;\r\n    if (!tags.includes(TAG.CIRCLE)) return -1;\r\n\r\n    let center = circle.get_anchor('center-center');\r\n    if (circle.path == undefined) return -1;\r\n    let p0 = circle.path.points[0];\r\n    return center.sub(p0).length();\r\n}\r\n\r\n/**\r\n * Get the tangent points of a circle from a point\r\n * @param point a point\r\n * @param circle a circle Diagram\r\n */\r\nexport function circle_tangent_point_from_point(point : Vector2, circle : Diagram) : [Vector2, Vector2] {\r\n    let radius = circle_radius(circle);\r\n    if (radius == -1) return [V2(0,0), V2(0,0)];\r\n    let center = circle.get_anchor('center-center');\r\n\r\n    // https://en.wikipedia.org/wiki/Tangent_lines_to_circles\r\n    \r\n    let r = radius;\r\n    let d0_2 = center.sub(point).length_sq();\r\n    let r_2 = r*r;\r\n\r\n    let v0 = point.sub(center);\r\n    let sLeft  = r_2 / d0_2;\r\n    let vLeft  = v0.scale(sLeft);\r\n    let sRight = r * Math.sqrt(d0_2 - r_2) / d0_2;\r\n    let vRight = V2(-v0.y, v0.x).scale(sRight);\r\n    let P1 = vLeft.add(vRight).add(center);\r\n    let P2 = vLeft.sub(vRight).add(center);\r\n    return [P1, P2];\r\n}\r\n\r\n/**\r\n * Get the points of a line\r\n * @param l a line Diagram\r\n * @returns the two points of the line\r\n */\r\nexport function line_points(l : Diagram) : [Vector2, Vector2] {\r\n    let tags = l.tags;\r\n    if (!tags.includes(TAG.LINE)) return [V2(0,0), V2(0,0)];\r\n    if (l.path == undefined) return [V2(0,0), V2(0,0)];\r\n\r\n    let p0 = l.path.points[0];\r\n    let p1 = l.path.points[1];\r\n    return [p0, p1];\r\n}\r\n\r\n/**\r\n * Get the intersection of a line with a horizontal line at y = yi\r\n * @param l a line Diagram\r\n * @param yi y value of the horizontal line\r\n * @returns the intersection point\r\n */\r\nexport function line_intersection_y(l : Diagram, yi : number) : Vector2 {\r\n    let [a, b] = line_points(l);\r\n    let xi = a.x + (b.x - a.x) * (yi - a.y) / (b.y - a.y);\r\n    return V2(xi, yi);\r\n}\r\n\r\n/**\r\n * Get the intersection of a line with a vertical line at x = xi\r\n * @param l a line Diagram\r\n * @param xi x value of the vertical line\r\n * @returns the intersection point\r\n */\r\nexport function line_intersection_x(l : Diagram, xi : number) : Vector2 {\r\n    let [a, b] = line_points(l);\r\n    let yi = a.y + (b.y - a.y) * (xi - a.x) / (b.x - a.x);\r\n    return V2(xi, yi);\r\n}\r\n\r\n/**\r\n * Get the intersection of two lines\r\n * @param l1 a line Diagram\r\n * @param l2 a line Diagram\r\n * @returns the intersection point\r\n * if the lines are parallel, return V2(Infinity, Infinity)\r\n */\r\nexport function line_intersection(l1 : Diagram, l2 : Diagram) : Vector2 {\r\n    if (!l1.tags.includes(TAG.LINE) || !l2.tags.includes(TAG.LINE)) return V2(Infinity, Infinity);\r\n    let [a1, b1] = line_points(l1);\r\n    let [a2, b2] = line_points(l2);\r\n\r\n    let x1 = a1.x; let y1 = a1.y; let x2 = b1.x; let y2 = b1.y;\r\n    let x3 = a2.x; let y3 = a2.y; let x4 = b2.x; let y4 = b2.y;\r\n\r\n    let d = (x1-x2)*(y3-y4) - (y1-y2)*(x3-x4);\r\n    if (d == 0) return V2(Infinity, Infinity);\r\n    let x = ((x1*y2 - y1*x2)*(x3-x4) - (x1-x2)*(x3*y4 - y3*x4))/d;\r\n    let y = ((x1*y2 - y1*x2)*(y3-y4) - (y1-y2)*(x3*y4 - y3*x4))/d;\r\n    return V2(x, y);\r\n}\r\n\r\n\r\n\r\n// ============================= shapes\r\n\r\n/**\r\n * Extend a line by a length on both ends\r\n * @param l a line Diagram\r\n * @param len1 length to extend on the first end\r\n * @param len2 length to extend on the second end\r\n * @returns a new line Diagram\r\n */\r\nexport function line_extend(l : Diagram, len1 : number, len2 : number) : Diagram {\r\n    let tags = l.tags;\r\n    if (!tags.includes(TAG.LINE)) return l;\r\n    if (l.path == undefined) return l;\r\n\r\n    let p0 = l.path.points[0];\r\n    let p1 = l.path.points[1];\r\n    let v = p1.sub(p0).normalize();\r\n    let p0_new = p0.sub(v.scale(len1));\r\n    let p1_new = p1.add(v.scale(len2));\r\n\r\n    let newl = l.copy();\r\n    if (newl.path == undefined) return l; // to surpress typescript error\r\n    newl.path.points = [p0_new, p1_new];\r\n    return newl;\r\n}\r\n\r\n/**\r\n * Get the size of a diagram\r\n * @param diagram a diagram\r\n * @returns the width and height of the diagram\r\n */\r\nexport function size(diagram : Diagram) : [number, number] {\r\n    let bb = diagram.bounding_box();\r\n    return [bb[1].x - bb[0].x, bb[1].y - bb[0].y];\r\n}\r\n","import { Diagram, diagram_combine, empty } from './diagram.js';\r\nimport { V2 } from './vector.js';\r\nimport { size } from './shapes/shapes_geometry.js';\r\n\r\nexport type VerticalAlignment   = 'top'  | 'center' | 'bottom';\r\nexport type HorizontalAlignment = 'left' | 'center' | 'right';\r\n\r\n/**\r\n * Align diagrams vertically\r\n * @param diagrams diagrams to be aligned\r\n * @param alignment vertical alignment of the diagrams\r\n * alignment can be 'top', 'center', or 'bottom'\r\n * @returns array of aligned diagrams\r\n */\r\nexport function align_vertical(diagrams : Diagram[], alignment : VerticalAlignment = 'center') : Diagram {\r\n    // align all the diagrams following the first diagram\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = [...diagrams]\r\n\r\n    if (alignment == 'top'){\r\n        let top_y = newdiagrams[0].get_anchor(\"top-left\").y;\r\n        // return diagrams.map(d => d.translate(V2(0, top_y - d.get_anchor(\"top-left\").y)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, top_y - newdiagrams[i].get_anchor(\"top-left\").y));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else if (alignment == 'center'){\r\n        let center_y = newdiagrams[0].get_anchor(\"center-left\").y;\r\n        // return diagrams.map(d => d.translate(V2(0, center_y - d.get_anchor(\"center-left\").y)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, center_y - newdiagrams[i].get_anchor(\"center-left\").y));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else if (alignment == 'bottom'){\r\n        let bottom_y = newdiagrams[0].get_anchor(\"bottom-left\").y;\r\n        // return diagrams.map(d => d.translate(V2(0, bottom_y - d.get_anchor(\"bottom-left\").y)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, bottom_y - newdiagrams[i].get_anchor(\"bottom-left\").y));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown vertical alignment : \" + alignment);\r\n    }\r\n}\r\n\r\n/**\r\n * Align diagrams horizontally\r\n * @param diagrams diagrams to be aligned\r\n * @param alignment horizontal alignment of the diagrams\r\n * alignment can be 'left', 'center', or 'right'\r\n * @returns array of aligned diagrams\r\n */\r\nexport function align_horizontal(diagrams : Diagram[], alignment : HorizontalAlignment = 'center') : Diagram {\r\n\r\n    // align all the diagrams following the first diagram\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = [...diagrams]\r\n\r\n    if (alignment == 'left'){\r\n        let left_x = newdiagrams[0].get_anchor(\"top-left\").x;\r\n        // return newdiagrams.map(d => d.translate(V2(left_x - d.get_anchor(\"top-left\").x, 0)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(left_x - newdiagrams[i].get_anchor(\"top-left\").x, 0));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else if (alignment == 'center'){\r\n        let center_x = newdiagrams[0].get_anchor(\"top-center\").x;\r\n        // return newdiagrams.map(d => d.translate(V2(center_x - d.get_anchor(\"top-center\").x, 0)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(center_x - newdiagrams[i].get_anchor(\"top-center\").x, 0));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else if (alignment == 'right'){\r\n        let right_x = newdiagrams[0].get_anchor(\"top-right\").x;\r\n        // return newdiagrams.map(d => d.translate(V2(right_x - d.get_anchor(\"top-right\").x, 0)));\r\n        for (let i = 0; i < newdiagrams.length; i++) {\r\n            newdiagrams[i] = newdiagrams[i].translate(V2(right_x - newdiagrams[i].get_anchor(\"top-right\").x, 0));\r\n        }\r\n        return diagram_combine(...newdiagrams);\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown horizontal alignment : \" + alignment);\r\n    }\r\n}\r\n\r\n/**\r\n * Distribute diagrams horizontally\r\n * @param diagrams diagrams to be distributed\r\n * @param space space between the diagrams (default = 0)\r\n * @returns array of distributed diagrams\r\n */\r\nexport function distribute_horizontal(diagrams : Diagram[], space : number = 0) : Diagram {\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = [...diagrams]\r\n\r\n    let distributed_diagrams : Diagram[] = [newdiagrams[0]];\r\n    for (let i = 1; i < newdiagrams.length; i++) {\r\n        let prev_diagram = distributed_diagrams[i-1];\r\n        let this_diagram = newdiagrams[i];\r\n        let prev_right = prev_diagram.get_anchor(\"top-right\").x;\r\n        let this_left  = this_diagram.get_anchor(\"top-left\").x;\r\n        let dx = prev_right - this_left + space;\r\n        distributed_diagrams.push(this_diagram.translate(V2(dx, 0)));\r\n    }\r\n    return diagram_combine(...distributed_diagrams);\r\n}\r\n\r\n/**\r\n * Distribute diagrams vertically\r\n * @param diagrams diagrams to be distributed\r\n * @param space space between the diagrams (default = 0)\r\n * @returns array of distributed diagrams\r\n */\r\nexport function distribute_vertical(diagrams : Diagram[], space : number = 0) : Diagram {\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = [...diagrams]\r\n\r\n    let distributed_diagrams : Diagram[] = [newdiagrams[0]];\r\n    for (let i = 1; i < newdiagrams.length; i++) {\r\n        let prev_diagram = distributed_diagrams[i-1];\r\n        let this_diagram = newdiagrams[i];\r\n        let prev_bottom = prev_diagram.get_anchor(\"bottom-left\").y;\r\n        let this_top    = this_diagram.get_anchor(\"top-left\").y;\r\n        let dy = prev_bottom - this_top - space;\r\n        distributed_diagrams.push(this_diagram.translate(V2(0, dy)));\r\n    }\r\n    return diagram_combine(...distributed_diagrams);\r\n}\r\n\r\n/**\r\n * Distribute diagrams horizontally and align\r\n * @param diagrams diagrams to be distributed\r\n * @param horizontal_space space between the diagrams (default = 0)\r\n * @param alignment vertical alignment of the diagrams\r\n * alignment can be 'top', 'center', or 'bottom'\r\n * @returns array of distributed and aligned diagrams\r\n */\r\nexport function distribute_horizontal_and_align(diagrams : Diagram[], horizontal_space : number = 0,\r\n    alignment : VerticalAlignment = 'center') : Diagram {\r\n    return distribute_horizontal(align_vertical(diagrams, alignment).children, horizontal_space);\r\n}\r\n\r\n/**\r\n * Distribute diagrams vertically and align\r\n * @param diagrams diagrams to be distributed\r\n * @param vertical_space space between the diagrams (default = 0)\r\n * @param alignment horizontal alignment of the diagrams\r\n * alignment can be 'left', 'center', or 'right'\r\n * @returns array of distributed and aligned diagrams\r\n */\r\nexport function distribute_vertical_and_align(diagrams : Diagram[], vertical_space : number = 0,\r\n    alignment : HorizontalAlignment = 'center') : Diagram {\r\n    return distribute_vertical(align_horizontal(diagrams, alignment).children, vertical_space);\r\n}\r\n\r\n/**\r\n * Distribute diagrams in a grid\r\n * @param diagrams diagrams to be distributed\r\n * @param column_count number of columns\r\n * @param vectical_space space between the diagrams vertically (default = 0)\r\n * @param horizontal_space space between the diagrams horizontally (default = 0)\r\n * NODE: the behaviour is updated in v1.3.0 \r\n * (now the returned diagram's children is the distributed diagrams instead of list of list of diagrams)\r\n */\r\nexport function distribute_grid_row(diagrams : Diagram[], column_count : number, \r\n    vectical_space : number = 0, horizontal_space : number = 0,\r\n) : Diagram {\r\n    if (diagrams.length == 0) { return empty(); }\r\n    let newdiagrams = [...diagrams]\r\n\r\n    let row_count = Math.ceil(newdiagrams.length / column_count);\r\n    let rows : Diagram[][] = [];\r\n    for (let i = 0; i < row_count; i++) {\r\n        rows.push(newdiagrams.slice(i * column_count, (i+1) * column_count));\r\n    }\r\n    let distributed_rows = rows.map(row => distribute_horizontal(row, horizontal_space));\r\n    let distributed_diagrams = distribute_vertical(distributed_rows, vectical_space);\r\n\r\n    let grid_diagrams = []\r\n    for (let i = 0; i < distributed_diagrams.children.length; i++) {\r\n        for (let j = 0; j < distributed_diagrams.children[i].children.length; j++) {\r\n            grid_diagrams.push(distributed_diagrams.children[i].children[j]);\r\n        }\r\n    }\r\n    return diagram_combine(...grid_diagrams);\r\n}\r\n\r\n/**\r\n * Distribute diagrams in a variable width row\r\n * if there is a diagram that is wider than the container width, it will be placed in a separate row\r\n * @param diagrams diagrams to be distributed\r\n * @param container_width width of the container\r\n * @param vertical_space space between the diagrams vertically (default = 0)\r\n * @param horizontal_space space between the diagrams horizontally (default = 0)\r\n * @param vertical_alignment vertical alignment of the diagrams (default = 'center')\r\n * alignment can be 'top', 'center', or 'bottom'\r\n * @param horizontal_alignment horizontal alignment of the diagrams (default = 'left')\r\n * alignment can be 'left', 'center', or 'right'\r\n */\r\nexport function distribute_variable_row(diagrams: Diagram[], container_width : number, \r\n    vertical_space : number = 0, horizontal_space : number = 0, \r\n    vertical_alignment : VerticalAlignment = 'center', \r\n    horizontal_alignment : HorizontalAlignment = 'left'\r\n) : Diagram {\r\n    if (diagrams.length == 0) { return empty(); }\r\n\r\n    let rows : Diagram[] = [];\r\n    let current_row : Diagram[] = [];\r\n    let current_row_w = 0;\r\n\r\n    function add_diagrams_to_rows(arr : Diagram[]) {\r\n        let distributed_row_dg = distribute_horizontal_and_align(arr, horizontal_space, vertical_alignment);\r\n        rows.push(distributed_row_dg);\r\n        current_row = [];\r\n        current_row_w = 0;\r\n    }\r\n\r\n    for (let i = 0; i < diagrams.length; i++) {\r\n        let d = diagrams[i];\r\n        let w = size(d)[0];\r\n        if (w > container_width) {\r\n            if (current_row.length > 0) add_diagrams_to_rows(current_row);\r\n            current_row.push(d); add_diagrams_to_rows(current_row);\r\n            continue;\r\n        }\r\n\r\n        if (current_row_w + horizontal_space + w > container_width) add_diagrams_to_rows(current_row);\r\n\r\n        current_row.push(d);\r\n        current_row_w += w + horizontal_space;\r\n    }\r\n\r\n    if (current_row.length > 0) add_diagrams_to_rows(current_row);\r\n\r\n    // distribute vertically\r\n    let distributed_diagrams = distribute_vertical_and_align(rows, vertical_space, horizontal_alignment);\r\n\r\n    let row_diagrams = []\r\n    for (let i = 0; i < distributed_diagrams.children.length; i++) {\r\n        for (let j = 0; j < distributed_diagrams.children[i].children.length; j++) {\r\n            row_diagrams.push(distributed_diagrams.children[i].children[j]);\r\n        }\r\n    }\r\n    return diagram_combine(...row_diagrams);\r\n}\r\n","import { Diagram, DiagramType, diagram_combine, empty } from './diagram.js';\r\nimport { str_to_mathematical_italic } from './unicode_utils.js'\r\nimport { Vector2, V2 } from './vector.js';\r\nimport { get_color, tab_color } from './color_palette.js';\r\nimport { f_draw_to_svg, calculate_text_scale } from './draw_svg.js';\r\nimport { rectangle, rectangle_corner } from './shapes.js';\r\nimport { size } from './shapes/shapes_geometry.js';\r\nimport { HorizontalAlignment, VerticalAlignment, distribute_horizontal_and_align, distribute_variable_row, distribute_vertical_and_align } from './alignment.js';\r\nimport { range } from './utils.js';\r\n\r\ntype BBox = [Vector2, Vector2]\r\nconst FOCUS_RECT_CLASSNAME = \"diagramatics-focusrect\"\r\nconst FOCUS_NO_OUTLINE_CLASSNAME = \"diagramatics-focusable-no-outline\"\r\n\r\nfunction format_number(val : number, prec : number) {\r\n    let fixed = val.toFixed(prec);\r\n    // remove trailing zeros\r\n    // and if the last character is a dot, remove it\r\n    return fixed.replace(/\\.?0+$/, \"\");\r\n}\r\nexport type formatFunction = (name : string, value : any, prec? : number) => string;\r\nconst defaultFormat_f : formatFunction = (name : string, val : any, prec? : number) => {\r\n    let val_str = (typeof val == 'number' && prec != undefined) ? format_number(val,prec) : val.toString();\r\n    return `${str_to_mathematical_italic(name)} = ${val_str}`;\r\n}\r\n\r\ntype setter_function_t = (_ : any) => void;\r\ntype inpVariables_t = {[key : string] : any};\r\ntype inpSetter_t    = {[key : string] : setter_function_t };\r\n\r\nenum control_svg_name {\r\n    locator   = \"control_svg\",\r\n    dnd       = \"dnd_svg\",\r\n    custom    = \"custom_int_svg\",\r\n    button    = \"button_svg\"\r\n}\r\nenum HTML_INT_TARGET {\r\n    DOCUMENT = \"document\",\r\n    SVG = \"svg\"\r\n} \r\n\r\n/**\r\n * Object that controls the interactivity of the diagram\r\n */\r\nexport class Interactive {\r\n    public inp_variables : inpVariables_t = {};\r\n    public inp_setter    : inpSetter_t = {};\r\n    public display_mode  : \"svg\" | \"canvas\" = \"svg\";\r\n\r\n    public diagram_svg : SVGSVGElement | undefined = undefined;\r\n    public locator_svg : SVGSVGElement | undefined = undefined;\r\n    public dnd_svg : SVGSVGElement | undefined = undefined;\r\n    public custom_svg : SVGSVGElement | undefined = undefined;\r\n    public button_svg : SVGSVGElement | undefined = undefined;\r\n\r\n    private locatorHandler? : LocatorHandler = undefined;\r\n    private dragAndDropHandler? : DragAndDropHandler = undefined;\r\n    private buttonHandler? : ButtonHandler = undefined;\r\n    // no support for canvas yet\r\n    \r\n    private focus_padding : number = 1;\r\n\r\n    public draw_function : (inp_object : inpVariables_t, setter_object? : inpSetter_t) => any \r\n        = (_) => {};\r\n    public display_precision : undefined | number = 5;\r\n    intervals : {[key : string] : any} = {};         \r\n    \r\n    public registeredEventListenerRemoveFunctions : (() => void)[] = [];\r\n    public single_int_mode: boolean = false;\r\n\r\n    /**\r\n     * @param control_container_div the div that contains the control elements\r\n     * @param diagram_outer_svg the svg element that contains the diagram\r\n     * \\* _only needed if you want to use the locator_\r\n     * @param inp_object_ the object that contains the variables\r\n     * \\* _only needed if you want to use custom input object_\r\n     */\r\n    constructor(\r\n        public control_container_div : HTMLElement, \r\n        public diagram_outer_svg? : SVGSVGElement,\r\n        inp_object_? : {[key : string] : any},\r\n        public event_target: HTML_INT_TARGET = HTML_INT_TARGET.SVG,\r\n    ){\r\n        if (inp_object_ != undefined){ this.inp_variables = inp_object_; }\r\n    }\r\n\r\n    public draw() : void {\r\n        this.draw_function(this.inp_variables, this.inp_setter);\r\n        this.locatorHandler?.setViewBox();\r\n        this.dragAndDropHandler?.setViewBox();\r\n        set_viewbox(this.custom_svg, this.diagram_svg);\r\n        set_viewbox(this.button_svg, this.diagram_svg);\r\n        // TODO: also do this for the other control_svg\r\n    }\r\n\r\n    public set(variable_name : string, val : any) : void {\r\n        this.inp_setter[variable_name](val);\r\n    }\r\n    public get(variable_name : string) : any {\r\n        return this.inp_variables[variable_name];\r\n    }\r\n\r\n    public label(\r\n        variable_name : string, value : any,\r\n        color: string = 'white', \r\n        markType: 'square' | 'circle' = 'square',\r\n        markColor: string = '#8B5CF6',\r\n        display_format_func : formatFunction = defaultFormat_f\r\n    ){\r\n\r\n        let containerDiv = document.createElement('div');\r\n        containerDiv.classList.add(\"diagramatics-label-container\");\r\n        containerDiv.style.display = 'flex';\r\n        containerDiv.style.alignItems = 'center';\r\n        containerDiv.style.gap = '8px';\r\n\r\n        \r\n        let markDiv = document.createElement('div');\r\n        markDiv.classList.add(\"diagramatics-label-mark\");\r\n        markDiv.style.width = '12px';\r\n        markDiv.style.height = '12px';\r\n        markDiv.style.backgroundColor = markColor;\r\n    \r\n        if (markType === 'circle') {\r\n            markDiv.style.borderRadius = '50%';\r\n        }\r\n    \r\n        let labeldiv = document.createElement('div');\r\n        labeldiv.classList.add(\"diagramatics-label\");\r\n        labeldiv.innerHTML = display_format_func(variable_name, value, this.display_precision);\r\n        labeldiv.style.color = color;\r\n    \r\n        containerDiv.appendChild(markDiv);\r\n        containerDiv.appendChild(labeldiv);\r\n    \r\n        this.inp_variables[variable_name] = value;\r\n\r\n\r\n        // setter ==========================\r\n        const setter = (val : any) => {\r\n            this.inp_variables[variable_name] = val;\r\n            labeldiv.innerHTML = display_format_func(variable_name, val, this.display_precision);\r\n        }\r\n        this.inp_setter[variable_name] = setter;\r\n\r\n        // ==============================\r\n        // add components to div\r\n        //\r\n        // <div class=\"diagramatics-label-container\">\r\n        //     <div class=\"diagramatics-label\"></div>\r\n        // </div>\r\n        \r\n        let container = document.createElement('div');\r\n        container.classList.add(\"diagramatics-label-container\");\r\n        container.appendChild(containerDiv);\r\n\r\n        this.control_container_div.appendChild(container);\r\n    }\r\n\r\n\r\n    /**\r\n     * WARNING: deprecated\r\n     * use `locator_initial_draw` instead\r\n     */\r\n    public locator_draw(){\r\n        this.locatorHandler?.setViewBox();\r\n    }\r\n    public locator_initial_draw(){\r\n        // TODO: generate the svg here\r\n        this.locatorHandler?.setViewBox();\r\n    }\r\n\r\n    /** \r\n     * alias for `dnd_initial_draw`\r\n     */\r\n    public drag_and_drop_initial_draw(){\r\n        this.dnd_initial_draw();\r\n    }\r\n    public dnd_initial_draw() {\r\n        this.dragAndDropHandler?.setViewBox();\r\n        this.dragAndDropHandler?.drawSvg();\r\n    }\r\n    \r\n    private registerEventListener(\r\n        element: EventTarget, \r\n        type: keyof GlobalEventHandlersEventMap, \r\n        callback: EventListenerOrEventListenerObject | null,\r\n        options? : boolean | AddEventListenerOptions,\r\n    ) {\r\n        element.addEventListener(type, callback, options);\r\n        const removeFunction = () => element.removeEventListener(type, callback);\r\n        this.registeredEventListenerRemoveFunctions.push(removeFunction);\r\n    }\r\n    \r\n    public removeRegisteredEventListener() {\r\n        this.registeredEventListenerRemoveFunctions.forEach(f => f());\r\n        this.registeredEventListenerRemoveFunctions = [];\r\n    }\r\n    \r\n\r\n    get_svg_element(metaname: string, force_recreate: boolean = false) : SVGSVGElement {\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        let diagram_svg : SVGSVGElement | undefined = undefined;\r\n        // check if this.diagram_outer_svg has a child with meta=control_svg\r\n        // if not, create one\r\n        let svg_element : SVGSVGElement | undefined = undefined;\r\n\r\n        for (let i in this.diagram_outer_svg.children) {\r\n            let child = this.diagram_outer_svg.children[i];\r\n            if (child instanceof SVGSVGElement && child.getAttribute(\"meta\") == metaname) {\r\n                svg_element = child;\r\n            }\r\n        }\r\n\r\n        if (this.single_int_mode && force_recreate && svg_element != undefined) {\r\n            svg_element.remove?.();\r\n            svg_element = undefined;\r\n        }\r\n        if (svg_element == undefined) {\r\n            svg_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            svg_element.setAttribute(\"meta\", metaname);\r\n            svg_element.setAttribute(\"width\", \"100%\");\r\n            svg_element.setAttribute(\"height\", \"100%\");\r\n            if (this.isTargetingDocument()) svg_element.style.overflow = \"visible\";\r\n            this.diagram_outer_svg.appendChild(svg_element);\r\n        }\r\n\r\n        return svg_element;\r\n    }\r\n\r\n    get_diagram_svg() : SVGSVGElement {\r\n        let diagram_svg = this.get_svg_element(\"diagram_svg\");\r\n        this.diagram_svg = diagram_svg;\r\n        return diagram_svg;\r\n    }\r\n    \r\n    isTargetingDocument() : boolean {\r\n        return this.event_target == HTML_INT_TARGET.DOCUMENT;\r\n    }\r\n    \r\n    set_focus_padding(padding : number) {\r\n        this.focus_padding = padding;\r\n        if (this.dragAndDropHandler) {\r\n            this.dragAndDropHandler.focus_padding = padding;\r\n        }\r\n        if (this.buttonHandler){\r\n            this.buttonHandler.focus_padding = padding;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a locator\r\n     * Locator is a draggable object that contain 2D coordinate information\r\n     * @param variable_name name of the variable\r\n     * @param value initial value\r\n     * @param radius radius of the locator draggable object\r\n     * @param color color of the locator\r\n     * @param track_diagram if provided, the locator will snap to the closest point on the diagram\r\n     */\r\n    public locator(\r\n        variable_name : string, value : Vector2, radius : number, color : string = 'blue', \r\n        track_diagram? : Diagram, blink : boolean = true,\r\n        callback?: (locator_name: string, position: Vector2) => any,\r\n    ){\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        this.inp_variables[variable_name] = value;\r\n\r\n        let diagram_svg  = this.get_diagram_svg();\r\n        let control_svg  = this.get_svg_element(control_svg_name.locator, !this.locator_svg);\r\n        this.locator_svg = control_svg;\r\n        // if this is the fist time this function is called, create a locatorHandler\r\n        if (this.locatorHandler == undefined) {\r\n            let locatorHandler = new LocatorHandler(control_svg, diagram_svg);\r\n            this.locatorHandler = locatorHandler;\r\n            const eventTarget = this.isTargetingDocument() ? document : this.diagram_outer_svg;\r\n            this.registerEventListener(eventTarget, 'mousemove',  (evt:any) => { locatorHandler.drag(evt)});\r\n            this.registerEventListener(eventTarget, 'mouseup',    (evt:any) => { locatorHandler.endDrag(evt)});\r\n            this.registerEventListener(eventTarget, 'touchmove',  (evt:any) => { locatorHandler.drag(evt)});\r\n            this.registerEventListener(eventTarget, 'touchend',   (evt:any) => { locatorHandler.endDrag(evt)});\r\n            this.registerEventListener(eventTarget, 'touchcancel',(evt:any) => { locatorHandler.endDrag(evt)});\r\n        }\r\n\r\n\r\n        // ============== callback\r\n        const f_callback = (pos : Vector2, redraw : boolean = true) => {\r\n            this.inp_variables[variable_name] = pos;\r\n            if (callback && redraw) callback(variable_name, pos);\r\n            if (redraw) this.draw();\r\n        }\r\n        this.locatorHandler.registerCallback(variable_name, f_callback);\r\n\r\n        // ============== Circle element\r\n\r\n        let locator_svg = this.locatorHandler.create_locator_circle_pointer_svg(variable_name, radius, value, color, blink);\r\n        if(blink){\r\n            // store the circle_outer into the LocatorHandler so that we can turn it off later\r\n            let blinking_outers = locator_svg.getElementsByClassName(\"diagramatics-locator-blink\");\r\n            for (let i = 0; i < blinking_outers.length; i++)\r\n                (this.locatorHandler as LocatorHandler).addBlinkingCircleOuter(blinking_outers[i])\r\n        }\r\n        this.registerEventListener(locator_svg, 'mousedown', (evt:any) => {\r\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\r\n        });\r\n        this.registerEventListener(locator_svg, 'touchstart', (evt:any) => {\r\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\r\n        });\r\n\r\n        // =============== setter\r\n        let setter;\r\n        if (track_diagram) {\r\n            if (track_diagram.type != DiagramType.Polygon && track_diagram.type != DiagramType.Curve)\r\n                throw Error('Track diagram must be a polygon or curve');\r\n            if (track_diagram.path == undefined) throw Error(`diagram {diagtam.type} must have a path`);\r\n            let track = track_diagram.path.points;\r\n            setter = (pos : Vector2) => {\r\n                let coord = closest_point_from_points(pos, track);\r\n                locator_svg.setAttribute(\"transform\", `translate(${coord.x},${-coord.y})`)\r\n                return coord;\r\n            }\r\n        }\r\n        else{\r\n            setter = (pos : Vector2) => {\r\n                locator_svg.setAttribute(\"transform\", `translate(${pos.x},${-pos.y})`)\r\n                return pos;\r\n            }\r\n        }\r\n        this.locatorHandler.registerSetter(variable_name, setter);\r\n        this.inp_setter[variable_name] = setter;\r\n\r\n        // set initial position\r\n        let init_pos = setter(value);\r\n        this.locatorHandler.setPos(variable_name, init_pos);\r\n    }\r\n\r\n\r\n    // TODO: in the next breaking changes update,\r\n    // merge this function with locator\r\n    /**\r\n     * Create a locator with custom diagram object\r\n     * @param variable_name name of the variable\r\n     * @param value initial value\r\n     * @param diagram diagram of the locator\r\n     * @param track_diagram if provided, the locator will snap to the closest point on the diagram\r\n     * @param blink if true, the locator will blink\r\n     * @param callback callback function that will be called when the locator is moved\r\n     * @param callback_rightclick callback function that will be called when the locator is right clicked\r\n     */\r\n    public locator_custom(\r\n        variable_name : string, value : Vector2, diagram : Diagram, \r\n        track_diagram? : Diagram, blink : boolean = true,\r\n        callback?: (locator_name: string, position: Vector2) => any,\r\n        callback_rightclick?: (locator_name: string) => any\r\n    ){\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        this.inp_variables[variable_name] = value;\r\n\r\n        let diagram_svg  = this.get_diagram_svg();\r\n        let control_svg  = this.get_svg_element(control_svg_name.locator, !this.locator_svg);\r\n        this.locator_svg = control_svg;\r\n        // if this is the fist time this function is called, create a locatorHandler\r\n        if (this.locatorHandler == undefined) {\r\n            let locatorHandler = new LocatorHandler(control_svg, diagram_svg);\r\n            this.locatorHandler = locatorHandler;\r\n            const eventTarget = this.isTargetingDocument() ? document : this.diagram_outer_svg;\r\n            this.registerEventListener(eventTarget, 'mousemove',  (evt:any) => { locatorHandler.drag(evt); })\r\n            this.registerEventListener(eventTarget, 'mouseup',    (evt:any) => { locatorHandler.endDrag(evt); })\r\n            this.registerEventListener(eventTarget, 'touchmove',  (evt:any) => { locatorHandler.drag(evt); })\r\n            this.registerEventListener(eventTarget, 'touchend',   (evt:any) => { locatorHandler.endDrag(evt); })\r\n            this.registerEventListener(eventTarget, 'touchcancel',(evt:any) => { locatorHandler.endDrag(evt); })\r\n        }\r\n\r\n\r\n        // ============== callback\r\n        const f_callback = (pos : Vector2, redraw : boolean = true) => {\r\n            this.inp_variables[variable_name] = pos;\r\n            // don't call the callback on the initialization;\r\n            if (callback && redraw) callback(variable_name, pos);\r\n            if (redraw) this.draw();\r\n        }\r\n        this.locatorHandler.registerCallback(variable_name, f_callback);\r\n\r\n        // ============== SVG element\r\n\r\n        let locator_svg = this.locatorHandler!.create_locator_diagram_svg(variable_name, diagram, blink);\r\n        this.registerEventListener(locator_svg, 'mousedown', (evt:any) => {\r\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\r\n        });\r\n        this.registerEventListener(locator_svg, 'touchstart', (evt:any) => {\r\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\r\n        });\r\n        if (callback_rightclick){\r\n          this.registerEventListener(locator_svg, 'contextmenu', (evt) => {\r\n            evt.preventDefault();\r\n            callback_rightclick(variable_name);\r\n          });\r\n        }\r\n\r\n        // =============== setter\r\n        let setter;\r\n        if (track_diagram) {\r\n            if (track_diagram.type != DiagramType.Polygon && track_diagram.type != DiagramType.Curve)\r\n                throw Error('Track diagram must be a polygon or curve');\r\n            if (track_diagram.path == undefined) throw Error(`diagram {diagtam.type} must have a path`);\r\n            let track = track_diagram.path.points;\r\n            setter = (pos : Vector2) => {\r\n                let coord = closest_point_from_points(pos, track);\r\n                locator_svg.setAttribute(\"transform\", `translate(${coord.x},${-coord.y})`)\r\n                return coord;\r\n            }\r\n        }\r\n        else{\r\n            setter = (pos : Vector2) => {\r\n                locator_svg.setAttribute(\"transform\", `translate(${pos.x},${-pos.y})`)\r\n                return pos;\r\n            }\r\n        }\r\n        this.locatorHandler.registerSetter(variable_name, setter);\r\n        this.inp_setter[variable_name] = setter;\r\n\r\n        // set initial position\r\n        let init_pos = setter(value);\r\n        this.locatorHandler.setPos(variable_name, init_pos);\r\n    }\r\n\r\n    /**\r\n     * Create a slider\r\n     * @param variable_name name of the variable\r\n     * @param min minimum value\r\n     * @param max maximum value\r\n     * @param value initial value\r\n     * @param step step size\r\n     * @param time time of the animation in milliseconds\r\n     * @param display_format_func function to format the display of the value\r\n    */\r\n    public slider(variable_name : string, min : number = 0, max : number = 100, value : number = 50, step : number = -1, \r\n        time : number = 1.5, display_format_func : formatFunction = defaultFormat_f){\r\n        // if the step is -1, then it is automatically calculated\r\n        if (step == -1){ step = (max - min) / 100; }\r\n\r\n        // initialize the variable\r\n        this.inp_variables[variable_name] = value;\r\n\r\n        // =========== label =============\r\n        let labeldiv = document.createElement('div');\r\n        labeldiv.classList.add(\"diagramatics-label\");\r\n        labeldiv.innerHTML = display_format_func(variable_name, value, this.display_precision);\r\n\r\n        // =========== slider ===========\r\n\r\n        // create the callback function\r\n        const callback = (val : number, redraw : boolean = true) => {\r\n            this.inp_variables[variable_name] = val;\r\n            labeldiv.innerHTML = display_format_func(variable_name, val, this.display_precision);\r\n            if (redraw) this.draw();\r\n        }\r\n        let slider = create_slider(callback, min, max, value, step);\r\n\r\n        // ================ setter\r\n        const setter = (val : number) => {\r\n            slider.value = val.toString();\r\n            callback(val, false);\r\n        }\r\n\r\n        this.inp_setter[variable_name] = setter;\r\n\r\n        // =========== playbutton ========\r\n        let nstep = (max - min) / step;\r\n        const interval_time = 1000 * time / nstep;\r\n\r\n        let playbutton = document.createElement('button');\r\n        let symboldiv  = document.createElement('div');\r\n        symboldiv.classList.add(\"diagramatics-slider-playbutton-symbol\");\r\n        playbutton.appendChild(symboldiv);\r\n        playbutton.classList.add(\"diagramatics-slider-playbutton\");\r\n        playbutton.onclick = () => {\r\n            if (this.intervals[variable_name] == undefined){\r\n                // if is not playing\r\n                playbutton.classList.add(\"paused\");\r\n                this.intervals[variable_name] = setInterval(() => {\r\n                    let val = parseFloat(slider.value);\r\n                    val += step;\r\n                    // wrap around\r\n                    val = ((val - min) % (max - min)) + min;\r\n                    \r\n                    slider.value = val.toString();\r\n                    callback(val);\r\n                }, interval_time);\r\n            } else {\r\n                // if is playing\r\n                playbutton.classList.remove(\"paused\");\r\n                clearInterval(this.intervals[variable_name]);\r\n                this.intervals[variable_name] = undefined;\r\n            }\r\n        }\r\n\r\n        // ==============================\r\n        // add components to div\r\n        //\r\n        // <div class=\"diagramatics-slider-leftcontainer\">\r\n        //     <br>\r\n        //     <button class=\"diagramatics-slider-playbutton\"></button>\r\n        // </div>\r\n        // <div class=\"diagramatics-slider-rightcontainer\">\r\n        //     <div class=\"diagramatics-label\"></div>\r\n        //     <input type=\"range\"class=\"diagramatics-slider\">\r\n        // </div>\r\n        //\r\n        let leftcontainer = document.createElement('div');\r\n        leftcontainer.classList.add(\"diagramatics-slider-leftcontainer\");\r\n        leftcontainer.appendChild(document.createElement('br'));\r\n        leftcontainer.appendChild(playbutton);\r\n\r\n        let rightcontainer = document.createElement('div');\r\n        rightcontainer.classList.add(\"diagramatics-slider-rightcontainer\");\r\n        rightcontainer.appendChild(labeldiv);\r\n        rightcontainer.appendChild(slider);\r\n\r\n        let container = document.createElement('div');\r\n        container.classList.add(\"diagramatics-slider-container\");\r\n        container.appendChild(leftcontainer);\r\n        container.appendChild(rightcontainer);\r\n\r\n        this.control_container_div.appendChild(container);\r\n    }\r\n\r\n    private init_drag_and_drop() {\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        let diagram_svg = this.get_diagram_svg();\r\n        let dnd_svg     = this.get_svg_element(control_svg_name.dnd, !this.dnd_svg);\r\n        this.dnd_svg    = dnd_svg;\r\n\r\n        // if this is the fist time this function is called, create a dragAndDropHandler\r\n        if (this.dragAndDropHandler == undefined) {\r\n            let dragAndDropHandler = new DragAndDropHandler(dnd_svg, diagram_svg);\r\n            dragAndDropHandler.focus_padding = this.focus_padding;\r\n            this.dragAndDropHandler = dragAndDropHandler;\r\n            const eventTarget = this.isTargetingDocument() ? document : this.diagram_outer_svg;\r\n            // this.registerEventListener(this.diagram_outer_svg, 'mousemove',  (evt:any) => {dragAndDropHandler.drag(evt);});\r\n            this.registerEventListener(eventTarget, 'mousemove',  (evt:any) => {dragAndDropHandler.drag(evt);});\r\n            this.registerEventListener(eventTarget, 'mouseup',    (evt:any) => {dragAndDropHandler.endDrag(evt);});\r\n            this.registerEventListener(eventTarget, 'touchmove',  (evt:any) => {dragAndDropHandler.drag(evt);});\r\n            this.registerEventListener(eventTarget, 'touchend',   (evt:any) => {dragAndDropHandler.endDrag(evt);});\r\n            this.registerEventListener(eventTarget, 'touchcancel',(evt:any) => {dragAndDropHandler.endDrag(evt);});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a drag and drop container\r\n     * @param name name of the container\r\n     * @param diagram diagram of the container\r\n     * @param capacity capacity of the container (default is 1)\r\n     * @param config configuration of the container positioning\r\n     * the configuration is an object with the following format:\r\n     * `{type:\"horizontal-uniform\"}`, `{type:\"vertical-uniform\"}`, `{type:\"grid\", value:[number, number]}`\r\n     * `{type:\"horizontal\", padding:number}`, `{type:\"vertical\", padding:number}`\r\n     * `{type:\"flex-row\", padding:number, vertical_alignment:VerticalAlignment, horizontal_alignment:HorizontalAlignment}`\r\n     *\r\n     * you can also add custom region box for the target by adding `custom_region_box: [Vector2, Vector2]` in the config\r\n     *\r\n     * you can also add a sorting function for the target by adding `sorting_function: (a: string, b: string) => number`\r\n    */\r\n    public dnd_container(name : string, diagram : Diagram, capacity? : number, config? : dnd_container_config) {\r\n        this.init_drag_and_drop();\r\n        this.dragAndDropHandler?.add_container(name, diagram, capacity, config);\r\n    }\r\n\r\n    // TODO: in the next breaking changes update,\r\n    // merge this function with dnd_draggable_to_container\r\n    /**\r\n     * Create a drag and drop draggable that is positioned into an existing container\r\n     * @param name name of the draggable\r\n     * @param diagram diagram of the draggable\r\n     * @param container_name name of the container\r\n     * @param callback callback function (called after the draggable is moved)\r\n     * @param onclickstart_callback callback function (called at the start of the drag)\r\n     */\r\n    public dnd_draggable_to_container(\r\n        name : string, diagram : Diagram, container_name : string, \r\n        callback? : (name:string, container:string) => any,\r\n        onclickstart_callback? : () => any\r\n    ) {\r\n        this.init_drag_and_drop();\r\n        if (this.dragAndDropHandler == undefined) throw Error(\"dragAndDropHandler in Interactive class is undefined\");\r\n\r\n        this.inp_variables[name] = diagram.origin;\r\n        this.dragAndDropHandler.add_draggable_to_container(name, diagram, container_name);\r\n\r\n        const dnd_callback = (pos : Vector2, redraw : boolean = true) => {\r\n            this.inp_variables[name] = pos;\r\n            if (callback) callback(name, container_name);\r\n            if (redraw) this.draw();\r\n        }\r\n        this.dragAndDropHandler.registerCallback(name, dnd_callback);\r\n        if (onclickstart_callback) this.dragAndDropHandler.register_clickstart_callback(name, onclickstart_callback);\r\n    }\r\n    \r\n    /**\r\n     * Create a drag and drop draggable\r\n     * @param name name of the draggable\r\n     * @param diagram diagram of the draggable\r\n     * @param container_diagram diagram of the container, if not provided, a container will be created automatically\r\n     * @param callback callback function (called after the draggable is moved)\r\n     * @param onclickstart_callback callback function (called at the start of the drag)\r\n    */\r\n    public dnd_draggable(\r\n        name : string, diagram : Diagram, container_diagram? : Diagram, \r\n        callback? : (name:string, pos:Vector2) => any,\r\n        onclickstart_callback? : () => any\r\n    ) {\r\n        this.init_drag_and_drop();\r\n        if (this.dragAndDropHandler == undefined) throw Error(\"dragAndDropHandler in Interactive class is undefined\");\r\n\r\n        this.inp_variables[name] = diagram.origin;\r\n        this.dragAndDropHandler.add_draggable_with_container(name, diagram, container_diagram);\r\n\r\n        const dnd_callback = (pos : Vector2, redraw : boolean = true) => {\r\n            this.inp_variables[name] = pos;\r\n            if (callback) callback(name, pos);\r\n            if (redraw) this.draw();\r\n        }\r\n        this.dragAndDropHandler.registerCallback(name, dnd_callback);\r\n        if (onclickstart_callback) this.dragAndDropHandler.register_clickstart_callback(name, onclickstart_callback);\r\n    }\r\n\r\n    /**\r\n     * Register a callback function when a draggable is dropped outside of a container\r\n     * @param callback callback function\r\n     */\r\n    public dnd_register_drop_outside_callback(callback : (name : string) => any) {\r\n        this.init_drag_and_drop();\r\n        this.dragAndDropHandler?.register_dropped_outside_callback(callback);\r\n    }\r\n    \r\n    /**\r\n     * Register a validation function when a draggable is moved to a container\r\n     * If the function return false, the draggable will not be moved\r\n     * @param fun validation function\r\n    */\r\n    public dnd_register_move_validation_function(fun: (draggable_name: string, target_name: string) => boolean) {\r\n        this.init_drag_and_drop();\r\n        this.dragAndDropHandler?.register_move_validation_function(fun);\r\n    }\r\n\r\n    /**\r\n     * Move a draggable to a container\r\n     * @param name name of the draggable\r\n     * @param container_name name of the container\r\n     */\r\n    public dnd_move_to_container(name : string, container_name : string) {\r\n        this.dragAndDropHandler?.try_move_draggable_to_container(name, container_name);\r\n    }\r\n\r\n    /**\r\n     * Get the data of the drag and drop objects with the format:\r\n     * `{container:string, content:string[]}[]`\r\n    */\r\n    public get_dnd_data() : DragAndDropData {\r\n        return this.dragAndDropHandler?.getData() ?? [];\r\n    }\r\n\r\n    /**\r\n     * Set the data of the drag and drop objects with the format:\r\n     * `{container:string, content:string[]}[]`\r\n     */\r\n    public set_dnd_data(data : DragAndDropData) : void {\r\n        this.dragAndDropHandler?.setData(data);\r\n    }\r\n    \r\n    /**\r\n    * reorder the tabindex of the containers\r\n    * @param container_names \r\n    */\r\n    public dnd_reorder_tabindex(container_names: string[]){\r\n        this.dragAndDropHandler?.reorder_svg_container_tabindex(container_names);\r\n    }\r\n    \r\n    /**\r\n    * Get the content size of a container\r\n    */\r\n    public  get_dnd_container_content_size(container_name : string) : [number,number] {\r\n       if (!this.dragAndDropHandler) return [NaN,NaN];\r\n       return this.dragAndDropHandler.get_container_content_size(container_name);\r\n    }\r\n    \r\n    /**\r\n     * Set whether the content of the container should be sorted or not\r\n     */\r\n    public set_dnd_content_sort(sort_content : boolean) : void {\r\n        if (!this.dragAndDropHandler) return;\r\n        this.dragAndDropHandler.sort_content = sort_content;\r\n    }\r\n    \r\n    public remove_dnd_draggable(name : string) {\r\n        this.dragAndDropHandler?.remove_draggable(name);\r\n    }\r\n    public remove_locator(name: string) {\r\n        this.locatorHandler?.remove(name);\r\n    }\r\n    public remove_button(name: string) {\r\n        this.buttonHandler?.remove(name);\r\n    }\r\n\r\n    /**\r\n     * @deprecated (use `Interactive.custom_object_g()` instead)\r\n     * This method will be removed in the next major release\r\n     *\r\n     * Create a custom interactive object\r\n     * @param id id of the object\r\n     * @param classlist list of classes of the object\r\n     * @param diagram diagram of the object\r\n     * @returns the svg element of the object\r\n     */\r\n    public custom_object(id : string, classlist: string[], diagram : Diagram) : SVGSVGElement {\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        let diagram_svg = this.get_diagram_svg();\r\n        let control_svg = this.get_svg_element(control_svg_name.custom, !this.custom_svg);\r\n\r\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        f_draw_to_svg(svg, svg, diagram, true, false, calculate_text_scale(diagram_svg));\r\n        svg.setAttribute(\"overflow\", \"visible\");\r\n        svg.setAttribute(\"class\", classlist.join(\" \"));\r\n        svg.setAttribute(\"id\",id);\r\n        \r\n        control_svg.setAttribute(\"viewBox\", diagram_svg.getAttribute(\"viewBox\") as string);\r\n        control_svg.setAttribute(\"preserveAspectRatio\", diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\r\n        control_svg.style.overflow = \"visible\";\r\n\r\n        control_svg.appendChild(svg);\r\n        this.custom_svg = control_svg;\r\n        return svg;\r\n    }\r\n    \r\n    /**\r\n     * Create a custom interactive object\r\n     * @param id id of the object\r\n     * @param classlist list of classes of the object\r\n     * @param diagram diagram of the object\r\n     * @returns the <g> svg element of the object\r\n     */\r\n    public custom_object_g(id : string, classlist: string[], diagram : Diagram) : SVGGElement {\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        let diagram_svg = this.get_diagram_svg();\r\n        let control_svg = this.get_svg_element(control_svg_name.custom, !this.custom_svg);\r\n\r\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(control_svg, g, diagram, true, false, calculate_text_scale(diagram_svg));\r\n        g.setAttribute(\"overflow\", \"visible\");\r\n        g.setAttribute(\"class\", classlist.join(\" \"));\r\n        g.setAttribute(\"id\",id);\r\n        \r\n        control_svg.setAttribute(\"viewBox\", diagram_svg.getAttribute(\"viewBox\") as string);\r\n        control_svg.setAttribute(\"preserveAspectRatio\", diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\r\n        control_svg.style.overflow = \"visible\";\r\n\r\n        control_svg.appendChild(g);\r\n        this.custom_svg = control_svg;\r\n        return g;\r\n    }\r\n\r\n    private init_button() {\r\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\r\n        let diagram_svg = this.get_diagram_svg();\r\n        let button_svg  = this.get_svg_element(control_svg_name.button, !this.button_svg);\r\n        this.button_svg = button_svg;\r\n\r\n        // if this is the fist time this function is called, create a dragAndDropHandler\r\n        if (this.buttonHandler == undefined) {\r\n            let buttonHandler = new ButtonHandler(button_svg, diagram_svg);\r\n            buttonHandler.focus_padding = this.focus_padding;\r\n            this.buttonHandler = buttonHandler;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a toggle button\r\n     * @param name name of the button\r\n     * @param diagram_on diagram of the button when it is on\r\n     * @param diagram_off diagram of the button when it is off\r\n     * @param state initial state of the button\r\n     * @param callback callback function when the button state is changed\r\n    */\r\n    public button_toggle(name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean = false,\r\n        callback? : (name : string, state : boolean) => any\r\n    ){\r\n        this.init_button();\r\n        if (this.buttonHandler == undefined) throw Error(\"buttonHandler in Interactive class is undefined\");\r\n\r\n        this.inp_variables[name] = state;\r\n\r\n        let main_callback;\r\n        if (callback){\r\n            main_callback = (state : boolean, redraw : boolean = true) => { \r\n                this.inp_variables[name] = state \r\n                callback(name, state);\r\n                if (redraw) this.draw();\r\n            }\r\n        } else {\r\n            main_callback = (state : boolean, redraw : boolean = true) => { \r\n                this.inp_variables[name] = state \r\n                if (redraw) this.draw();\r\n            }\r\n\r\n        }\r\n\r\n        let setter = this.buttonHandler.try_add_toggle(name, diagram_on, diagram_off, state, main_callback);\r\n        this.inp_setter[name] = setter;\r\n    }\r\n\r\n    /**\r\n     * Create a click button\r\n     * @param name name of the button\r\n     * @param diagram diagram of the button\r\n     * @param diagram_pressed diagram of the button when it is pressed\r\n     * @param callback callback function when the button is clicked\r\n    */\r\n    public button_click(name : string, diagram : Diagram, diagram_pressed : Diagram, callback : () => any){\r\n        this.init_button();\r\n        if (this.buttonHandler == undefined) throw Error(\"buttonHandler in Interactive class is undefined\");\r\n\r\n        let n_callback = () => { callback(); this.draw(); }\r\n        this.buttonHandler.try_add_click(name, diagram, diagram_pressed, diagram, n_callback);\r\n    }\r\n    \r\n    /**\r\n     * Create a click button\r\n     * @param name name of the button\r\n     * @param diagram diagram of the button\r\n     * @param diagram_pressed diagram of the button when it is pressed\r\n     * @param diagram_hover diagram of the button when it is hovered\r\n     * @param callback callback function when the button is clicked\r\n    */\r\n    public button_click_hover(name : string, diagram : Diagram, diagram_pressed : Diagram, diagram_hover : Diagram, callback : () => any){\r\n        this.init_button();\r\n        if (this.buttonHandler == undefined) throw Error(\"buttonHandler in Interactive class is undefined\");\r\n\r\n        let n_callback = () => { callback(); this.draw(); }\r\n        this.buttonHandler.try_add_click(name, diagram, diagram_pressed, diagram_hover, n_callback);\r\n    }\r\n}\r\n\r\n// ========== functions\r\n//\r\n\r\nfunction set_viewbox(taget : SVGSVGElement | undefined, source : SVGSVGElement | undefined) {\r\n    if (taget == undefined) return;\r\n    if (source == undefined) return;\r\n    taget.setAttribute(\"viewBox\", source.getAttribute(\"viewBox\") as string);\r\n    taget.setAttribute(\"preserveAspectRatio\", source.getAttribute(\"preserveAspectRatio\") as string);\r\n}\r\n\r\n\r\nfunction create_slider(callback : (val : number) => any, min : number = 0, max : number = 100, value : number = 50, step : number) : HTMLInputElement {\r\n    // create a slider\r\n    let slider = document.createElement(\"input\");\r\n    slider.type = \"range\";\r\n    slider.min = min.toString();\r\n    slider.max = max.toString();\r\n    slider.value = value.toString();\r\n    slider.step = step.toString();\r\n    slider.oninput = () => {\r\n        let val = slider.value;\r\n        callback(parseFloat(val));\r\n    }\r\n    // add class to slider\r\n    slider.classList.add(\"diagramatics-slider\");\r\n    return slider;\r\n}\r\n\r\n// function create_locator() : SVGCircleElement {\r\n// }\r\n//\r\nfunction closest_point_from_points(p : Vector2, points : Vector2[]) : Vector2 {\r\n    if (points.length == 0) return p;\r\n    let closest_d2 = Infinity;\r\n    let closest_p = points[0];\r\n    for (let i = 0; i < points.length; i++) {\r\n        let d2 = points[i].sub(p).length_sq();\r\n        if (d2 < closest_d2) {\r\n            closest_d2 = d2;\r\n            closest_p = points[i];\r\n        }\r\n    }\r\n    return closest_p;\r\n}\r\n\r\n// helper to calculate CTM in firefox\r\n// there's a well known bug in firefox about `getScreenCTM()`\r\nfunction firefox_calcCTM(svgelem : SVGSVGElement) : DOMMatrix {\r\n    let ctm = svgelem.getScreenCTM() as DOMMatrix;\r\n    // get screen width and height of the element\r\n    let screenWidth  = svgelem.width.baseVal.value;\r\n    let screenHeight = svgelem.height.baseVal.value;\r\n    let viewBox      = svgelem.viewBox.baseVal;\r\n    let scalex       = screenWidth/viewBox.width;\r\n    let scaley       = screenHeight/viewBox.height;\r\n    let scale        = Math.min(scalex, scaley);\r\n\r\n    // let translateX = (screenWidth/2  + ctm.e) - (viewBox.width/2  + viewBox.x) * scale;\r\n    // let translateY = (screenHeight/2 + ctm.f) - (viewBox.height/2 + viewBox.y) * scale;\r\n    let translateX = (screenWidth/2 ) - (viewBox.width/2  + viewBox.x) * scale;\r\n    let translateY = (screenHeight/2) - (viewBox.height/2 + viewBox.y) * scale;\r\n    return DOMMatrix.fromMatrix(ctm).translate(translateX, translateY).scale(scale);\r\n}\r\n\r\ntype LocatorEvent = TouchEvent | Touch | MouseEvent\r\ntype DnDEvent = TouchEvent | Touch | MouseEvent\r\n\r\n/**\r\n * Convert client position to SVG position\r\n * @param clientPos the client position\r\n * @param svgelem the svg element\r\n */\r\nexport function clientPos_to_svgPos(clientPos : {x : number, y : number}, svgelem : SVGSVGElement) : \r\n{x : number, y : number} {\r\n    // var CTM = this.control_svg.getScreenCTM() as DOMMatrix;\r\n    // NOTE: there's a well known bug in firefox about `getScreenCTM()`\r\n    // check if the browser is firefox\r\n    let CTM : DOMMatrix;\r\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\r\n        CTM = firefox_calcCTM(svgelem);\r\n    } else {\r\n        CTM = svgelem.getScreenCTM() as DOMMatrix;\r\n    }\r\n    // console.log(CTM);\r\n    \r\n    return {\r\n        x : (clientPos.x - CTM.e) / CTM.a,\r\n        y : - (clientPos.y - CTM.f) / CTM.d\r\n    }\r\n}\r\n\r\nfunction getMousePosition(evt : LocatorEvent, svgelem : SVGSVGElement) : {x : number, y : number} {\r\n    // firefox doesn't support `TouchEvent`, we need to check for it\r\n    if (window.TouchEvent && evt instanceof TouchEvent) { evt = evt.touches[0]; }\r\n    let clientPos = {\r\n        x : (evt as Touch | MouseEvent).clientX,\r\n        y : (evt as Touch | MouseEvent).clientY\r\n    }\r\n    return clientPos_to_svgPos(clientPos, svgelem);\r\n}\r\n\r\n/**\r\n * Get the SVG coordinate from the event (MouseEvent or TouchEvent)\r\n * @param evt the event\r\n * @param svgelem the svg element\r\n * @returns the SVG coordinate\r\n */\r\nexport function get_SVGPos_from_event(evt : LocatorEvent, svgelem : SVGSVGElement) : {x : number, y : number} {\r\n    return getMousePosition(evt, svgelem);\r\n}\r\n\r\nclass LocatorHandler {\r\n\r\n    selectedElement  : SVGElement | null = null;\r\n    selectedVariable : string | null = null;\r\n    mouseOffset : Vector2 = V2(0,0);\r\n    callbacks : {[key : string] : (pos : Vector2, redraw?: boolean) => any} = {};\r\n    setter    : {[key : string] : (pos : Vector2) => any} = {};\r\n    // store blinking circle_outer so that we can turn it off\r\n    svg_elements: {[key : string] : SVGElement} = {};\r\n    blinking_circle_outers : Element[] = [];\r\n    first_touch_callback : Function | null = null;\r\n    element_pos : {[key : string] : Vector2} = {};\r\n\r\n    constructor(public control_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\r\n    }\r\n\r\n    startDrag(evt : LocatorEvent, variable_name : string, selectedElement : SVGElement) {\r\n        this.selectedElement  = selectedElement;\r\n        this.selectedVariable = variable_name;\r\n        \r\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\r\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\r\n        let coord = getMousePosition(evt, this.control_svg);\r\n        let mousepos = V2(coord.x, coord.y);\r\n        let elementpos = this.element_pos[variable_name];\r\n        if (elementpos){\r\n            this.mouseOffset = elementpos.sub(mousepos);\r\n        }\r\n        \r\n        this.handleBlinking();\r\n    }\r\n    drag(evt : LocatorEvent) {\r\n        if (this.selectedElement == undefined) return;\r\n        if (this.selectedVariable == undefined) return;\r\n\r\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\r\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\r\n\r\n        let coord = getMousePosition(evt, this.control_svg);\r\n\r\n        let pos = V2(coord.x, coord.y).add(this.mouseOffset);\r\n        this.element_pos[this.selectedVariable] = pos;\r\n        // check if setter for this.selectedVariable exists\r\n        // if it does, call it\r\n        if (this.setter[this.selectedVariable] != undefined) {\r\n            pos = this.setter[this.selectedVariable](pos);\r\n        }\r\n\r\n        // check if callback for this.selectedVariable exists\r\n        // if it does, call it\r\n        if (this.selectedVariable == null) return;\r\n        if (this.callbacks[this.selectedVariable] != undefined) {\r\n            this.callbacks[this.selectedVariable](pos);\r\n        }\r\n        this.setViewBox();\r\n\r\n    }\r\n    setViewBox() {\r\n        // set viewBox and preserveAspectRatio of control_svg to be the same as diagram_svg\r\n        this.control_svg.setAttribute(\"viewBox\", this.diagram_svg.getAttribute(\"viewBox\") as string);\r\n        this.control_svg.setAttribute(\"preserveAspectRatio\", this.diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\r\n    }\r\n    endDrag(_ : LocatorEvent) {\r\n        this.selectedElement = null;\r\n        this.selectedVariable = null;\r\n    }\r\n    \r\n    public remove(variable_name : string) : void {\r\n        if (this.selectedVariable == variable_name){\r\n            this.selectedElement = null;\r\n            this.selectedVariable = null;\r\n        }\r\n        delete this.callbacks[variable_name];\r\n        delete this.setter[variable_name];\r\n        this.svg_elements[variable_name]?.remove();\r\n        delete this.svg_elements[variable_name];\r\n        delete this.element_pos[variable_name];\r\n    }\r\n\r\n    setPos(name : string, pos : Vector2){\r\n        this.element_pos[name] = pos;\r\n        this.callbacks[name](pos, false);\r\n    }\r\n    registerCallback(name : string, callback : (pos : Vector2) => any){\r\n        this.callbacks[name] = callback;\r\n    }\r\n    registerSetter(name : string, setter : (pos : Vector2) => any){\r\n        this.setter[name] = setter;\r\n    }\r\n    addBlinkingCircleOuter(circle_outer : Element){\r\n        this.blinking_circle_outers.push(circle_outer);\r\n    }\r\n    handleBlinking(){\r\n        // turn off all blinking_circle_outers after the first touch\r\n        if (this.blinking_circle_outers.length == 0) return;\r\n        for (let i = 0; i < this.blinking_circle_outers.length; i++) {\r\n            this.blinking_circle_outers[i].classList.remove(\"diagramatics-locator-blink\");\r\n        }\r\n        this.blinking_circle_outers = [];\r\n        if (this.first_touch_callback != null) this.first_touch_callback();\r\n    }\r\n\r\n    create_locator_diagram_svg(name: string, diagram : Diagram, blink : boolean) : SVGGElement {\r\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.control_svg, g, diagram.position(V2(0,0)), true, false, calculate_text_scale(this.diagram_svg));\r\n        g.style.cursor = \"pointer\";\r\n        g.setAttribute(\"overflow\", \"visible\");\r\n        if (blink) {\r\n            g.classList.add(\"diagramatics-locator-blink\");\r\n            this.addBlinkingCircleOuter(g);\r\n        }\r\n        \r\n        if (this.svg_elements[name]){\r\n            this.svg_elements[name].replaceWith(g);\r\n        } else {\r\n            this.control_svg.appendChild(g);\r\n        }\r\n        \r\n        \r\n        this.svg_elements[name] = g;\r\n        this.element_pos[name]\r\n        return g;\r\n    }\r\n\r\n    create_locator_circle_pointer_svg(name: string, radius : number, value : Vector2, color : string, blink : boolean) : SVGGElement {\r\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        // set svg overflow to visible\r\n        g.setAttribute(\"overflow\", \"visible\");\r\n        // set cursor to be pointer when hovering\r\n        g.style.cursor = \"pointer\";\r\n\r\n        let circle_outer = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        let circle_inner = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n\r\n        let inner_radius    = radius * 0.4;\r\n\r\n        circle_outer.setAttribute(\"r\", radius.toString());\r\n        circle_outer.setAttribute(\"fill\", get_color(color, tab_color));\r\n        circle_outer.setAttribute(\"fill-opacity\", \"0.3137\");\r\n        circle_outer.setAttribute(\"stroke\", \"none\");\r\n        circle_outer.classList.add(\"diagramatics-locator-outer\");\r\n        if (blink) circle_outer.classList.add(\"diagramatics-locator-blink\");\r\n\r\n        circle_inner.setAttribute(\"r\", inner_radius.toString());\r\n        circle_inner.setAttribute(\"fill\", get_color(color, tab_color));\r\n        circle_inner.setAttribute(\"stroke\", \"none\");\r\n        circle_inner.classList.add(\"diagramatics-locator-inner\");\r\n\r\n        g.appendChild(circle_outer);\r\n        g.appendChild(circle_inner);\r\n        g.setAttribute(\"transform\", `translate(${value.x},${-value.y})`)\r\n        if (this.svg_elements[name]){\r\n            this.svg_elements[name].replaceWith(g);\r\n        } else {\r\n            this.control_svg.appendChild(g);\r\n        }\r\n        \r\n        this.svg_elements[name] = g;\r\n        return g;\r\n    }\r\n\r\n}\r\n\r\ntype DragAndDropContainerData = {\r\n    name : string,\r\n    position : Vector2,\r\n    svgelement? : SVGElement,\r\n    diagram : Diagram,\r\n    content : string[],\r\n    capacity : number,\r\n    config : dnd_container_config,\r\n}\r\ntype DragAndDropDraggableData = {\r\n    name : string,\r\n    position : Vector2,\r\n    svgelement? : SVGElement,\r\n    diagram : Diagram,\r\n    diagram_size : [number, number],\r\n    container : string,\r\n}\r\ntype DragAndDropData = {container:string, content:string[]}[]\r\n\r\nenum dnd_type {\r\n    container = \"diagramatics-dnd-container\",\r\n    draggable = \"diagramatics-dnd-draggable\",\r\n    ghost     = \"diagramatics-dnd-draggable-ghost\",\r\n}\r\n\r\n//TODO: add more\r\ntype dnd_container_positioning_type =\r\n    {type:\"horizontal-uniform\"} |\r\n    {type:\"vertical-uniform\"} |\r\n    {type:\"horizontal\", padding:number} |\r\n    {type:\"vertical\", padding:number} |\r\n    {type:\"flex-row\", padding:number, vertical_alignment?:VerticalAlignment, horizontal_alignment?:HorizontalAlignment} |\r\n    {type:\"grid\", value:[number, number]}\r\ntype dnd_container_config = dnd_container_positioning_type & {\r\n    custom_region_box?: [Vector2, Vector2]\r\n    sorting_function?: (a : string, b : string) => number\r\n}\r\n\r\nclass DragAndDropHandler {\r\n    containers : {[key : string] : DragAndDropContainerData} = {};\r\n    draggables : {[key : string] : DragAndDropDraggableData} = {};\r\n    callbacks : {[key : string] : (pos : Vector2) => any} = {};\r\n    onclickstart_callback : {[key : string] : () => any} = {};\r\n    hoveredContainerName : string | null = null;\r\n    draggedElementName : string | null = null;\r\n    draggedElementGhost : SVGElement | null = null;\r\n    dropped_outside_callback : ((name : string) => any) | null = null;\r\n    move_validation_function : ((draggable_name: string, target_name: string) => boolean) | null = null;\r\n    sort_content : boolean = false;\r\n    dom_to_id_map : WeakMap<HTMLElement|SVGElement, string>;\r\n    active_draggable_name: string | null = null; // active from tap/enter\r\n    focus_padding : number = 1;\r\n\r\n    constructor(public dnd_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\r\n        this.dom_to_id_map = new WeakMap();\r\n    }\r\n\r\n    public add_container(\r\n        name : string, diagram : Diagram, \r\n        capacity? : number , config? : dnd_container_config,\r\n    ) {\r\n        if (this.containers[name] != undefined) {\r\n            this.replace_container_svg(name, diagram, capacity, config);\r\n            return;\r\n        }\r\n\r\n        this.containers[name] = {\r\n            name, diagram, \r\n            position : diagram.origin, \r\n            content : [], \r\n            config : config ?? {type:\"horizontal-uniform\"},\r\n            capacity : capacity ?? 1\r\n        };\r\n    }\r\n\r\n    generate_position_map(bbox : BBox, config : dnd_container_config, capacity : number, content : string[]) \r\n    : Vector2[] {\r\n        const p_center = bbox[0].add(bbox[1]).scale(0.5);\r\n        switch (config.type){\r\n            case \"horizontal-uniform\": {\r\n                let width = bbox[1].x - bbox[0].x;\r\n                let dx = width / capacity;\r\n                let x0 = bbox[0].x + dx / 2;\r\n                let y  = p_center.y;\r\n                return range(0, capacity).map(i => V2(x0 + dx*i, y));\r\n            }\r\n            case \"vertical-uniform\": {\r\n                //NOTE: top to bottom\r\n                let height = bbox[1].y - bbox[0].y;\r\n                let dy = height / capacity;\r\n                let x  = p_center.x;\r\n                let y0 = bbox[1].y - dy / 2;\r\n                return range(0, capacity).map(i => V2(x, y0 - dy*i));\r\n            }\r\n            case \"grid\" : {\r\n                let [nx,ny] = config.value;\r\n                let height = bbox[1].y - bbox[0].y;\r\n                let width  = bbox[1].x - bbox[0].x;\r\n                let dx = width / nx;\r\n                let dy = height / ny;\r\n                let x0 = bbox[0].x + dx / 2;\r\n                let y0 = bbox[1].y - dy / 2;\r\n                return range(0, capacity).map(i => {\r\n                    let x = x0 + dx * (i % nx);\r\n                    let y = y0 - dy * Math.floor(i / nx);\r\n                    return V2(x, y);\r\n                });\r\n            }\r\n            case \"vertical\" : {\r\n                const p_top_center = V2(p_center.x, bbox[1].y);\r\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\r\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\r\n                const distributed = distribute_vertical_and_align(size_rects, config.padding).mut()\r\n                    .move_origin('top-center').position(p_top_center)\r\n                    .translate(V2(0,-config.padding));\r\n                return distributed.children.map(d => d.origin);\r\n            }\r\n            case \"horizontal\" : {\r\n                const p_center_left = V2(bbox[0].x, p_center.y);\r\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\r\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\r\n                const distributed = distribute_horizontal_and_align(size_rects, config.padding).mut()\r\n                    .move_origin('center-left').position(p_center_left)\r\n                    .translate(V2(config.padding,0));\r\n                return distributed.children.map(d => d.origin);\r\n            }\r\n            case \"flex-row\" : {\r\n                const pad = config.padding ?? 0;\r\n                const container_width = bbox[1].x - bbox[0].x - 2*pad;\r\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\r\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\r\n                let distributed = distribute_variable_row(\r\n                    size_rects, container_width, pad, pad,\r\n                    config.vertical_alignment, config.horizontal_alignment\r\n                ).mut()\r\n                switch (config.horizontal_alignment){\r\n                    case 'center' :{\r\n                        distributed = distributed\r\n                            .move_origin('top-center').position(V2(p_center.x, bbox[1].y-pad));\r\n                    } break;\r\n                    case 'right' : {\r\n                        distributed = distributed\r\n                            .move_origin('top-right').position(V2(bbox[1].x-pad, bbox[1].y-pad));\r\n                    } break;\r\n                    case 'center':\r\n                    default: {\r\n                        distributed = distributed\r\n                            .move_origin('top-left').position(V2(bbox[0].x+pad, bbox[1].y-pad));\r\n                    }\r\n                }\r\n                return distributed.children.map(d => d.origin);\r\n            }\r\n            default : {\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n    \r\n    get_container_content_size(container_name : string) : [number,number] {\r\n        const container = this.containers[container_name];\r\n        if (container == undefined) return [NaN, NaN];\r\n        const pad = (container.config as any).padding ?? 0;\r\n        const content_diagrams = container.content.map(name => this.draggables[name]?.diagram ?? empty());\r\n        const [width, height] = size(diagram_combine(...content_diagrams));\r\n        return [width + 2*pad, height + 2*pad];\r\n    }\r\n    \r\n    private replace_draggable_svg(name : string, diagram : Diagram) {\r\n        let draggable = this.draggables[name];\r\n        if (draggable == undefined) return;\r\n        let outer_g = draggable.svgelement?.parentNode as SVGGElement;\r\n        if (outer_g == undefined) return;\r\n        draggable.svgelement?.remove();\r\n        draggable.diagram = diagram;\r\n        draggable.diagram_size = size(diagram);\r\n        this.add_draggable_svg(name, diagram, outer_g);\r\n        this.reposition_container_content(draggable.container)\r\n    }\r\n    private replace_container_svg(name : string, diagram : Diagram, capacity? : number, config? : dnd_container_config) {\r\n        let container = this.containers[name];\r\n        if (container == undefined) return;\r\n        const outer_g = this.get_container_outer_g(name);\r\n        if (outer_g == undefined) return;\r\n        container.svgelement?.remove();\r\n        container.diagram = diagram;\r\n        if (capacity) container.capacity = capacity;\r\n        if (config) container.config = config;\r\n        this.add_container_svg(name, diagram, outer_g);\r\n        this.reposition_container_content(name);\r\n    }\r\n\r\n    public add_draggable_to_container(name : string, diagram : Diagram, container_name : string) {\r\n        if (this.draggables[name] != undefined) {\r\n            this.replace_draggable_svg(name, diagram);\r\n            this.move_draggable_to_container(name, container_name, true);\r\n            return;\r\n        }\r\n\r\n        const diagram_size = size(diagram);\r\n        this.draggables[name] = {name, diagram : diagram.mut() , diagram_size, position : diagram.origin, container : container_name};\r\n        this.containers[container_name].content.push(name);\r\n    }\r\n\r\n    public add_draggable_with_container(name : string, diagram : Diagram, container_diagram? : Diagram) {\r\n        if (this.draggables[name] != undefined) {\r\n            this.replace_draggable_svg(name, diagram);\r\n            return;\r\n        }\r\n        // add a container as initial container for the draggable\r\n        let initial_container_name = `_container0_${name}`;\r\n\r\n        if (container_diagram == undefined)\r\n            container_diagram = this.diagram_container_from_draggable(diagram);\r\n        this.add_container(initial_container_name, container_diagram);\r\n\r\n        const diagram_size = size(diagram);\r\n        this.containers[initial_container_name].content.push(name);\r\n        this.draggables[name] = {name, diagram : diagram.mut() , diagram_size, position : diagram.origin, container : initial_container_name};\r\n    }\r\n    \r\n    public remove_draggable(name : string) : void {\r\n        for (let container_name in this.containers) {\r\n            const container = this.containers[container_name];\r\n            container.content = container.content.filter(e => e != name);\r\n        }\r\n        this.draggables[name].svgelement?.remove();\r\n        delete this.draggables[name];\r\n    }\r\n\r\n    registerCallback(name : string, callback : (pos : Vector2) => any){\r\n        this.callbacks[name] = callback;\r\n    }\r\n    register_clickstart_callback(name : string, callback : () => any){\r\n        this.onclickstart_callback[name] = callback;\r\n    }\r\n\r\n    register_dropped_outside_callback(callback : (name : string) => any){\r\n        this.dropped_outside_callback = callback;\r\n    }\r\n    \r\n    register_move_validation_function(fun: (draggable_name: string, target_name: string) => boolean){\r\n        this.move_validation_function = fun;\r\n    }\r\n\r\n    setViewBox() {\r\n        // set viewBox and preserveAspectRatio of control_svg to be the same as diagram_svg\r\n        this.dnd_svg.setAttribute(\"viewBox\", this.diagram_svg.getAttribute(\"viewBox\") as string);\r\n        this.dnd_svg.setAttribute(\"preserveAspectRatio\", this.diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\r\n    }\r\n    public drawSvg(){\r\n        for (let container_name in this.containers){\r\n            const container_data = this.containers[container_name];\r\n            if (container_data?.svgelement == undefined) {\r\n                const outer_g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n                this.dnd_svg.append(outer_g);\r\n                this.add_container_svg(container_name, container_data.diagram, outer_g);\r\n            }\r\n            \r\n            const outer_g = this.get_container_outer_g(container_name)\r\n            if (outer_g == undefined) continue;\r\n            \r\n            for (let draggable_name of container_data.content){\r\n                const draggable_data = this.draggables[draggable_name];\r\n                if (draggable_data?.svgelement) continue;\r\n                this.add_draggable_svg(draggable_name, draggable_data.diagram, outer_g)\r\n            }\r\n        }\r\n        for (let name in this.containers) {\r\n            this.reposition_container_content(name);\r\n            this.reconfigure_container_tabindex(name);\r\n        }\r\n    }\r\n\r\n    getData() : DragAndDropData {\r\n        let data : DragAndDropData = []\r\n        for (let name in this.containers){\r\n            data.push({container : name, content : this.containers[name].content});\r\n        }\r\n        return data;\r\n    }\r\n\r\n    setData(data : DragAndDropData) {\r\n        try {\r\n            for (let containerdata of data) {\r\n                for (let content of containerdata.content) {\r\n                    this.try_move_draggable_to_container(content, containerdata.container, true);\r\n                }\r\n            }\r\n        } catch (_e) {\r\n            console.error(\"the data is not valid\");\r\n        }\r\n    }\r\n\r\n    diagram_container_from_draggable(diagram : Diagram) : Diagram {\r\n        let rect = rectangle_corner(...diagram.bounding_box()).move_origin(diagram.origin);\r\n        return rect.strokedasharray([5]);\r\n    }\r\n    \r\n    register_tap_enter(g: SVGElement, callback : (keyboard?: boolean) => any) {\r\n        g.onclick = (e) => {\r\n            callback(false);\r\n        }\r\n        g.onkeydown = (evt) => {\r\n            if (evt.key == \"Enter\") callback(true);\r\n        }\r\n    }\r\n    tap_enter_draggable(draggable_name: string, keyboard?: boolean){\r\n        if (this.active_draggable_name == null){\r\n            // select the draggable\r\n            this.reset_picked_class()\r\n            this.active_draggable_name = draggable_name;\r\n            let draggable = this.draggables[draggable_name];\r\n            if (draggable.svgelement == undefined) return;\r\n            draggable.svgelement.classList.add(\"picked\");\r\n            if (keyboard) this.onclickstart_callback[draggable_name]?.();\r\n        } else if (draggable_name == this.active_draggable_name) {\r\n            // unselect the draggable\r\n            this.reset_picked_class()\r\n            this.active_draggable_name = null;\r\n        } else {\r\n            // try to switch if possible\r\n            const target_container = this.draggables[draggable_name]?.container;\r\n            if (target_container) {\r\n                this.try_move_draggable_to_container(this.active_draggable_name, target_container);\r\n            }\r\n            this.reset_picked_class()\r\n            this.active_draggable_name = null;\r\n        }\r\n    }\r\n    tap_enter_container(container_name: string){\r\n        if (this.active_draggable_name == null) return;\r\n        this.try_move_draggable_to_container(this.active_draggable_name, container_name);\r\n\r\n        this.active_draggable_name = null;\r\n        this.reset_picked_class();\r\n    }\r\n    \r\n    private get_container_outer_g(container_name : string) : SVGGElement {\r\n        const container_data = this.containers[container_name];\r\n        return container_data?.svgelement?.parentNode as SVGGElement;\r\n    }\r\n\r\n    private add_container_svg(name : string, diagram: Diagram, outer_g: SVGGElement) {\r\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.dnd_svg, g, diagram.position(V2(0,0)), \r\n            false, false, calculate_text_scale(this.diagram_svg), dnd_type.container);\r\n        let position = diagram.origin;\r\n        g.setAttribute(\"transform\", `translate(${position.x},${-position.y})`)\r\n        g.setAttribute(\"class\", dnd_type.container);\r\n        g.setAttribute(\"tabindex\", \"0\");\r\n        \r\n        g.onmousedown = (e) => {\r\n            e.preventDefault();\r\n        }\r\n        this.register_tap_enter(g, () => {\r\n            this.tap_enter_container(name);\r\n        });\r\n        \r\n        outer_g.prepend(g);\r\n        this.containers[name].svgelement = g;\r\n        this.dom_to_id_map.set(g, name);\r\n        \r\n        this.add_focus_rect(g, diagram)\r\n    }\r\n    \r\n    private add_draggable_svg(name : string, diagram : Diagram, outer_g : SVGGElement) {\r\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.dnd_svg, g, diagram.position(V2(0,0)), true, false, calculate_text_scale(this.diagram_svg), dnd_type.draggable);\r\n        let position = diagram.origin;\r\n        g.setAttribute(\"transform\", `translate(${position.x},${-position.y})`)\r\n        g.setAttribute(\"class\", dnd_type.draggable);\r\n        g.setAttribute(\"draggable\", \"true\");\r\n        g.setAttribute(\"tabindex\", \"0\");\r\n\r\n        g.onmousedown = (evt) => {\r\n            this.draggedElementName = name;\r\n            this.startDrag(evt);\r\n        }\r\n        g.ontouchstart = (evt) => {\r\n            this.draggedElementName = name;\r\n            this.tap_enter_draggable(name)\r\n            this.startDrag(evt);\r\n        }\r\n        this.register_tap_enter(g, (keyboard?: boolean) => {\r\n            this.tap_enter_draggable(name, keyboard);\r\n        });\r\n\r\n        outer_g.append(g);\r\n        this.draggables[name].svgelement = g;\r\n        this.dom_to_id_map.set(g, name);\r\n        this.add_focus_rect(g, diagram)\r\n    }\r\n    \r\n    private add_focus_rect(g: SVGGElement, diagram : Diagram) {\r\n        const bbox = diagram.position(V2(0,0)).bounding_box();\r\n        const pad = this.focus_padding;\r\n        const width = bbox[1].x - bbox[0].x + 2*pad;\r\n        const height = bbox[1].y - bbox[0].y + 2*pad;\r\n        // focus rect svg element\r\n        const focus_rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n        focus_rect.setAttribute(\"width\", width.toString());\r\n        focus_rect.setAttribute(\"height\", height.toString());\r\n        focus_rect.setAttribute(\"x\", (bbox[0].x - pad).toString());\r\n        focus_rect.setAttribute(\"y\", (-bbox[1].y - pad).toString());\r\n        focus_rect.setAttribute(\"fill\", \"none\");\r\n        focus_rect.setAttribute(\"stroke\", \"black\");\r\n        focus_rect.setAttribute(\"stroke-width\", \"1\");\r\n        focus_rect.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\r\n        focus_rect.setAttribute(\"class\", FOCUS_RECT_CLASSNAME);\r\n        g.appendChild(focus_rect);\r\n    }\r\n    \r\n    private move_svg_draggable_to_container(draggable_name : string, container_name : string){\r\n        const draggable_svg = this.draggables[draggable_name]?.svgelement;\r\n        if (draggable_svg == undefined) return;\r\n        const container_outer_g = this.get_container_outer_g(container_name);\r\n        if (container_outer_g == undefined) return;\r\n        container_outer_g.appendChild(draggable_svg);\r\n    }\r\n    \r\n    private reorder_svg_container_content(container_name : string){\r\n        const content = this.containers[container_name]?.content;\r\n        const g = this.get_container_outer_g(container_name);\r\n        if (content == undefined || g == undefined) return;\r\n        for (let draggable_name of content) {\r\n            const draggable_svg = this.draggables[draggable_name]?.svgelement;\r\n            if (draggable_svg == undefined) continue;\r\n            g.appendChild(draggable_svg)\r\n        }\r\n    }\r\n    \r\n    private reconfigure_container_tabindex(container_name : string) {\r\n        const container = this.containers[container_name];\r\n        if (container == undefined) return;\r\n        if (container.capacity == 1) {\r\n            if (container.content.length == 1) {\r\n                container.svgelement?.setAttribute(\"tabindex\", \"-1\")\r\n                if (container.svgelement == document.activeElement){\r\n                    // set the focus to the content\r\n                    const content = container.content[0];\r\n                    this.draggables[content]?.svgelement?.focus();\r\n                }\r\n            } else {\r\n                container.svgelement?.setAttribute(\"tabindex\", \"0\")\r\n            }\r\n        }\r\n    }\r\n    \r\n    public reorder_svg_container_tabindex(container_names: string[]){\r\n        for (let container_name of container_names) {\r\n            const g = this.get_container_outer_g(container_name);\r\n            if (g == undefined) continue;\r\n            this.dnd_svg.appendChild(g);\r\n        }\r\n    }\r\n\r\n    reposition_container_content(container_name : string){\r\n        let container = this.containers[container_name];\r\n        if (container == undefined) return;\r\n        \r\n        if (this.sort_content){\r\n            container.content.sort()\r\n            this.reorder_svg_container_content(container_name)\r\n        } else if (container.config?.sorting_function) {\r\n            container.content.sort(container.config.sorting_function);\r\n            this.reorder_svg_container_content(container_name)\r\n        }\r\n        const bbox = container.config.custom_region_box ?? container.diagram.bounding_box();\r\n        const position_map = this.generate_position_map(bbox, container.config, container.capacity, container.content);\r\n\r\n        for (let i = 0; i < container.content.length; i++) {\r\n            let draggable = this.draggables[container.content[i]];\r\n            let pos = position_map[i] ?? container.diagram.origin;\r\n            draggable.diagram = draggable.diagram.position(pos);\r\n            draggable.position = pos;\r\n            draggable.svgelement?.setAttribute(\"transform\", `translate(${pos.x},${-pos.y})`);\r\n        }\r\n    }\r\n    remove_draggable_from_container(draggable_name : string, container_name : string) {\r\n        this.containers[container_name].content = \r\n            this.containers[container_name].content.filter((name) => name != draggable_name);\r\n    }\r\n    private move_draggable_to_container(draggable_name : string, container_name : string, ignore_callback = false) {\r\n        let draggable = this.draggables[draggable_name];\r\n        if (draggable == undefined) return;\r\n\r\n        // ignore if the draggable is already in the container\r\n        if (draggable.container == container_name) return;\r\n\r\n        let container = this.containers[container_name];\r\n        let original_container_name = draggable.container;\r\n\r\n        this.remove_draggable_from_container(draggable_name, original_container_name);\r\n        draggable.container = container_name;\r\n        container.content.push(draggable_name);\r\n        this.move_svg_draggable_to_container(draggable_name, container_name)\r\n\r\n        this.reposition_container_content(container_name);\r\n        this.reposition_container_content(original_container_name);\r\n        this.reconfigure_container_tabindex(container_name);\r\n        this.reconfigure_container_tabindex(original_container_name);\r\n\r\n        if (ignore_callback) return;\r\n        let draggedElement = this.draggables[draggable_name];\r\n        this.callbacks[draggedElement.name](draggedElement.position);\r\n    }\r\n\r\n    try_move_draggable_to_container(draggable_name : string, container_name : string, ignore_callback = false) {\r\n        if (this.move_validation_function) {\r\n            const valid = this.move_validation_function(draggable_name, container_name);\r\n            if (!valid) return;\r\n        }\r\n        let draggable = this.draggables[draggable_name];\r\n        let container = this.containers[container_name];\r\n        if (container.content.length + 1 <= container.capacity) {\r\n            this.move_draggable_to_container(draggable_name, container_name, ignore_callback);\r\n        } else if (container.capacity == 1){\r\n            // only swap if the container has only 1 capacity\r\n            // swap\r\n            let original_container_name = draggable.container;\r\n            let other_draggable_name = container.content[0];\r\n            this.move_draggable_to_container(draggable_name, container_name, true);\r\n            this.move_draggable_to_container(other_draggable_name, original_container_name, ignore_callback);\r\n        }\r\n    }\r\n\r\n    startDrag(evt : DnDEvent) {\r\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\r\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\r\n        this.hoveredContainerName = null;\r\n\r\n        // reset container hovered class\r\n        this.reset_hovered_class();\r\n        // delete orphaned ghost\r\n        let ghosts = this.dnd_svg.getElementsByClassName(dnd_type.ghost);\r\n        for (let i = 0; i < ghosts.length; i++) ghosts[i].remove();\r\n        \r\n        // create a clone of the dragged element\r\n        if (this.draggedElementName == null) return;\r\n        let draggable = this.draggables[this.draggedElementName];\r\n        if (draggable.svgelement == undefined) return;\r\n        draggable.svgelement.classList.add(\"picked\");\r\n        this.onclickstart_callback[this.draggedElementName]?.();\r\n        this.draggedElementGhost = draggable.svgelement.cloneNode(true) as SVGElement;\r\n        // set pointer-events : none\r\n        this.draggedElementGhost.style.pointerEvents = \"none\";\r\n        this.draggedElementGhost.setAttribute(\"opacity\", \"0.5\");\r\n        this.draggedElementGhost.setAttribute(\"class\", dnd_type.ghost);\r\n        this.dnd_svg.append(this.draggedElementGhost);\r\n    }\r\n\r\n    get_dnd_element_data_from_evt(evt : DnDEvent) : {name : string, type : string} | null {\r\n        let element : HTMLElement | null = null;\r\n        if (window.TouchEvent && evt instanceof TouchEvent) { \r\n            let evt_touch = evt.touches[0];\r\n            element = document.elementFromPoint(evt_touch.clientX, evt_touch.clientY) as HTMLElement;\r\n        } else {\r\n            const evt_ = evt as MouseEvent\r\n            element = document.elementFromPoint(evt_.clientX, evt_.clientY) as HTMLElement;\r\n        }\r\n        if (element == null) return null;\r\n\r\n        if (element.localName == \"tspan\") element = element.parentElement;\r\n        if (element == null) return null;\r\n        \r\n        let dg_tag = element.getAttribute(\"_dg_tag\"); if (dg_tag == null) return null;\r\n\r\n        if (dg_tag == dnd_type.container) {\r\n            let parent = element.parentElement; if (parent == null) return null;\r\n            let name = this.dom_to_id_map.get(parent); if (name == null) return null;\r\n            return {name, type : dnd_type.container};\r\n        }\r\n        if (dg_tag == dnd_type.draggable) {\r\n            let parent = element.parentElement; if (parent == null) return null;\r\n            let name = this.dom_to_id_map.get(parent);  if (name == null) return null;\r\n            return {name, type : dnd_type.draggable};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    drag(evt : DnDEvent) {\r\n        if (this.draggedElementName == null) return;\r\n        if (this.draggedElementGhost == null) return;\r\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\r\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\r\n\r\n        this.reset_hovered_class();\r\n        let element_data = this.get_dnd_element_data_from_evt(evt);\r\n        if (element_data == null) {\r\n            this.hoveredContainerName = null;\r\n        } else if (element_data.type == dnd_type.container) {\r\n            this.hoveredContainerName = element_data.name;\r\n            this.containers[element_data.name].svgelement?.classList.add(\"hovered\");\r\n        } else if (element_data.type == dnd_type.draggable) {\r\n            this.hoveredContainerName = this.draggables[element_data.name]?.container;\r\n            this.draggables[element_data.name].svgelement?.classList.add(\"hovered\");\r\n        }\r\n\r\n        let coord = getMousePosition(evt, this.dnd_svg);\r\n        this.draggedElementGhost.setAttribute(\"transform\", `translate(${coord.x},${-coord.y})`);\r\n    }\r\n\r\n    endDrag(_evt : DnDEvent) {\r\n        if (this.hoveredContainerName != null && this.draggedElementName != null){\r\n            this.try_move_draggable_to_container(this.draggedElementName, this.hoveredContainerName);\r\n        }\r\n\r\n        // if dropped outside of any container\r\n        if (this.hoveredContainerName == null && this.draggedElementName != null \r\n            && this.dropped_outside_callback != null){\r\n            this.dropped_outside_callback(this.draggedElementName);\r\n        }\r\n\r\n        this.draggedElementName = null;\r\n        this.hoveredContainerName = null;\r\n        this.reset_hovered_class();\r\n        this.reset_picked_class();\r\n\r\n        if (this.draggedElementGhost != null){\r\n            this.draggedElementGhost.remove();\r\n            this.draggedElementGhost = null;\r\n        }\r\n    }\r\n\r\n    reset_hovered_class(){\r\n        for (let name in this.containers) {\r\n            this.containers[name].svgelement?.classList.remove(\"hovered\");\r\n        }\r\n        for (let name in this.draggables) {\r\n            this.draggables[name].svgelement?.classList.remove(\"hovered\");\r\n        }\r\n    }\r\n\r\n    reset_picked_class(){\r\n        for (let name in this.draggables) {\r\n            this.draggables[name].svgelement?.classList.remove(\"picked\");\r\n        }\r\n    }\r\n}\r\n\r\nclass ButtonHandler {\r\n    // callbacks : {[key : string] : (state : boolean) => any} = {};\r\n    states : {[key : string] : boolean} = {};\r\n    svg_g_element : {[key : string] : SVGGElement|undefined} = {};\r\n    touchdownName : string | null = null;\r\n    focus_padding: number = 1;\r\n\r\n    constructor(public button_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\r\n    }\r\n    \r\n    remove(name : string){\r\n        delete this.states[name];\r\n        const g = this.svg_g_element[name];\r\n        g?.remove();\r\n        delete this.svg_g_element[name];\r\n    }\r\n\r\n    /** add a new toggle button if it doesn't exist, otherwise, update diagrams and callback */\r\n    try_add_toggle(name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean, callback : (state : boolean, redraw? : boolean) => any) : setter_function_t {\r\n        let g = this.svg_g_element[name];\r\n        if (g) {\r\n            g.innerHTML = \"\";\r\n        } else {\r\n            g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n            this.button_svg.appendChild(g);\r\n        }\r\n        return this.add_toggle(name, diagram_on, diagram_off, state, g, callback);\r\n    }\r\n\r\n    private add_toggle(\r\n        name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean,\r\n        g : SVGGElement, callback : (state : boolean, redraw? : boolean) => any\r\n    ) : setter_function_t {\r\n        let g_off = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.button_svg, g_off, diagram_off, true, false, calculate_text_scale(this.diagram_svg));\r\n        g_off.setAttribute(\"overflow\", \"visible\");\r\n        g_off.style.cursor = \"pointer\";\r\n\r\n        let g_on = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.button_svg, g_on, diagram_on, true, false, calculate_text_scale(this.diagram_svg));\r\n        g_on.setAttribute(\"overflow\", \"visible\");\r\n        g_on.style.cursor = \"pointer\";\r\n\r\n        g.setAttribute(\"overflow\", \"visible\");\r\n        g.setAttribute(\"tabindex\", \"0\");\r\n        g.appendChild(g_on)\r\n        g.appendChild(g_off)\r\n        \r\n        this.svg_g_element[name] = g;\r\n        this.states[name] = state;\r\n\r\n        const set_display = (state : boolean) => {\r\n            g_on.setAttribute(\"display\", state ? \"block\" : \"none\");\r\n            g_off.setAttribute(\"display\", state ? \"none\" : \"block\");\r\n        }\r\n        set_display(this.states[name]);\r\n\r\n        const update_state = (state : boolean, redraw : boolean = true) => {\r\n            this.states[name] = state;\r\n            callback(this.states[name], redraw);\r\n            set_display(this.states[name]);\r\n        }\r\n        \r\n        g.onmousedown = (e) => {\r\n            e.preventDefault();\r\n        }\r\n        g.onclick = (e) => {\r\n            e.preventDefault();\r\n            update_state(!this.states[name]);\r\n        }\r\n        g.onkeydown = (e) => {\r\n            if (e.key == \"Enter\") update_state(!this.states[name]);\r\n        }\r\n        const setter = (state : boolean) => { update_state(state, false); }\r\n        return setter;\r\n    }\r\n\r\n    /** add a new click button if it doesn't exist, otherwise, update diagrams and callback */\r\n    try_add_click(\r\n        name : string, diagram : Diagram, diagram_pressed : Diagram, diagram_hover : Diagram,\r\n        callback : () => any\r\n    ){\r\n        let g = this.svg_g_element[name];\r\n        if (g) {\r\n            g.innerHTML = \"\";\r\n        } else {\r\n            g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n            this.button_svg.appendChild(g);\r\n        }\r\n        this.add_click(name, diagram, diagram_pressed, diagram_hover, g, callback);\r\n    }\r\n\r\n    private add_click(\r\n        name : string, diagram : Diagram, diagram_pressed : Diagram, diagram_hover : Diagram, \r\n        g : SVGGElement, callback : () => any\r\n    ){\r\n        let g_normal = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.button_svg, g_normal, diagram, true, false, calculate_text_scale(this.diagram_svg));\r\n        g_normal.setAttribute(\"overflow\", \"visible\");\r\n        g_normal.style.cursor = \"pointer\";\r\n\r\n        let g_pressed = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.button_svg, g_pressed, diagram_pressed, true, false, calculate_text_scale(this.diagram_svg));\r\n        g_pressed.setAttribute(\"overflow\", \"visible\");\r\n        g_pressed.style.cursor = \"pointer\";\r\n        \r\n        let g_hover = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        f_draw_to_svg(this.button_svg, g_hover, diagram_hover, true, false, calculate_text_scale(this.diagram_svg));\r\n        g_hover.setAttribute(\"overflow\", \"visible\");\r\n        g_hover.style.cursor = \"pointer\";\r\n        \r\n        g.setAttribute(\"class\", FOCUS_NO_OUTLINE_CLASSNAME)\r\n        g.setAttribute(\"overflow\", \"visible\");\r\n        g.setAttribute(\"tabindex\", \"0\");\r\n        g.appendChild(g_normal);\r\n        g.appendChild(g_pressed);\r\n        g.appendChild(g_hover);\r\n        this.add_focus_rect(g, diagram);\r\n\r\n        this.svg_g_element[name] = g;\r\n\r\n        const set_display = (pressed : boolean, hovered : boolean) => {\r\n            g_normal.setAttribute(\"display\", !pressed && !hovered ? \"block\" : \"none\");\r\n            g_pressed.setAttribute(\"display\", pressed ? \"block\" : \"none\");\r\n            g_hover.setAttribute(\"display\", hovered && !pressed ? \"block\" : \"none\");\r\n        }\r\n        set_display(false, false);\r\n        let pressed_state = false;\r\n        let hover_state = false;\r\n        \r\n        const update_display = () => {\r\n            set_display(pressed_state, hover_state);\r\n        }\r\n\r\n        g.onblur = (_e) => {\r\n            hover_state = false;\r\n            pressed_state = false;\r\n            update_display();\r\n        }\r\n        g.onmouseenter = (_e) => {\r\n            hover_state = true;\r\n            update_display();\r\n        }\r\n        g.onmouseleave = (_e) => {\r\n            hover_state = false;\r\n            pressed_state = false;\r\n            update_display();\r\n        }\r\n        g.onmousedown = (e) => {\r\n            e.preventDefault();\r\n            pressed_state = true;\r\n            update_display();\r\n        }\r\n        g.onmouseup = (e) => {\r\n            pressed_state = false;\r\n            update_display();\r\n        }\r\n        g.onclick = (e) => {\r\n            callback();\r\n            hover_state = false;\r\n            pressed_state = false;\r\n            update_display();\r\n        }\r\n        g.onkeydown = (e) => {\r\n            if (e.key == \"Enter\") {\r\n                callback();\r\n                pressed_state = true;\r\n                update_display();\r\n            }\r\n        }\r\n        g.onkeyup = (e) => {\r\n            pressed_state = false;\r\n            update_display();\r\n        }\r\n    }\r\n    \r\n    add_focus_rect(g: SVGGElement, diagram : Diagram) {\r\n        const bbox = diagram.bounding_box();\r\n        const pad = this.focus_padding;\r\n        const width = bbox[1].x - bbox[0].x + 2*pad;\r\n        const height = bbox[1].y - bbox[0].y + 2*pad;\r\n        // focus rect svg element\r\n        const focus_rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n        focus_rect.setAttribute(\"width\", width.toString());\r\n        focus_rect.setAttribute(\"height\", height.toString());\r\n        focus_rect.setAttribute(\"x\", (bbox[0].x - pad).toString());\r\n        focus_rect.setAttribute(\"y\", (-bbox[1].y - pad).toString());\r\n        focus_rect.setAttribute(\"fill\", \"none\");\r\n        focus_rect.setAttribute(\"stroke\", \"black\");\r\n        focus_rect.setAttribute(\"stroke-width\", \"1\");\r\n        focus_rect.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\r\n        focus_rect.setAttribute(\"class\", FOCUS_RECT_CLASSNAME);\r\n        g.appendChild(focus_rect);\r\n    }\r\n        \r\n}\r\n","import { Path, Diagram, DiagramType, diagram_combine, } from './diagram.js';\r\nimport { Vector2, V2, Vdir} from './vector.js';\r\nimport { linspace, linspace_exc, range } from './utils.js';\r\nimport { array_repeat } from './utils.js'\r\nimport { arrow1 } from './shapes.js';\r\nimport { TAG } from './tag_names.js';\r\n\r\ntype modifierFunction = (d : Diagram) => Diagram\r\n\r\n/**\r\n * convert a function that modifies a path of a diagram to a function that modifies a diagram\r\n * if the diagram is a polygon or curve, the function is applied directly to the diagram\r\n * if the diagram is a diagram, the function is recursively applied to all children\r\n * if the diagram is empty or text, the function is not applied\r\n * @param func function that modifies a path of a diagram\r\n*/\r\nfunction function_handle_path_type(func : modifierFunction) : modifierFunction {\r\n    function modified_func(d : Diagram) : Diagram {\r\n        if (d.type == DiagramType.Polygon || d.type == DiagramType.Curve ) {\r\n            // apply directly\r\n            return func(d);\r\n        } else if (d.type == DiagramType.Diagram) {\r\n            // recursively apply to all children\r\n            d.children = d.children.map(c => modified_func(c));\r\n            return d;\r\n        } else if (d.type == DiagramType.Text || d.type == DiagramType.MultilineText) {\r\n            // do nothing\r\n            return d;\r\n        } else {\r\n            throw new Error(\"Unreachable, unknown diagram type : \" + d.type);\r\n        }\r\n    }\r\n    return modified_func;\r\n}\r\n\r\n\r\n/**\r\n * Resample a diagram so that it has `n` points\r\n * @param n number of points\r\n * @returns function that modifies a diagram\r\n */\r\nexport function resample(n : number) : modifierFunction{\r\n    // TODO : this function uses Diagram.parametric_point,\r\n    // which might be slow for large n\r\n    // for performance reason, we might want to implement it directly by calculating\r\n    // the points of the path here\r\n    function func(d : Diagram) : Diagram {\r\n        if (d.path == undefined) return d;\r\n        let ts = (d.type == DiagramType.Curve) ? linspace(0, 1, n) : linspace_exc(0, 1, n);\r\n        let new_points = ts.map(t => d.parametric_point(t));\r\n        d.path = new Path(new_points);\r\n        return d;\r\n    }\r\n    return function_handle_path_type(func);\r\n}\r\n\r\n/**\r\n * Subdivide each segment of a diagram into n segments\r\n * @param n number of segments to subdivide each segment into\r\n * @returns function that modifies a diagram\r\n */\r\nexport function subdivide(n : number = 100) : modifierFunction {\r\n    function func(d : Diagram) : Diagram {\r\n        if (d.path == undefined) return d;\r\n\r\n        let new_points : Vector2[] = [];\r\n        for (let i = 0; i < d.path.points.length; i++){\r\n            let curr_i = i;\r\n            let next_i = (curr_i + 1) % d.path.points.length;\r\n            let curr_p = d.path.points[i];\r\n            let next_p = d.path.points[next_i];\r\n\r\n            let xs = linspace(curr_p.x, next_p.x, n+1);\r\n            let ys = linspace(curr_p.y, next_p.y, n+1);\r\n            let subdivide_points = xs.map((x,i) => V2(x, ys[i]));\r\n            // ignore the last point\r\n            subdivide_points.pop();\r\n            new_points = new_points.concat(subdivide_points);\r\n        }\r\n\r\n        d.path = new Path(new_points);\r\n        return d;\r\n    }\r\n    return function_handle_path_type(func);\r\n}\r\n\r\n/**\r\n * Get a slice of a diagram from `t_start` to `t_end`\r\n * @param t_start starting point of the slice\r\n * @param t_end ending point of the slice\r\n * @param n number of points in the slice\r\n * @returns function that modifies a diagram\r\n */\r\nexport function slicepath(t_start : number, t_end : number, n : number = 100) : modifierFunction {\r\n    if (t_start > t_end) [t_start, t_end] = [t_end, t_start];\r\n    if (t_start < 0) t_start = 0;\r\n    if (t_end > 1) t_end = 1;\r\n\r\n    let n_total = Math.floor(n / (t_end - t_start));\r\n    function func(d : Diagram) : Diagram {\r\n        if (d.path == undefined) return d;\r\n        let dnew = d.apply(resample(n_total));\r\n        if (dnew.path == undefined) return d;\r\n        // take slice of the path\r\n        let new_points = dnew.path.points.slice(\r\n            Math.floor(t_start * n_total),\r\n            Math.floor(t_end * n_total) + 1\r\n        );\r\n        dnew.path = new Path(new_points);\r\n        return dnew;\r\n    }\r\n    return function_handle_path_type(func);\r\n}\r\n\r\n\r\nfunction get_round_corner_arc_points(radius : number, points : [Vector2,Vector2,Vector2], count : number) : Vector2[] {\r\n    let [p1, p2, p3] = points;\r\n\r\n    let v1 = p1.sub(p2).normalize();\r\n    let v3 = p3.sub(p2).normalize();\r\n    let corner_angle = Math.abs((v1.angle() - v3.angle()) % Math.PI);\r\n    let s_dist  = radius/Math.tan(corner_angle/2);\r\n\r\n    // s_dist can only be as long as half the distance to the closest point\r\n    let d1 = p1.sub(p2).length();\r\n    let d3 = p3.sub(p2).length();\r\n    // recalculate\r\n    s_dist = Math.min(s_dist, d1/2, d3/2);\r\n    radius = s_dist * Math.tan(corner_angle/2);\r\n\r\n    let pa = p2.add(v1.scale(s_dist));\r\n    let pb = p2.add(v3.scale(s_dist));\r\n    let distc = Math.sqrt(radius*radius + s_dist*s_dist);\r\n    let pc = p2.add(\r\n        v1.add(v3).normalize().scale(distc)\r\n    );\r\n\r\n    let angle_a = pa.sub(pc).angle();\r\n    let angle_b = pb.sub(pc).angle();\r\n    // if we just use angle_a and angle_b as is, the arc might be drawn in the wrong direction\r\n    // find out which direction is the correct one\r\n    // check whether angle_a is closer to angle_b, angle_b + 2π, or angle_b - 2π\r\n    let angle_b_plus  = angle_b + 2*Math.PI;\r\n    let angle_b_minus = angle_b - 2*Math.PI;\r\n    let angle_a_b       = Math.abs(angle_a - angle_b);\r\n    let angle_a_b_plus  = Math.abs(angle_a - angle_b_plus);\r\n    let angle_a_b_minus = Math.abs(angle_a - angle_b_minus);\r\n    if (angle_a_b_plus < angle_a_b)  angle_b = angle_b_plus;\r\n    if (angle_a_b_minus < angle_a_b) angle_b = angle_b_minus;\r\n\r\n    let arc_points = linspace(angle_a, angle_b, count).map(a => pc.add(Vdir(a).scale(radius)));\r\n    return arc_points;\r\n}\r\n\r\n/**\r\n * Create a function that modifies a diagram by rounding the corners of a polygon or curve\r\n * @param radius radius of the corner\r\n * @param point_indices indices of the points to be rounded\r\n * @returns function that modifies a diagram\r\n *\r\n * @example\r\n * ```javascript\r\n * let s = square(5).apply(mod.round_corner(2, [0,2]))\r\n * ```\r\n */\r\nexport function round_corner(radius : number | number[] =  1, point_indices? : number[], count : number = 40) : modifierFunction {\r\n    // if radius is 0, return the identity function\r\n    if (radius == 0) return (d) => d;\r\n    \r\n    // if radius is a number, create an array of length one\r\n    if (typeof radius == \"number\") radius = [radius];\r\n\r\n    // create a function that modify the path of a diagram, (only works for polygon and curve)\r\n    // later we will convert it to a function that modifies any diagram using function_handle_path_type\r\n    function func(d : Diagram) : Diagram {\r\n        if (d.path == undefined) return d;\r\n        let diagram_point_indices = range(0, d.path.points.length);\r\n        if (point_indices == undefined) point_indices = diagram_point_indices;\r\n\r\n        // filter only the points that are in diagram_point_indices\r\n        point_indices = point_indices.filter(i => diagram_point_indices.includes(i));\r\n        // repeat the radius array to match the number of points\r\n        radius = array_repeat(radius as number[], point_indices.length);\r\n\r\n        let new_points : Vector2[] = [];\r\n        for (let i = 0; i < d.path.points.length; i++){\r\n            let curr_i = i;\r\n            if (!point_indices.includes(curr_i)) {\r\n                new_points.push(d.path.points[i]);\r\n                continue;\r\n            }\r\n            let prev_i = (curr_i - 1 + d.path.points.length) % d.path.points.length;\r\n            let next_i = (curr_i + 1) % d.path.points.length;\r\n            let prev_p = d.path.points[prev_i];\r\n            let curr_p = d.path.points[i];\r\n            let next_p = d.path.points[next_i];\r\n            let arc_points = get_round_corner_arc_points(\r\n                radius[point_indices.indexOf(curr_i)], [prev_p, curr_p, next_p], count);\r\n            new_points = new_points.concat(arc_points);\r\n        }\r\n\r\n        d.path = new Path(new_points);\r\n        return d;\r\n    }\r\n    return function_handle_path_type(func);\r\n}\r\n\r\n\r\n/**\r\n * Add an arrow to the end of a curve\r\n * Make sure the diagram this modifier is applied to is a curve\r\n * @param headsize size of the arrow head\r\n * @param flip flip the arrow position\r\n */\r\nexport function add_arrow(headsize : number, flip = false) : modifierFunction {\r\n    function func(c : Diagram) : Diagram {\r\n        if (c.path == undefined) return c;\r\n        let p1 = flip ? c.path.points[0] : c.path.points[c.path.points.length - 1];\r\n        let p0 = flip ? c.path.points[1] : c.path.points[c.path.points.length - 2];\r\n        let arrow = arrow1(p0, p1, headsize);\r\n        return diagram_combine(c, arrow).clone_style_from(c);\r\n    }\r\n    return function_handle_path_type(func);\r\n}\r\n\r\nfunction arrowhead_angle(d : Diagram) : number {\r\n    if (!d.contain_tag(TAG.ARROW_HEAD)) return NaN;\r\n    let points = d.path?.points\r\n    if (points == undefined) return NaN;\r\n    if (points.length != 3) return NaN;\r\n    let v_tip   = points[0];\r\n    let v_base1 = points[1];\r\n    let v_base2 = points[2];\r\n    let v_base  = v_base1.add(v_base2).scale(0.5)\r\n    let v_dir   = v_tip.sub(v_base);\r\n    return v_dir.angle();\r\n}\r\n\r\n/**\r\n* Replace arrowhead inside a diagram with another diagram\r\n* @param new_arrowhead diagram to replace the arrowhead with\r\n* The arrow will be rotated automatically,\r\n* The default direction is to the right (+x) with the tip at the origin\r\n*/\r\nexport function arrowhead_replace(new_arrowhead : Diagram) : modifierFunction {\r\n    return function func(d : Diagram) : Diagram {\r\n        return d.apply_to_tagged_recursive(TAG.ARROW_HEAD, (arrowhead : Diagram) => {\r\n            let angle = arrowhead_angle(arrowhead);\r\n            return new_arrowhead.copy().rotate(angle).position(arrowhead.origin);\r\n        })\r\n    }\r\n}\r\n","//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\nvar AlongIntersection;\n(function (AlongIntersection) {\n    AlongIntersection[AlongIntersection[\"BeforeStart\"] = 0] = \"BeforeStart\";\n    AlongIntersection[AlongIntersection[\"EqualStart\"] = 1] = \"EqualStart\";\n    AlongIntersection[AlongIntersection[\"BetweenStartAndEnd\"] = 2] = \"BetweenStartAndEnd\";\n    AlongIntersection[AlongIntersection[\"EqualEnd\"] = 3] = \"EqualEnd\";\n    AlongIntersection[AlongIntersection[\"AfterEnd\"] = 4] = \"AfterEnd\";\n})(AlongIntersection || (AlongIntersection = {}));\nclass Geometry {\n    pointsSame(p1, p2) {\n        return this.pointsSameX(p1, p2) && this.pointsSameY(p1, p2);\n    }\n    pointsCompare(p1, p2) {\n        // returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\n        if (this.pointsSameX(p1, p2)) {\n            return this.pointsSameY(p1, p2) ? 0 : p1[1] < p2[1] ? -1 : 1;\n        }\n        return p1[0] < p2[0] ? -1 : 1;\n    }\n}\nclass GeometryEpsilon extends Geometry {\n    constructor(epsilon = 0.0000000001) {\n        super();\n        this.epsilon = epsilon;\n    }\n    pointAboveOrOnLine(p, left, right) {\n        const Ax = left[0];\n        const Ay = left[1];\n        const Bx = right[0];\n        const By = right[1];\n        const Cx = p[0];\n        const Cy = p[1];\n        return (Bx - Ax) * (Cy - Ay) - (By - Ay) * (Cx - Ax) >= -this.epsilon;\n    }\n    pointBetween(p, left, right) {\n        // p must be collinear with left->right\n        // returns false if p == left, p == right, or left == right\n        const d_py_ly = p[1] - left[1];\n        const d_rx_lx = right[0] - left[0];\n        const d_px_lx = p[0] - left[0];\n        const d_ry_ly = right[1] - left[1];\n        const dot = d_px_lx * d_rx_lx + d_py_ly * d_ry_ly;\n        // if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n        // if `dot` is less than 0, then `p` is to the left of `left` (reject)\n        if (dot < this.epsilon) {\n            return false;\n        }\n        const sqlen = d_rx_lx * d_rx_lx + d_ry_ly * d_ry_ly;\n        // if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n        // therefore, if `dot - sqlen` is greater than 0, then `p` is to the right\n        // of `right` (reject)\n        if (dot - sqlen > -this.epsilon) {\n            return false;\n        }\n        return true;\n    }\n    pointsSameX(p1, p2) {\n        return Math.abs(p1[0] - p2[0]) < this.epsilon;\n    }\n    pointsSameY(p1, p2) {\n        return Math.abs(p1[1] - p2[1]) < this.epsilon;\n    }\n    pointsCollinear(p1, p2, p3) {\n        // does pt1->pt2->pt3 make a straight line?\n        // essentially this is just checking to see if\n        //   slope(pt1->pt2) === slope(pt2->pt3)\n        // if slopes are equal, then they must be collinear, because they share pt2\n        const dx1 = p1[0] - p2[0];\n        const dy1 = p1[1] - p2[1];\n        const dx2 = p2[0] - p3[0];\n        const dy2 = p2[1] - p3[1];\n        return Math.abs(dx1 * dy2 - dx2 * dy1) < this.epsilon;\n    }\n    linesIntersect(aStart, aEnd, bStart, bEnd) {\n        // returns null if the lines are coincident (e.g., parallel or on top of\n        // each other)\n        //\n        // returns an object if the lines intersect:\n        //   {\n        //     p: [x, y],    where the intersection point is at\n        //     alongA: where intersection point is along A,\n        //     alongB: where intersection point is along B\n        //   }\n        //\n        // alongA and alongB will each be one of AlongIntersection, depending on\n        // where the intersection point is along the A and B lines\n        //\n        const adx = aEnd[0] - aStart[0];\n        const ady = aEnd[1] - aStart[1];\n        const bdx = bEnd[0] - bStart[0];\n        const bdy = bEnd[1] - bStart[1];\n        const axb = adx * bdy - ady * bdx;\n        if (Math.abs(axb) < this.epsilon) {\n            return null; // lines are coincident\n        }\n        const dx = aStart[0] - bStart[0];\n        const dy = aStart[1] - bStart[1];\n        const A = (bdx * dy - bdy * dx) / axb;\n        const B = (adx * dy - ady * dx) / axb;\n        // categorizes where along the line the intersection point is at\n        const categorize = (v) => v <= -this.epsilon\n            ? AlongIntersection.BeforeStart\n            : v < this.epsilon\n                ? AlongIntersection.EqualStart\n                : v - 1 <= -this.epsilon\n                    ? AlongIntersection.BetweenStartAndEnd\n                    : v - 1 < this.epsilon\n                        ? AlongIntersection.EqualEnd\n                        : AlongIntersection.AfterEnd;\n        const p = [aStart[0] + A * adx, aStart[1] + A * ady];\n        return {\n            alongA: categorize(A),\n            alongB: categorize(B),\n            p,\n        };\n    }\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\nclass List {\n    constructor() {\n        this.nodes = [];\n    }\n    remove(node) {\n        const i = this.nodes.indexOf(node);\n        if (i >= 0) {\n            this.nodes.splice(i, 1);\n        }\n    }\n    getIndex(node) {\n        return this.nodes.indexOf(node);\n    }\n    isEmpty() {\n        return this.nodes.length <= 0;\n    }\n    getHead() {\n        return this.nodes[0];\n    }\n    removeHead() {\n        this.nodes.shift();\n    }\n    insertBefore(node, check) {\n        this.findTransition(node, check).insert(node);\n    }\n    findTransition(node, check) {\n        var _a, _b;\n        // bisect to find the transition point\n        const compare = (a, b) => check(b) - check(a);\n        let i = 0;\n        let high = this.nodes.length;\n        while (i < high) {\n            const mid = (i + high) >> 1;\n            if (compare(this.nodes[mid], node) > 0) {\n                high = mid;\n            }\n            else {\n                i = mid + 1;\n            }\n        }\n        return {\n            before: i <= 0 ? null : (_a = this.nodes[i - 1]) !== null && _a !== void 0 ? _a : null,\n            after: (_b = this.nodes[i]) !== null && _b !== void 0 ? _b : null,\n            insert: (node) => {\n                this.nodes.splice(i, 0, node);\n                return node;\n            },\n        };\n    }\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\nclass Segment {\n    constructor(start, end, copyMyFill, log) {\n        var _a;\n        this.otherFill = null;\n        this.id = (_a = log === null || log === void 0 ? void 0 : log.segmentId()) !== null && _a !== void 0 ? _a : -1;\n        this.start = start;\n        this.end = end;\n        this.myFill = {\n            above: copyMyFill ? copyMyFill.myFill.above : null,\n            below: copyMyFill ? copyMyFill.myFill.below : null,\n        };\n    }\n}\nclass Event {\n    constructor(isStart, p, seg, primary) {\n        this.status = null;\n        this.isStart = isStart;\n        this.p = p;\n        this.seg = seg;\n        this.primary = primary;\n    }\n}\nclass Intersecter {\n    constructor(selfIntersection, geo, log = null) {\n        this.events = new List();\n        this.status = new List();\n        this.selfIntersection = selfIntersection;\n        this.geo = geo;\n        this.log = log;\n    }\n    compareEvents(p1_isStart, p1_1, p1_2, p2_isStart, p2_1, p2_2) {\n        // compare the selected points first\n        const comp = this.geo.pointsCompare(p1_1, p2_1);\n        if (comp !== 0) {\n            return comp;\n        }\n        // the selected points are the same\n        if (this.geo.pointsSame(p1_2, p2_2)) {\n            // if the non-selected points are the same too...\n            return 0; // then the segments are equal\n        }\n        if (p1_isStart !== p2_isStart) {\n            // if one is a start and the other isn't...\n            return p1_isStart ? 1 : -1; // favor the one that isn't the start\n        }\n        // otherwise, we'll have to calculate which one is below the other manually\n        return this.geo.pointAboveOrOnLine(p1_2, p2_isStart ? p2_1 : p2_2, // order matters\n        p2_isStart ? p2_2 : p2_1)\n            ? 1\n            : -1;\n    }\n    addEvent(ev) {\n        this.events.insertBefore(ev, (here) => {\n            if (here === ev) {\n                return 0;\n            }\n            return this.compareEvents(ev.isStart, ev.p, ev.other.p, here.isStart, here.p, here.other.p);\n        });\n    }\n    divideEvent(ev, p) {\n        var _a;\n        const ns = new Segment(p, ev.seg.end, ev.seg, this.log);\n        // slides an end backwards\n        //   (start)------------(end)    to:\n        //   (start)---(end)\n        (_a = this.log) === null || _a === void 0 ? void 0 : _a.segmentChop(ev.seg, p);\n        this.events.remove(ev.other);\n        ev.seg.end = p;\n        ev.other.p = p;\n        this.addEvent(ev.other);\n        return this.addSegment(ns, ev.primary);\n    }\n    newSegment(p1, p2) {\n        const forward = this.geo.pointsCompare(p1, p2);\n        if (forward === 0) {\n            // points are equal, so we have a zero-length segment\n            return null; // skip it\n        }\n        return forward < 0\n            ? new Segment(p1, p2, null, this.log)\n            : new Segment(p2, p1, null, this.log);\n    }\n    addSegment(seg, primary) {\n        const evStart = new Event(true, seg.start, seg, primary);\n        const evEnd = new Event(false, seg.end, seg, primary);\n        evStart.other = evEnd;\n        evEnd.other = evStart;\n        this.addEvent(evStart);\n        this.addEvent(evEnd);\n        return evStart;\n    }\n    addRegion(region) {\n        // regions are a list of points:\n        //  [ [0, 0], [100, 0], [50, 100] ]\n        // you can add multiple regions before running calculate\n        let pt1;\n        let pt2 = region[region.length - 1];\n        for (let i = 0; i < region.length; i++) {\n            pt1 = pt2;\n            pt2 = region[i];\n            const seg = this.newSegment(pt1, pt2);\n            if (seg) {\n                this.addSegment(seg, true);\n            }\n        }\n    }\n    compareStatus(ev1, ev2) {\n        const a1 = ev1.seg.start;\n        const a2 = ev1.seg.end;\n        const b1 = ev2.seg.start;\n        const b2 = ev2.seg.end;\n        if (this.geo.pointsCollinear(a1, b1, b2)) {\n            if (this.geo.pointsCollinear(a2, b1, b2)) {\n                return 1;\n            }\n            return this.geo.pointAboveOrOnLine(a2, b1, b2) ? 1 : -1;\n        }\n        return this.geo.pointAboveOrOnLine(a1, b1, b2) ? 1 : -1;\n    }\n    statusFindSurrounding(ev) {\n        return this.status.findTransition(ev, (here) => {\n            if (here === ev) {\n                return 0;\n            }\n            return -this.compareStatus(ev, here);\n        });\n    }\n    checkIntersection(ev1, ev2) {\n        var _a;\n        // returns the segment equal to ev1, or null if nothing equal\n        const seg1 = ev1.seg;\n        const seg2 = ev2.seg;\n        const a1 = seg1.start;\n        const a2 = seg1.end;\n        const b1 = seg2.start;\n        const b2 = seg2.end;\n        (_a = this.log) === null || _a === void 0 ? void 0 : _a.checkIntersection(seg1, seg2);\n        const i = this.geo.linesIntersect(a1, a2, b1, b2);\n        if (i === null) {\n            // segments are parallel or coincident\n            // if points aren't collinear, then the segments are parallel, so no\n            // intersections\n            if (!this.geo.pointsCollinear(a1, a2, b1)) {\n                return null;\n            }\n            // otherwise, segments are on top of each other somehow (aka coincident)\n            if (this.geo.pointsSame(a1, b2) || this.geo.pointsSame(a2, b1)) {\n                return null; // segments touch at endpoints... no intersection\n            }\n            const a1_equ_b1 = this.geo.pointsSame(a1, b1);\n            const a2_equ_b2 = this.geo.pointsSame(a2, b2);\n            if (a1_equ_b1 && a2_equ_b2) {\n                return ev2; // segments are exactly equal\n            }\n            const a1_between = !a1_equ_b1 && this.geo.pointBetween(a1, b1, b2);\n            const a2_between = !a2_equ_b2 && this.geo.pointBetween(a2, b1, b2);\n            if (a1_equ_b1) {\n                if (a2_between) {\n                    //  (a1)---(a2)\n                    //  (b1)----------(b2)\n                    this.divideEvent(ev2, a2);\n                }\n                else {\n                    //  (a1)----------(a2)\n                    //  (b1)---(b2)\n                    this.divideEvent(ev1, b2);\n                }\n                return ev2;\n            }\n            else if (a1_between) {\n                if (!a2_equ_b2) {\n                    // make a2 equal to b2\n                    if (a2_between) {\n                        //         (a1)---(a2)\n                        //  (b1)-----------------(b2)\n                        this.divideEvent(ev2, a2);\n                    }\n                    else {\n                        //         (a1)----------(a2)\n                        //  (b1)----------(b2)\n                        this.divideEvent(ev1, b2);\n                    }\n                }\n                //         (a1)---(a2)\n                //  (b1)----------(b2)\n                this.divideEvent(ev2, a1);\n            }\n        }\n        else {\n            // otherwise, lines intersect at i.p, which may or may not be between the\n            // endpoints\n            // is A divided between its endpoints? (exclusive)\n            if (i.alongA === AlongIntersection.BetweenStartAndEnd) {\n                if (i.alongB === AlongIntersection.EqualStart) {\n                    this.divideEvent(ev1, b1);\n                }\n                else if (i.alongB === AlongIntersection.BetweenStartAndEnd) {\n                    this.divideEvent(ev1, i.p);\n                }\n                else if (i.alongB === AlongIntersection.EqualEnd) {\n                    this.divideEvent(ev1, b2);\n                }\n            }\n            // is B divided between its endpoints? (exclusive)\n            if (i.alongB === AlongIntersection.BetweenStartAndEnd) {\n                if (i.alongA === AlongIntersection.EqualStart) {\n                    this.divideEvent(ev2, a1);\n                }\n                else if (i.alongA === AlongIntersection.BetweenStartAndEnd) {\n                    this.divideEvent(ev2, i.p);\n                }\n                else if (i.alongA === AlongIntersection.EqualEnd) {\n                    this.divideEvent(ev2, a2);\n                }\n            }\n        }\n        return null;\n    }\n    calculate(primaryPolyInverted, secondaryPolyInverted) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const segments = [];\n        while (!this.events.isEmpty()) {\n            const ev = this.events.getHead();\n            (_a = this.log) === null || _a === void 0 ? void 0 : _a.vert(ev.p[0]);\n            if (ev.isStart) {\n                (_b = this.log) === null || _b === void 0 ? void 0 : _b.segmentNew(ev.seg, ev.primary);\n                const surrounding = this.statusFindSurrounding(ev);\n                const above = surrounding.before;\n                const below = surrounding.after;\n                (_c = this.log) === null || _c === void 0 ? void 0 : _c.tempStatus(ev.seg, above ? above.seg : false, below ? below.seg : false);\n                const checkBothIntersections = () => {\n                    if (above) {\n                        const eve = this.checkIntersection(ev, above);\n                        if (eve) {\n                            return eve;\n                        }\n                    }\n                    if (below) {\n                        return this.checkIntersection(ev, below);\n                    }\n                    return null;\n                };\n                const eve = checkBothIntersections();\n                if (eve) {\n                    // ev and eve are equal\n                    // we'll keep eve and throw away ev\n                    // merge ev.seg's fill information into eve.seg\n                    if (this.selfIntersection) {\n                        let toggle; // are we a toggling edge?\n                        if (ev.seg.myFill.below === null) {\n                            toggle = true;\n                        }\n                        else {\n                            toggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n                        }\n                        // merge two segments that belong to the same polygon\n                        // think of this as sandwiching two segments together, where\n                        // `eve.seg` is the bottom -- this will cause the above fill flag to\n                        // toggle\n                        if (toggle) {\n                            eve.seg.myFill.above = !eve.seg.myFill.above;\n                        }\n                    }\n                    else {\n                        // merge two segments that belong to different polygons\n                        // each segment has distinct knowledge, so no special logic is\n                        // needed\n                        // note that this can only happen once per segment in this phase,\n                        // because we are guaranteed that all self-intersections are gone\n                        eve.seg.otherFill = ev.seg.myFill;\n                    }\n                    (_d = this.log) === null || _d === void 0 ? void 0 : _d.segmentUpdate(eve.seg);\n                    this.events.remove(ev.other);\n                    this.events.remove(ev);\n                }\n                if (this.events.getHead() !== ev) {\n                    // something was inserted before us in the event queue, so loop back\n                    // around and process it before continuing\n                    (_e = this.log) === null || _e === void 0 ? void 0 : _e.rewind(ev.seg);\n                    continue;\n                }\n                //\n                // calculate fill flags\n                //\n                if (this.selfIntersection) {\n                    let toggle; // are we a toggling edge?\n                    if (ev.seg.myFill.below === null) {\n                        // if we are a new segment...\n                        // then we toggle\n                        toggle = true;\n                    }\n                    else {\n                        // we are a segment that has previous knowledge from a division\n                        // calculate toggle\n                        toggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n                    }\n                    // next, calculate whether we are filled below us\n                    if (!below) {\n                        // if nothing is below us...\n                        // we are filled below us if the polygon is inverted\n                        ev.seg.myFill.below = primaryPolyInverted;\n                    }\n                    else {\n                        // otherwise, we know the answer -- it's the same if whatever is\n                        // below us is filled above it\n                        ev.seg.myFill.below = below.seg.myFill.above;\n                    }\n                    // since now we know if we're filled below us, we can calculate\n                    // whether we're filled above us by applying toggle to whatever is\n                    // below us\n                    if (toggle) {\n                        ev.seg.myFill.above = !ev.seg.myFill.below;\n                    }\n                    else {\n                        ev.seg.myFill.above = ev.seg.myFill.below;\n                    }\n                }\n                else {\n                    // now we fill in any missing transition information, since we are\n                    // all-knowing at this point\n                    if (ev.seg.otherFill === null) {\n                        // if we don't have other information, then we need to figure out if\n                        // we're inside the other polygon\n                        let inside;\n                        if (!below) {\n                            // if nothing is below us, then we're inside if the other polygon\n                            // is inverted\n                            inside = ev.primary ? secondaryPolyInverted : primaryPolyInverted;\n                        }\n                        else {\n                            // otherwise, something is below us\n                            // so copy the below segment's other polygon's above\n                            if (ev.primary === below.primary) {\n                                if (below.seg.otherFill === null) {\n                                    throw new Error(\"otherFill is null\");\n                                }\n                                inside = below.seg.otherFill.above;\n                            }\n                            else {\n                                inside = below.seg.myFill.above;\n                            }\n                        }\n                        ev.seg.otherFill = {\n                            above: inside,\n                            below: inside,\n                        };\n                    }\n                }\n                (_f = this.log) === null || _f === void 0 ? void 0 : _f.status(ev.seg, above ? above.seg : false, below ? below.seg : false);\n                // insert the status and remember it for later removal\n                ev.other.status = surrounding.insert(ev);\n            }\n            else {\n                // end\n                const st = ev.status;\n                if (st === null) {\n                    throw new Error(\"PolyBool: Zero-length segment detected; your epsilon is \" +\n                        \"probably too small or too large\");\n                }\n                // removing the status will create two new adjacent edges, so we'll need\n                // to check for those\n                const i = this.status.getIndex(st);\n                if (i > 0 && i < this.status.nodes.length - 1) {\n                    const before = this.status.nodes[i - 1];\n                    const after = this.status.nodes[i + 1];\n                    this.checkIntersection(before, after);\n                }\n                (_g = this.log) === null || _g === void 0 ? void 0 : _g.statusRemove(st.seg);\n                // remove the status\n                this.status.remove(st);\n                // if we've reached this point, we've calculated everything there is to\n                // know, so save the segment for reporting\n                if (!ev.primary) {\n                    // make sure `seg.myFill` actually points to the primary polygon\n                    // though\n                    if (!ev.seg.otherFill) {\n                        throw new Error(\"otherFill is null\");\n                    }\n                    const s = ev.seg.myFill;\n                    ev.seg.myFill = ev.seg.otherFill;\n                    ev.seg.otherFill = s;\n                }\n                segments.push(ev.seg);\n            }\n            // remove the event and continue\n            this.events.removeHead();\n        }\n        (_h = this.log) === null || _h === void 0 ? void 0 : _h.done();\n        return segments;\n    }\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\n//\n// filter a list of segments based on boolean operations\n//\nfunction select(segments, selection, log) {\n    const result = [];\n    for (const seg of segments) {\n        const index = (seg.myFill.above ? 8 : 0) +\n            (seg.myFill.below ? 4 : 0) +\n            (seg.otherFill && seg.otherFill.above ? 2 : 0) +\n            (seg.otherFill && seg.otherFill.below ? 1 : 0);\n        if (selection[index] !== 0) {\n            // copy the segment to the results, while also calculating the fill status\n            const keep = new Segment(seg.start, seg.end, null, log);\n            keep.myFill.above = selection[index] === 1; // 1 if filled above\n            keep.myFill.below = selection[index] === 2; // 2 if filled below\n            result.push(keep);\n        }\n    }\n    log === null || log === void 0 ? void 0 : log.selected(result);\n    return result;\n}\nclass SegmentSelector {\n    static union(segments, log) {\n        // primary | secondary\n        // above1 below1 above2 below2    Keep?               Value\n        //    0      0      0      0   =>   no                  0\n        //    0      0      0      1   =>   yes filled below    2\n        //    0      0      1      0   =>   yes filled above    1\n        //    0      0      1      1   =>   no                  0\n        //    0      1      0      0   =>   yes filled below    2\n        //    0      1      0      1   =>   yes filled below    2\n        //    0      1      1      0   =>   no                  0\n        //    0      1      1      1   =>   no                  0\n        //    1      0      0      0   =>   yes filled above    1\n        //    1      0      0      1   =>   no                  0\n        //    1      0      1      0   =>   yes filled above    1\n        //    1      0      1      1   =>   no                  0\n        //    1      1      0      0   =>   no                  0\n        //    1      1      0      1   =>   no                  0\n        //    1      1      1      0   =>   no                  0\n        //    1      1      1      1   =>   no                  0\n        return select(segments, [0, 2, 1, 0, 2, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], log);\n    }\n    static intersect(segments, log) {\n        // primary & secondary\n        // above1 below1 above2 below2    Keep?               Value\n        //    0      0      0      0   =>   no                  0\n        //    0      0      0      1   =>   no                  0\n        //    0      0      1      0   =>   no                  0\n        //    0      0      1      1   =>   no                  0\n        //    0      1      0      0   =>   no                  0\n        //    0      1      0      1   =>   yes filled below    2\n        //    0      1      1      0   =>   no                  0\n        //    0      1      1      1   =>   yes filled below    2\n        //    1      0      0      0   =>   no                  0\n        //    1      0      0      1   =>   no                  0\n        //    1      0      1      0   =>   yes filled above    1\n        //    1      0      1      1   =>   yes filled above    1\n        //    1      1      0      0   =>   no                  0\n        //    1      1      0      1   =>   yes filled below    2\n        //    1      1      1      0   =>   yes filled above    1\n        //    1      1      1      1   =>   no                  0\n        return select(segments, [0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1, 1, 0, 2, 1, 0], log);\n    }\n    static difference(segments, log) {\n        // primary - secondary\n        // above1 below1 above2 below2    Keep?               Value\n        //    0      0      0      0   =>   no                  0\n        //    0      0      0      1   =>   no                  0\n        //    0      0      1      0   =>   no                  0\n        //    0      0      1      1   =>   no                  0\n        //    0      1      0      0   =>   yes filled below    2\n        //    0      1      0      1   =>   no                  0\n        //    0      1      1      0   =>   yes filled below    2\n        //    0      1      1      1   =>   no                  0\n        //    1      0      0      0   =>   yes filled above    1\n        //    1      0      0      1   =>   yes filled above    1\n        //    1      0      1      0   =>   no                  0\n        //    1      0      1      1   =>   no                  0\n        //    1      1      0      0   =>   no                  0\n        //    1      1      0      1   =>   yes filled above    1\n        //    1      1      1      0   =>   yes filled below    2\n        //    1      1      1      1   =>   no                  0\n        return select(segments, [0, 0, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 1, 2, 0], log);\n    }\n    static differenceRev(segments, log) {\n        // secondary - primary\n        // above1 below1 above2 below2    Keep?               Value\n        //    0      0      0      0   =>   no                  0\n        //    0      0      0      1   =>   yes filled below    2\n        //    0      0      1      0   =>   yes filled above    1\n        //    0      0      1      1   =>   no                  0\n        //    0      1      0      0   =>   no                  0\n        //    0      1      0      1   =>   no                  0\n        //    0      1      1      0   =>   yes filled above    1\n        //    0      1      1      1   =>   yes filled above    1\n        //    1      0      0      0   =>   no                  0\n        //    1      0      0      1   =>   yes filled below    2\n        //    1      0      1      0   =>   no                  0\n        //    1      0      1      1   =>   yes filled below    2\n        //    1      1      0      0   =>   no                  0\n        //    1      1      0      1   =>   no                  0\n        //    1      1      1      0   =>   no                  0\n        //    1      1      1      1   =>   no                  0\n        return select(segments, [0, 2, 1, 0, 0, 0, 1, 1, 0, 2, 0, 2, 0, 0, 0, 0], log);\n    }\n    static xor(segments, log) {\n        // primary ^ secondary\n        // above1 below1 above2 below2    Keep?               Value\n        //    0      0      0      0   =>   no                  0\n        //    0      0      0      1   =>   yes filled below    2\n        //    0      0      1      0   =>   yes filled above    1\n        //    0      0      1      1   =>   no                  0\n        //    0      1      0      0   =>   yes filled below    2\n        //    0      1      0      1   =>   no                  0\n        //    0      1      1      0   =>   no                  0\n        //    0      1      1      1   =>   yes filled above    1\n        //    1      0      0      0   =>   yes filled above    1\n        //    1      0      0      1   =>   no                  0\n        //    1      0      1      0   =>   no                  0\n        //    1      0      1      1   =>   yes filled below    2\n        //    1      1      0      0   =>   no                  0\n        //    1      1      0      1   =>   yes filled above    1\n        //    1      1      1      0   =>   yes filled below    2\n        //    1      1      1      1   =>   no                  0\n        return select(segments, [0, 2, 1, 0, 2, 0, 0, 1, 1, 0, 0, 2, 0, 1, 2, 0], log);\n    }\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\n//\n// converts a list of segments into a list of regions, while also removing\n// unnecessary verticies\n//\nfunction SegmentChainer(segments, geo, log) {\n    const chains = [];\n    const regions = [];\n    for (const seg of segments) {\n        const pt1 = seg.start;\n        const pt2 = seg.end;\n        if (geo.pointsSame(pt1, pt2)) {\n            console.warn(\"PolyBool: Warning: Zero-length segment detected; your epsilon is \" +\n                \"probably too small or too large\");\n            continue;\n        }\n        log === null || log === void 0 ? void 0 : log.chainStart(seg);\n        // search for two chains that this segment matches\n        const first_match = {\n            index: 0,\n            matches_head: false,\n            matches_pt1: false,\n        };\n        const second_match = {\n            index: 0,\n            matches_head: false,\n            matches_pt1: false,\n        };\n        let next_match = first_match;\n        function setMatch(index, matches_head, matches_pt1) {\n            // return true if we've matched twice\n            if (next_match) {\n                next_match.index = index;\n                next_match.matches_head = matches_head;\n                next_match.matches_pt1 = matches_pt1;\n            }\n            if (next_match === first_match) {\n                next_match = second_match;\n                return false;\n            }\n            next_match = null;\n            return true; // we've matched twice, we're done here\n        }\n        for (let i = 0; i < chains.length; i++) {\n            const chain = chains[i];\n            const head = chain[0];\n            const tail = chain[chain.length - 1];\n            if (geo.pointsSame(head, pt1)) {\n                if (setMatch(i, true, true)) {\n                    break;\n                }\n            }\n            else if (geo.pointsSame(head, pt2)) {\n                if (setMatch(i, true, false)) {\n                    break;\n                }\n            }\n            else if (geo.pointsSame(tail, pt1)) {\n                if (setMatch(i, false, true)) {\n                    break;\n                }\n            }\n            else if (geo.pointsSame(tail, pt2)) {\n                if (setMatch(i, false, false)) {\n                    break;\n                }\n            }\n        }\n        if (next_match === first_match) {\n            // we didn't match anything, so create a new chain\n            chains.push([pt1, pt2]);\n            log === null || log === void 0 ? void 0 : log.chainNew(pt1, pt2);\n            continue;\n        }\n        if (next_match === second_match) {\n            // we matched a single chain\n            log === null || log === void 0 ? void 0 : log.chainMatch(first_match.index);\n            // add the other point to the apporpriate end, and check to see if we've closed the\n            // chain into a loop\n            const index = first_match.index;\n            const pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n            const addToHead = first_match.matches_head; // if we matched at head, then add to the head\n            const chain = chains[index];\n            let grow = addToHead ? chain[0] : chain[chain.length - 1];\n            const grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n            const oppo = addToHead ? chain[chain.length - 1] : chain[0];\n            const oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n            if (geo.pointsCollinear(grow2, grow, pt)) {\n                // grow isn't needed because it's directly between grow2 and pt:\n                // grow2 ---grow---> pt\n                if (addToHead) {\n                    log === null || log === void 0 ? void 0 : log.chainRemoveHead(first_match.index, pt);\n                    chain.shift();\n                }\n                else {\n                    log === null || log === void 0 ? void 0 : log.chainRemoveTail(first_match.index, pt);\n                    chain.pop();\n                }\n                grow = grow2; // old grow is gone... new grow is what grow2 was\n            }\n            if (geo.pointsSame(oppo, pt)) {\n                // we're closing the loop, so remove chain from chains\n                chains.splice(index, 1);\n                if (geo.pointsCollinear(oppo2, oppo, grow)) {\n                    // oppo isn't needed because it's directly between oppo2 and grow:\n                    // oppo2 ---oppo--->grow\n                    if (addToHead) {\n                        log === null || log === void 0 ? void 0 : log.chainRemoveTail(first_match.index, grow);\n                        chain.pop();\n                    }\n                    else {\n                        log === null || log === void 0 ? void 0 : log.chainRemoveHead(first_match.index, grow);\n                        chain.shift();\n                    }\n                }\n                log === null || log === void 0 ? void 0 : log.chainClose(first_match.index);\n                // we have a closed chain!\n                regions.push(chain);\n                continue;\n            }\n            // not closing a loop, so just add it to the apporpriate side\n            if (addToHead) {\n                log === null || log === void 0 ? void 0 : log.chainAddHead(first_match.index, pt);\n                chain.unshift(pt);\n            }\n            else {\n                log === null || log === void 0 ? void 0 : log.chainAddTail(first_match.index, pt);\n                chain.push(pt);\n            }\n            continue;\n        }\n        // otherwise, we matched two chains, so we need to combine those chains together\n        function reverseChain(index) {\n            log === null || log === void 0 ? void 0 : log.chainReverse(index);\n            chains[index].reverse(); // gee, that's easy\n        }\n        function appendChain(index1, index2) {\n            // index1 gets index2 appended to it, and index2 is removed\n            const chain1 = chains[index1];\n            const chain2 = chains[index2];\n            let tail = chain1[chain1.length - 1];\n            const tail2 = chain1[chain1.length - 2];\n            const head = chain2[0];\n            const head2 = chain2[1];\n            if (geo.pointsCollinear(tail2, tail, head)) {\n                // tail isn't needed because it's directly between tail2 and head\n                // tail2 ---tail---> head\n                log === null || log === void 0 ? void 0 : log.chainRemoveTail(index1, tail);\n                chain1.pop();\n                tail = tail2; // old tail is gone... new tail is what tail2 was\n            }\n            if (geo.pointsCollinear(tail, head, head2)) {\n                // head isn't needed because it's directly between tail and head2\n                // tail ---head---> head2\n                log === null || log === void 0 ? void 0 : log.chainRemoveHead(index2, head);\n                chain2.shift();\n            }\n            log === null || log === void 0 ? void 0 : log.chainJoin(index1, index2);\n            chains[index1] = chain1.concat(chain2);\n            chains.splice(index2, 1);\n        }\n        const F = first_match.index;\n        const S = second_match.index;\n        log === null || log === void 0 ? void 0 : log.chainConnect(F, S);\n        const reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n        if (first_match.matches_head) {\n            if (second_match.matches_head) {\n                if (reverseF) {\n                    // <<<< F <<<< --- >>>> S >>>>\n                    reverseChain(F);\n                    // >>>> F >>>> --- >>>> S >>>>\n                    appendChain(F, S);\n                }\n                else {\n                    // <<<< F <<<< --- >>>> S >>>>\n                    reverseChain(S);\n                    // <<<< F <<<< --- <<<< S <<<<   logically same as:\n                    // >>>> S >>>> --- >>>> F >>>>\n                    appendChain(S, F);\n                }\n            }\n            else {\n                // <<<< F <<<< --- <<<< S <<<<   logically same as:\n                // >>>> S >>>> --- >>>> F >>>>\n                appendChain(S, F);\n            }\n        }\n        else {\n            if (second_match.matches_head) {\n                // >>>> F >>>> --- >>>> S >>>>\n                appendChain(F, S);\n            }\n            else {\n                if (reverseF) {\n                    // >>>> F >>>> --- <<<< S <<<<\n                    reverseChain(F);\n                    // <<<< F <<<< --- <<<< S <<<<   logically same as:\n                    // >>>> S >>>> --- >>>> F >>>>\n                    appendChain(S, F);\n                }\n                else {\n                    // >>>> F >>>> --- <<<< S <<<<\n                    reverseChain(S);\n                    // >>>> F >>>> --- >>>> S >>>>\n                    appendChain(F, S);\n                }\n            }\n        }\n    }\n    return regions;\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\nclass BuildLog {\n    constructor() {\n        this.list = [];\n        this.nextSegmentId = 0;\n        this.curVert = NaN;\n    }\n    push(type, data) {\n        this.list.push({\n            type,\n            data: JSON.parse(JSON.stringify(data)),\n        });\n    }\n    segmentId() {\n        return this.nextSegmentId++;\n    }\n    checkIntersection(seg1, seg2) {\n        this.push(\"check\", { seg1, seg2 });\n    }\n    segmentChop(seg, p) {\n        this.push(\"div_seg\", { seg, p });\n        this.push(\"chop\", { seg, p });\n    }\n    statusRemove(seg) {\n        this.push(\"pop_seg\", { seg });\n    }\n    segmentUpdate(seg) {\n        this.push(\"seg_update\", { seg });\n    }\n    segmentNew(seg, primary) {\n        this.push(\"new_seg\", { seg, primary });\n    }\n    tempStatus(seg, above, below) {\n        this.push(\"temp_status\", { seg, above, below });\n    }\n    rewind(seg) {\n        this.push(\"rewind\", { seg });\n    }\n    status(seg, above, below) {\n        this.push(\"status\", { seg, above, below });\n    }\n    vert(x) {\n        if (x !== this.curVert) {\n            this.push(\"vert\", { x });\n            this.curVert = x;\n        }\n    }\n    selected(segs) {\n        this.push(\"selected\", { segs });\n    }\n    chainStart(seg) {\n        this.push(\"chain_start\", { seg });\n    }\n    chainRemoveHead(index, p) {\n        this.push(\"chain_rem_head\", { index, p });\n    }\n    chainRemoveTail(index, p) {\n        this.push(\"chain_rem_tail\", { index, p });\n    }\n    chainNew(p1, p2) {\n        this.push(\"chain_new\", { p1, p2 });\n    }\n    chainMatch(index) {\n        this.push(\"chain_match\", { index });\n    }\n    chainClose(index) {\n        this.push(\"chain_close\", { index });\n    }\n    chainAddHead(index, p) {\n        this.push(\"chain_add_head\", { index, p });\n    }\n    chainAddTail(index, p) {\n        this.push(\"chain_add_tail\", { index, p });\n    }\n    chainConnect(index1, index2) {\n        this.push(\"chain_con\", { index1, index2 });\n    }\n    chainReverse(index) {\n        this.push(\"chain_rev\", { index });\n    }\n    chainJoin(index1, index2) {\n        this.push(\"chain_join\", { index1, index2 });\n    }\n    done() {\n        this.push(\"done\", null);\n    }\n}\n\n//\n// polybool - Boolean operations on polygons (union, intersection, etc)\n// by Sean Connelly (@velipso), https://sean.fun\n// Project Home: https://github.com/velipso/polybool\n// SPDX-License-Identifier: 0BSD\n//\nclass PolyBool {\n    constructor(geo) {\n        this.log = null;\n        this.geo = geo;\n    }\n    buildLog(enable) {\n        var _a;\n        this.log = enable ? new BuildLog() : null;\n        return (_a = this.log) === null || _a === void 0 ? void 0 : _a.list;\n    }\n    segments(poly) {\n        const i = new Intersecter(true, this.geo, this.log);\n        for (const region of poly.regions) {\n            i.addRegion(region);\n        }\n        return {\n            segments: i.calculate(poly.inverted, false),\n            inverted: poly.inverted,\n        };\n    }\n    combine(segments1, segments2) {\n        const i = new Intersecter(false, this.geo, this.log);\n        for (const seg of segments1.segments) {\n            i.addSegment(new Segment(seg.start, seg.end, seg, this.log), true);\n        }\n        for (const seg of segments2.segments) {\n            i.addSegment(new Segment(seg.start, seg.end, seg, this.log), false);\n        }\n        return {\n            combined: i.calculate(segments1.inverted, segments2.inverted),\n            inverted1: segments1.inverted,\n            inverted2: segments2.inverted,\n        };\n    }\n    selectUnion(combined) {\n        return {\n            segments: SegmentSelector.union(combined.combined, this.log),\n            inverted: combined.inverted1 || combined.inverted2,\n        };\n    }\n    selectIntersect(combined) {\n        return {\n            segments: SegmentSelector.intersect(combined.combined, this.log),\n            inverted: combined.inverted1 && combined.inverted2,\n        };\n    }\n    selectDifference(combined) {\n        return {\n            segments: SegmentSelector.difference(combined.combined, this.log),\n            inverted: combined.inverted1 && !combined.inverted2,\n        };\n    }\n    selectDifferenceRev(combined) {\n        return {\n            segments: SegmentSelector.differenceRev(combined.combined, this.log),\n            inverted: !combined.inverted1 && combined.inverted2,\n        };\n    }\n    selectXor(combined) {\n        return {\n            segments: SegmentSelector.xor(combined.combined, this.log),\n            inverted: combined.inverted1 !== combined.inverted2,\n        };\n    }\n    polygon(segments) {\n        return {\n            regions: SegmentChainer(segments.segments, this.geo, this.log),\n            inverted: segments.inverted,\n        };\n    }\n    // helper functions for common operations\n    union(poly1, poly2) {\n        const seg1 = this.segments(poly1);\n        const seg2 = this.segments(poly2);\n        const comb = this.combine(seg1, seg2);\n        const seg3 = this.selectUnion(comb);\n        return this.polygon(seg3);\n    }\n    intersect(poly1, poly2) {\n        const seg1 = this.segments(poly1);\n        const seg2 = this.segments(poly2);\n        const comb = this.combine(seg1, seg2);\n        const seg3 = this.selectIntersect(comb);\n        return this.polygon(seg3);\n    }\n    difference(poly1, poly2) {\n        const seg1 = this.segments(poly1);\n        const seg2 = this.segments(poly2);\n        const comb = this.combine(seg1, seg2);\n        const seg3 = this.selectDifference(comb);\n        return this.polygon(seg3);\n    }\n    differenceRev(poly1, poly2) {\n        const seg1 = this.segments(poly1);\n        const seg2 = this.segments(poly2);\n        const comb = this.combine(seg1, seg2);\n        const seg3 = this.selectDifferenceRev(comb);\n        return this.polygon(seg3);\n    }\n    xor(poly1, poly2) {\n        const seg1 = this.segments(poly1);\n        const seg2 = this.segments(poly2);\n        const comb = this.combine(seg1, seg2);\n        const seg3 = this.selectXor(comb);\n        return this.polygon(seg3);\n    }\n}\nconst polybool = new PolyBool(new GeometryEpsilon());\n\nexport { BuildLog, GeometryEpsilon, Intersecter, PolyBool, Segment, SegmentChainer, SegmentSelector, polybool as default };\n","import polybool from '@velipso/polybool';\r\nimport { PolyBool, GeometryEpsilon, Point } from '@velipso/polybool';\r\nimport { Diagram, DiagramType, polygon, curve, empty, diagram_combine } from './diagram.js';\r\nimport { V2 } from './vector.js';\r\n\r\ntype PolyBoolPoly = {\r\n    regions: Point[][];\r\n    inverted: boolean;\r\n}\r\nfunction dg_to_polybool(d : Diagram) : PolyBoolPoly {\r\n    const dg_points = d.path?.points ?? [];\r\n    const points = dg_points.map(p => [p.x, p.y] as Point);\r\n    return {\r\n        regions: [points],\r\n        inverted: false\r\n    };\r\n}\r\n\r\nfunction polybool_to_dg(poly : PolyBoolPoly) : Diagram {\r\n    const diagrams_per_region = poly.regions.map(region => {\r\n        const dg_points = region.map(p => V2(p[0], p[1]));\r\n        return polygon(dg_points);\r\n    });\r\n    if (diagrams_per_region.length < 1){\r\n        return empty();\r\n    } else if (diagrams_per_region.length == 1){\r\n        return diagrams_per_region[0];\r\n    } else {\r\n        return diagram_combine(...diagrams_per_region);\r\n    }\r\n}\r\n\r\n/*\r\n * get the union of two polygons\r\n * @param d1 a Polygon Diagram\r\n * @param d2 a Polygon Diagram\r\n * @tolerance the tolerance for the operation (default 1e-10)\r\n * @returns a Polygon that is the union of d1 and d2\r\n*/\r\nexport function union(d1 : Diagram, d2 : Diagram, tolerance? : number) : Diagram {\r\n    const pol = tolerance ? new PolyBool(new GeometryEpsilon(tolerance)) : polybool;\r\n    const shape1 = dg_to_polybool(d1);\r\n    const shape2 = dg_to_polybool(d2);\r\n    const result = pol.union(shape1, shape2);\r\n    return polybool_to_dg(result);\r\n}\r\n\r\n/*\r\n * get the difference of two polygons (d1 - d2)\r\n * @param d1 a Polygon Diagram\r\n * @param d2 a Polygon Diagram\r\n * @tolerance the tolerance for the operation (default 1e-10)\r\n * @returns a Polygon that is the difference of d1 and d2\r\n*/\r\nexport function difference(d1 : Diagram, d2 : Diagram, tolerance? : number) : Diagram {\r\n    const pol = tolerance ? new PolyBool(new GeometryEpsilon(tolerance)) : polybool;\r\n    const shape1 = dg_to_polybool(d1);\r\n    const shape2 = dg_to_polybool(d2);\r\n    const result = pol.difference(shape1, shape2);\r\n    return polybool_to_dg(result);\r\n}\r\n\r\n/*\r\n * get the intersection of two polygons\r\n * @param d1 a Polygon Diagram\r\n * @param d2 a Polygon Diagram\r\n * @param tolerance the tolerance for the operation (default 1e-10)\r\n * @returns a Polygon that is the intersection of d1 and d2\r\n*/\r\nexport function intersect(d1 : Diagram, d2 : Diagram, tolerance? : number) : Diagram {\r\n    const pol = tolerance ? new PolyBool(new GeometryEpsilon(tolerance)) : polybool;\r\n    const shape1 = dg_to_polybool(d1);\r\n    const shape2 = dg_to_polybool(d2);\r\n    const result = pol.intersect(shape1, shape2);\r\n    return polybool_to_dg(result);\r\n}\r\n\r\n/*\r\n * get the xor of two polygons\r\n * @param d1 a Polygon Diagram\r\n * @param d2 a Polygon Diagram\r\n * @param tolerance the tolerance for the operation (default 1e-10)\r\n * @returns a Polygon that is the xor of d1 and d2\r\n*/\r\nexport function xor(d1 : Diagram, d2 : Diagram, tolerance? : number) : Diagram {\r\n    const pol = tolerance ? new PolyBool(new GeometryEpsilon(tolerance)) : polybool;\r\n    const shape1 = dg_to_polybool(d1);\r\n    const shape2 = dg_to_polybool(d2);\r\n    const result = pol.xor(shape1, shape2);\r\n    return polybool_to_dg(result);\r\n}\r\n","\r\n\r\nexport module string_filter  {\r\n    export function outer_shadow(\r\n        dx: number, dy: number, radius: number, stdev: number, color: string, \r\n        id: string='outer-shadow',\r\n        width: number, height: number,\r\n        scale_factor: number=1\r\n    ){\r\n        const x = (width - 1) / 2;\r\n        const y = (height - 1)/2;\r\n        return `\r\n        <filter id=\"${id}\" x=\"-${x * 100}%\" y=\"-${y * 100}%\" width=\"${width * 100}%\" height=\"${height * 100}%\">\r\n            <feMorphology operator=\"dilate\" radius=\"${radius * scale_factor}\" in=\"SourceAlpha\" result=\"dilated\" />\r\n            <feGaussianBlur in=\"dilated\" stdDeviation=\"${stdev * scale_factor}\" />\r\n            <feOffset dx=\"${dx * scale_factor}\" dy=\"${dy * scale_factor}\" result=\"offsetblur\" />\r\n            <feFlood flood-color=\"${color}\" result=\"colorblur\"/>\r\n            <feComposite in=\"colorblur\" in2=\"offsetblur\" operator=\"in\" result=\"shadow\" />\r\n            <feComposite in=\"shadow\" in2=\"SourceAlpha\" operator=\"out\" result=\"clipped-shadow\"/>\r\n        </filter>\r\n        `\r\n    }\r\n}\r\n","import { Diagram, line, curve, diagram_combine } from '../diagram.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\nimport { linspace, range_inc } from '../utils.js';\r\nimport { arrow1, arrow2, textvar } from '../shapes.js'\r\nimport { TAG } from '../tag_names.js';\r\n\r\n/**\r\n * Options for axes\r\n * Since axes, plot, etc. are separate objects.\r\n * Axes options is used so that it's easier to have consistent\r\n * setting for multiple objects.\r\n */\r\nexport type axes_options = {\r\n    xrange    : [number, number],\r\n    yrange    : [number, number],\r\n    bbox?     : [Vector2, Vector2],\r\n    xticks?   : number[],\r\n    yticks?   : number[],\r\n    n_sample? : number,\r\n    ticksize  : number,\r\n    headsize  : number,\r\n    tick_label_offset? : number,\r\n}\r\n\r\nexport let default_axes_options : axes_options = {\r\n    // bbox   : [V2(-100,-100), V2(100,100)],\r\n    bbox     : undefined,\r\n    xrange   : [-2, 2],\r\n    yrange   : [-2, 2],\r\n    xticks   : undefined,\r\n    yticks   : undefined,\r\n    n_sample : 100,\r\n    ticksize : 0.1,\r\n    headsize : 0.05,\r\n    tick_label_offset : 0,\r\n}\r\n\r\nexport function axes_transform(axes_options? : Partial<axes_options>) : (v : Vector2) => Vector2 {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let [lowerleft, upperright] = opt.bbox;\r\n    let [xmin, xmax] = opt.xrange;\r\n    let [ymin, ymax] = opt.yrange;\r\n\r\n    return function(v : Vector2) : Vector2 {\r\n        let x = lowerleft.x + (v.x-xmin)/(xmax-xmin)*(upperright.x-lowerleft.x);\r\n        let y = lowerleft.y + (v.y-ymin)/(ymax-ymin)*(upperright.y-lowerleft.y);\r\n        return V2(x,y);\r\n    }\r\n}\r\nexport let ax = axes_transform\r\n\r\n\r\n/**\r\n * Draw xy axes without ticks\r\n * @param axes_options options for the axes\r\n * example: opt = {\r\n *    bbox   : [V2(-100,-100), V2(100,100)],\r\n * }\r\n * @returns a Diagram object\r\n */\r\nexport function axes_empty(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let [lowerleft, upperright] = opt.bbox;\r\n    // get the intersection point\r\n    let xorigin = lowerleft.x + (upperright.x-lowerleft.x)/(opt.xrange[1]-opt.xrange[0])*(0-opt.xrange[0]);\r\n    let yorigin = lowerleft.y + (upperright.y-lowerleft.y)/(opt.yrange[1]-opt.yrange[0])*(0-opt.yrange[0]);\r\n\r\n    let xaxis = arrow2(V2(lowerleft.x,yorigin), V2(upperright.x,yorigin), opt.headsize).append_tags(TAG.GRAPH_AXIS);\r\n    let yaxis = arrow2(V2(xorigin,lowerleft.y), V2(xorigin,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\r\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\r\n    // return xaxis;\r\n}\r\n\r\n/**\r\n * Draw xy corner axes without ticks\r\n * @param axes_options options for the axes\r\n * example: opt = {\r\n *    bbox   : [V2(-100,-100), V2(100,100)],\r\n * }\r\n * @returns a Diagram object\r\n */\r\nexport function axes_corner_empty(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let [lowerleft, upperright] = opt.bbox;\r\n    // get the intersection point\r\n\r\n    let xaxis = arrow1(lowerleft, V2(upperright.x,lowerleft.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\r\n    let yaxis = arrow1(lowerleft, V2(lowerleft.x,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\r\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\r\n    // return xaxis;\r\n}\r\n\r\n/**\r\n * Draw xy corner axes without ticks and with break mark in x axis\r\n * @param axes_options options for the axes\r\n */\r\nexport function axes_corner_empty_xbreak(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let [lowerleft, upperright] = opt.bbox;\r\n    // get the intersection point\r\n\r\n    let xbreak_ysize_ = opt.ticksize * 2;\r\n\r\n    if (opt.xticks == undefined) {\r\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\r\n        opt.xticks = opt.xticks.filter(x => x > opt.xrange[0] && x < opt.xrange[1]);\r\n    }\r\n    let xbreak_xsize = (opt.xticks![1] - opt.xticks![0])/2;\r\n    let xbreak_xpos  = opt.xticks![0] - xbreak_xsize;\r\n    let trans_f = axes_transform(opt);\r\n\r\n    // suffix _ means in the transformed coordinate\r\n    let xbreak_pleft_  = trans_f(V2(xbreak_xpos - xbreak_xsize/2,0));\r\n    let xbreak_pright_ = trans_f(V2(xbreak_xpos + xbreak_xsize/2,0));\r\n    let xbreak_xsize_  = xbreak_pright_.x - xbreak_pleft_.x;\r\n    let xbreak_pbottom_= xbreak_pleft_.add(V2(xbreak_xsize_*1/3, -xbreak_ysize_/2));\r\n    let xbreak_ptop_   = xbreak_pleft_.add(V2(xbreak_xsize_*2/3, xbreak_ysize_/2));\r\n    let xbreak_curve   = curve([xbreak_pleft_, xbreak_pbottom_, xbreak_ptop_, xbreak_pright_]);\r\n\r\n    let xaxis_left = line(lowerleft, xbreak_pleft_);\r\n    let xaxis_right = arrow1(xbreak_pright_, V2(upperright.x,lowerleft.y), opt.headsize);\r\n    let xaxis = diagram_combine(xaxis_left, xbreak_curve, xaxis_right).append_tags(TAG.GRAPH_AXIS);\r\n    let yaxis = arrow1(lowerleft, V2(lowerleft.x,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\r\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\r\n}\r\n\r\n/**\r\n * Create a single tick mark in the x axis\r\n * @param x x coordinate of the tick mark\r\n * @param y y coordinate of the tick mark\r\n * @param height height of the tick mark\r\n */\r\nexport function xtickmark_empty(x : number, y : number, axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let height = opt.ticksize;\r\n    let pos = axes_transform(opt)(V2(x,y));\r\n    return line(V2(pos.x,pos.y+height/2), V2(pos.x,pos.y-height/2))\r\n        .stroke('gray').append_tags(TAG.GRAPH_TICK);\r\n}\r\n\r\nexport function xtickmark(x : number, y : number, str : string, axes_options? : Partial<axes_options>) : Diagram {\r\n    let tick = xtickmark_empty(x, y, axes_options);\r\n    let label = textvar(str).move_origin_text(\"top-center\").translate(tick.get_anchor(\"bottom-center\"))\r\n                .translate(V2(0, -(axes_options?.tick_label_offset || 0)))\r\n                .textfill('gray').append_tags(TAG.GRAPH_TICK_LABEL);\r\n    return diagram_combine(tick, label);\r\n}\r\n\r\n/**\r\n * Create a single tick mark in the y axis\r\n * @param y y coordinate of the tick mark\r\n * @param x x coordinate of the tick mark\r\n * @param height height of the tick mark\r\n */\r\nexport function ytickmark_empty(y : number, x : number, axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let height = opt.ticksize;\r\n    let pos = axes_transform(opt)(V2(x,y));\r\n    return line(V2(pos.x+height/2,pos.y), V2(pos.x-height/2,pos.y))\r\n        .stroke('gray').append_tags(TAG.GRAPH_TICK);\r\n}\r\nexport function ytickmark(y : number, x : number, str : string, axes_options? : Partial<axes_options>) : Diagram {\r\n    let tick = ytickmark_empty(y, x, axes_options);\r\n    let label = textvar(str).move_origin_text(\"center-right\").translate(tick.get_anchor(\"center-left\"))\r\n                .translate(V2(-(axes_options?.tick_label_offset || 0), 0))\r\n                .textfill('gray').append_tags(TAG.GRAPH_TICK_LABEL);\r\n    return diagram_combine(tick, label);\r\n}\r\n\r\n// ======= BEGIN utility to calculate ticks\r\n\r\n/// TODO: find a smarter way to calculate this\r\nfunction tweak_interval(interval: number) : number {\r\n  if (0.1 < interval && interval < 2) return 1;\r\n  return interval;\r\n}\r\nfunction get_tick_interval(min : number, max : number) : number {\r\n    let range = max-min;\r\n    let range_order = Math.floor(Math.log10(range));\r\n    let interval_to_try = [0.1, 0.15, 0.2, 0.5, 1.0].map(x => x*Math.pow(10,range_order));\r\n    let tick_counts = interval_to_try.map(x => Math.floor(range/x));\r\n    // choose the interval so that the number of ticks is between the biggest one but less than 10\r\n    for (let i = 0; i < tick_counts.length; i++) {\r\n        if (tick_counts[i] <= 10) {\r\n            return tweak_interval(interval_to_try[i]);\r\n        }\r\n    }\r\n    return tweak_interval(interval_to_try.slice(-1)[0]);\r\n}\r\n\r\nfunction get_tick_numbers_range(min : number, max : number) : number[] {\r\n    let interval = get_tick_interval(min, max);\r\n    // round min and max to the nearest interval\r\n    let new_min = Math.round(min/interval)*interval;\r\n    let new_max = Math.round(max/interval)*interval;\r\n    let new_count = Math.round((new_max-new_min)/interval);\r\n    let l = range_inc(0, new_count).map(x => new_min + x*interval);\r\n    // round l to the nearest interval\r\n    let interval_prec = -Math.floor(Math.log10(interval)-1);\r\n    if (interval_prec >= 0) l = l.map(x => parseFloat(x.toFixed(interval_prec)));\r\n    return l;\r\n}\r\nfunction get_tick_numbers_aroundzero(neg : number, pos : number, nozero : boolean = true) : number[] {\r\n    if (neg > 0) throw new Error('neg must be negative');\r\n    if (pos < 0) throw new Error('pos must be positive');\r\n    let magnitude = Math.max(-neg, pos);\r\n    let interval = get_tick_interval(-magnitude, magnitude);\r\n\r\n    // round min and max to the nearest interval\r\n    let new_min = Math.ceil(neg/interval)*interval;\r\n    let new_max = Math.floor(pos/interval)*interval;\r\n    let new_count = Math.floor((new_max-new_min)/interval);\r\n\r\n    let l = linspace(new_min, new_max, new_count+1);\r\n    // round l to the nearest interval\r\n    let interval_prec = -Math.floor(Math.log10(interval));\r\n    if (interval_prec >= 0) l = l.map(x => parseFloat(x.toFixed(interval_prec)));\r\n\r\n    if (nozero){\r\n        return l.filter(x => x != 0);\r\n    }else{\r\n        return l;\r\n    }\r\n}\r\nexport function get_tick_numbers(min : number, max : number, exclude_zero : boolean = true) : number[] {\r\n    if (exclude_zero && min < 0 && max > 0) {\r\n        return get_tick_numbers_aroundzero(min, max);\r\n    } else {\r\n        return get_tick_numbers_range(min, max);\r\n    }\r\n}\r\n\r\n// ======= END utility to calculate ticks\r\n\r\nexport function xticks(axes_options : Partial<axes_options>, y : number = 0, empty = false) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.xticks == undefined) {\r\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], y == 0);\r\n    }\r\n\r\n    // remove ticks outside of the range\r\n    // opt.xticks = opt.xticks.filter(x => x >= opt.xrange[0] && x <= opt.xrange[1]);\r\n    opt.xticks = opt.xticks.filter(x => x > opt.xrange[0] && x < opt.xrange[1]);\r\n\r\n    let xticks_diagrams = empty ? \r\n        opt.xticks.map(x => xtickmark_empty(x, y, opt)) :\r\n        opt.xticks.map(x => xtickmark(x, y, x.toString(), opt));\r\n    return diagram_combine(...xticks_diagrams);\r\n}\r\nexport function yticks(axes_options : Partial<axes_options>, x : number = 0, empty = false) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.yticks == undefined) {\r\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], x == 0);\r\n    }\r\n\r\n    // remove ticks outside of the range\r\n    // opt.yticks = opt.yticks.filter(y => y >= opt.yrange[0] && y <= opt.yrange[1]);\r\n    opt.yticks = opt.yticks.filter(y => y > opt.yrange[0] && y < opt.yrange[1]);\r\n\r\n    let yticks_diagrams = empty ? \r\n        opt.yticks.map(y => ytickmark_empty(y, x, opt)) :\r\n        opt.yticks.map(y => ytickmark(y, x, y.toString(), opt));\r\n    return diagram_combine(...yticks_diagrams);\r\n}\r\n\r\n\r\n/**\r\n * Draw xy corner axes with ticks\r\n * @param axes_options options for the axes\r\n */\r\nexport function xycorneraxes(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let xmin = opt.xrange[0];\r\n    let ymin = opt.yrange[0];\r\n    return diagram_combine(axes_corner_empty(opt), xticks(opt, ymin), yticks(opt, xmin));\r\n}\r\n\r\n/**\r\n * Draw xy corner axes with ticks and break mark in x axis\r\n * @param axes_options options for the axes\r\n */\r\nexport function xycorneraxes_xbreak(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let xmin = opt.xrange[0];\r\n    let ymin = opt.yrange[0];\r\n    return diagram_combine(axes_corner_empty_xbreak(opt), xticks(opt, ymin), yticks(opt, xmin));\r\n}\r\n\r\n\r\n/**\r\n * Draw xy axes with ticks\r\n * @param axes_options options for the axes\r\n */\r\nexport function xyaxes(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    return diagram_combine(axes_empty(opt), xticks(opt), yticks(opt));\r\n}\r\n\r\n/**\r\n * Draw x axis with ticks\r\n * @param axes_options options for the axis\r\n */\r\nexport function xaxis(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let ax_origin = axes_transform(opt)(V2(0,0));\r\n    let xaxis = arrow2(V2(opt.bbox[0].x, ax_origin.y), V2(opt.bbox[1].x, ax_origin.y), opt.headsize)\r\n        .append_tags(TAG.GRAPH_AXIS);\r\n    let xtickmarks = xticks(opt, 0);\r\n    return diagram_combine(xaxis, xtickmarks);\r\n}\r\n\r\n/**\r\n * Draw y axis with ticks\r\n * @param axes_options options for the axis\r\n */\r\nexport function yaxis(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.bbox == undefined) {\r\n        // get values from xrange and yrange\r\n        let [xmin, xmax] = opt.xrange;\r\n        let [ymin, ymax] = opt.yrange;\r\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\r\n    }\r\n\r\n    let ax_origin = axes_transform(opt)(V2(0,0));\r\n    let yaxis = arrow2(V2(ax_origin.x, opt.bbox[0].y), V2(ax_origin.x, opt.bbox[1].y), opt.headsize)\r\n        .append_tags(TAG.GRAPH_AXIS);\r\n    let ytickmarks = yticks(opt, 0);\r\n    return diagram_combine(yaxis, ytickmarks);\r\n}\r\n\r\nexport function ygrid(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.xticks == undefined) {\r\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\r\n    }\r\n\r\n    let ygrid_diagrams = opt.xticks.map(x => \r\n        line(V2(x,opt.yrange[0]), V2(x,opt.yrange[1])).transform(axes_transform(opt)).stroke('gray')\r\n    );\r\n    return diagram_combine(...ygrid_diagrams).append_tags(TAG.GRAPH_GRID);\r\n}\r\n\r\nexport function xgrid(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.yticks == undefined) {\r\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], false);\r\n    }\r\n\r\n    let xgrid_diagrams = opt.yticks.map(y =>\r\n        line(V2(opt.xrange[0],y), V2(opt.xrange[1],y)).transform(axes_transform(opt)).stroke('gray')\r\n    );\r\n    return diagram_combine(...xgrid_diagrams).append_tags(TAG.GRAPH_GRID);\r\n}\r\n\r\n//  TODO: add xticks and ytiks as argument\r\nexport function xygrid(axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    if (opt.xticks == undefined) {\r\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\r\n    }\r\n    if (opt.yticks == undefined) {\r\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], false);\r\n    }\r\n\r\n    let xgrid_diagrams = opt.xticks.map(x => \r\n        line(V2(x,opt.yrange[0]), V2(x,opt.yrange[1])).transform(axes_transform(opt)).stroke('gray')\r\n    );\r\n    let ygrid_diagrams = opt.yticks.map(y =>\r\n        line(V2(opt.xrange[0],y), V2(opt.xrange[1],y)).transform(axes_transform(opt)).stroke('gray')\r\n    );\r\n    return diagram_combine(...xgrid_diagrams, ...ygrid_diagrams);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// TODO : \r\n// export function axes(axes_options? : Partial<axes_options>) : Diagram {\r\n//     let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n// }\r\n\r\n/**\r\n * Plot a curve given a list of points\r\n * @param data list of points\r\n * @param axes_options options for the axes\r\n * example: opt = {\r\n *  bbox   : [V2(-100,-100), V2(100,100)],\r\n *  xrange : [-2, 2],\r\n *  yrange : [-2, 2],\r\n * }\r\n */\r\nexport function plotv(data : Vector2[], axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let [xmin, xmax] = opt.xrange;\r\n    let [ymin, ymax] = opt.yrange;\r\n\r\n    // split data into segments that are within the range\r\n    let segments : Vector2[][] = [];\r\n    let current_segment : Vector2[] = [];\r\n    for (let i=0; i < data.length; i++) {\r\n        let p = data[i];\r\n        let is_inside = (p.x >= xmin && p.x <= xmax && p.y >= ymin && p.y <= ymax);\r\n        if (!is_inside) {\r\n            if (current_segment.length > 1) segments.push(current_segment);\r\n            current_segment = [];\r\n        } else {\r\n            current_segment.push(p);\r\n        }\r\n    }\r\n    if (current_segment.length > 1) segments.push(current_segment);\r\n\r\n    let d : Diagram;\r\n    // create separate paths for each segment\r\n    let path_diagrams = segments.map(segment => curve(segment));\r\n    if (path_diagrams.length == 1){\r\n        d = path_diagrams[0];\r\n    } else {\r\n        d = diagram_combine(...path_diagrams).stroke('black').fill('none');\r\n    }\r\n\r\n    return d.transform(axes_transform(opt));\r\n}\r\n\r\n/**\r\n * Plot a curve given xdata and ydata\r\n * @param xdata x coordinates of the data\r\n * @param ydata y coordinates of the data\r\n * @param axes_options options for the axes\r\n * example: opt = {\r\n *   bbox   : [V2(-100,-100), V2(100,100)],\r\n *   xrange : [-2, 2],\r\n *   yrange : [-2, 2],\r\n * }\r\n */\r\nexport function plot(xdata : number[], ydata : number[], axes_options? : Partial<axes_options>) : Diagram {\r\n    if (xdata.length != ydata.length) throw new Error('xdata and ydata must have the same length');\r\n    let vdata = xdata.map((x,i) => V2(x,ydata[i]));\r\n    return plotv(vdata, axes_options);\r\n}\r\n\r\n/**\r\n * Plot a function\r\n * @param f function to plot\r\n * @param n number of points to plot\r\n * @param axes_options options for the axes\r\n */\r\nexport function plotf(f : (x:number)=>number, axes_options? : Partial<axes_options>) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n    let xdata = linspace(...opt.xrange, opt.n_sample);\r\n    let vdata = xdata.map(x => V2(x,f(x)));\r\n    return plotv(vdata, axes_options);\r\n}\r\n\r\nexport function under_curvef(f : (x:number)=>number, x_start : number, x_end : number,  axes_options? : Partial<axes_options> ) : Diagram {\r\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\r\n\r\n    let new_opt = {...opt}; // copy opt\r\n    new_opt.xrange = [x_start, x_end];\r\n    new_opt.bbox = undefined;\r\n\r\n    // draw plot from x_start to x_end\r\n    let fplot = plotf(f, new_opt);\r\n    let area_under = fplot.add_points([V2(x_end,0), V2(x_start,0)]).to_polygon();\r\n    return area_under.transform(axes_transform(opt));\r\n}\r\n","import { Diagram, line, diagram_combine, curve } from '../diagram.js';\r\nimport { arrow, textvar, arc } from '../shapes.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\n\r\n/**\r\n * Create an annotation vector\r\n * @param v vector to be annotated\r\n * @param str string to be annotated (will be converted to mathematical italic)\r\n * if you don't want to convert to mathematical italic, use annotation.vector_text\r\n * @param arrow_head_size size of the arrow head\r\n * @param text_offset position offset of the text\r\n */\r\nexport function vector(v : Vector2, str? : string, text_offset? : Vector2, arrow_head_size? : number) : Diagram {\r\n    if (text_offset == undefined){ text_offset = V2(0,0); } // default value\r\n    let vec = arrow(v, arrow_head_size);\r\n    if (str == \"\" || str == undefined){ return vec; } // if str is empty, return only the vector\r\n\r\n    let txt = textvar(str).position(v.add(text_offset));\r\n    return diagram_combine(vec, txt);\r\n}\r\n\r\n/**\r\n * Create an annotation for angle\r\n * @param p three points to define the angle\r\n * @param str string to be annotated (will be converted to mathematical italic)\r\n * @param radius radius of the arc\r\n * @param text_offset position offset of the text\r\n * if given as a number, the text will be placed at the angle bisector with the given distance from the vertex\r\n * if given as a vector, the text will be placed at the given position offset\r\n */\r\nexport function angle(p : [Vector2, Vector2, Vector2], \r\n    str? : string, radius : number = 1 , text_offset? : Vector2 | number,\r\n) : Diagram {\r\n\r\n    let [p1, p2, p3] = p;\r\n    let va = p1.sub(p2);\r\n    let vb = p3.sub(p2);\r\n\r\n    if (text_offset == undefined){ text_offset = V2(0,0); } // default value\r\n    if (typeof text_offset == \"number\"){ \r\n        let vd = va.normalize().add(vb.normalize()).normalize().scale(text_offset);\r\n        text_offset = vd;\r\n    } \r\n\r\n    let angle_a = va.angle();\r\n    let angle_b = vb.angle();\r\n    // angle_b must be larger than angle_a\r\n    if (angle_b < angle_a){ angle_b += 2*Math.PI; }\r\n\r\n    let angle_arc = arc(radius, angle_b-angle_a).rotate(angle_a)\r\n        .add_points([V2(0,0)]).to_polygon();\r\n    if (str == \"\" || str == undefined){ return angle_arc.position(p2); } // if str is empty, return only the arc\r\n\r\n    let angle_text = textvar(str)\r\n        .translate(text_offset);\r\n\r\n    return diagram_combine(angle_arc, angle_text).position(p2);\r\n}\r\n\r\n/**\r\n * Create an annotation for angle (always be the smaller angle)\r\n * @param p three points to define the angle\r\n * @param str string to be annotated (will be converted to mathematical italic)\r\n * @param radius radius of the arc\r\n * @param text_offset position offset of the text\r\n * if given as a number, the text will be placed at the angle bisector with the given distance from the vertex\r\n * if given as a vector, the text will be placed at the given position offset\r\n */\r\nexport function angle_smaller(p : [Vector2, Vector2, Vector2],\r\n    str? : string, radius : number = 1 , text_offset? : Vector2 | number,\r\n) : Diagram {\r\n\r\n    let [p1, p2, p3] = p;\r\n    let va = p1.sub(p2);\r\n    let vb = p3.sub(p2);\r\n\r\n    let angle_a = va.angle();\r\n    let angle_b = vb.angle();\r\n    // angle_b must be larger than angle_a\r\n    if (angle_b < angle_a){ angle_b += 2*Math.PI; }\r\n    let dangle = angle_b - angle_a;\r\n\r\n\r\n    // if dangle is larger than 180 degree, swap the two vectors\r\n    let ps : typeof p = dangle > Math.PI ? [p3, p2, p1] : [p1, p2, p3];\r\n    return angle(ps, str, radius, text_offset);\r\n}\r\n\r\n/**\r\n * Create an annotation for right angle\r\n * make sure the angle is 90 degree\r\n * @param p three points to define the angle\r\n * @param size size of the square\r\n */\r\nexport function right_angle(p : [Vector2, Vector2, Vector2], size : number = 1) : Diagram {\r\n    let [p1, p2, p3] = p;\r\n    let p1_ = p1.sub(p2).normalize().scale(size).add(p2);\r\n    let p3_ = p3.sub(p2).normalize().scale(size).add(p2);\r\n    let p2_ = V2(p1_.x, p3_.y);\r\n    return curve([p1_, p2_, p3_]);\r\n}\r\n\r\nexport function length(p1 : Vector2, p2 : Vector2, str : string, offset : number, \r\n    tablength? : number, textoffset? : number, tabsymmetric : boolean = true\r\n) : Diagram {\r\n\r\n    // setup defaults\r\n    tablength = tablength ?? p2.sub(p1).length()/20;\r\n    textoffset = textoffset ?? offset * 2;\r\n\r\n    let v = p1.equals(p2) ? V2(0,0) : p2.sub(p1).normalize();\r\n    let n = V2(v.y, -v.x);\r\n    let pA = p1.add(n.scale(offset));\r\n    let pB = p2.add(n.scale(offset));\r\n\r\n    let tabA = tabsymmetric ?\r\n        line(pA.sub(n.scale(tablength/2)), pA.add(n.scale(tablength/2))) :\r\n        line(pA, pA.sub(n.scale(tablength)));\r\n    let tabB = tabsymmetric ?\r\n        line(pB.sub(n.scale(tablength/2)), pB.add(n.scale(tablength/2))) :\r\n        line(pB, pB.sub(n.scale(tablength)));\r\n    let lineAB = line(pA, pB);\r\n    let lines = diagram_combine(lineAB, tabA, tabB);\r\n\r\n    let pmid = p1.add(p2).scale(0.5);\r\n    let label = textvar(str).position(pmid.add(n.scale(textoffset)));\r\n\r\n    return diagram_combine(lines, label);\r\n}\r\n\r\n/**\r\n * Create a congruence mark\r\n * @param p1 start point of the line\r\n * @param p2 end point of the line\r\n * @param count number of marks\r\n * @param size size of the mark\r\n * @param gap gap between the marks\r\n */\r\nexport function congruence_mark(p1 : Vector2, p2 : Vector2, count : number, size : number = 1, gap? : number) : Diagram {\r\n    let v = p2.sub(p1)\r\n    let n_angle = Math.atan2(v.x, -v.y);\r\n    let p_mid = p1.add(p2).scale(0.5);\r\n    gap = gap ?? size/2;\r\n\r\n    let marks = [];\r\n    for (let i = 0; i < count; i++){\r\n        let l = line(V2(-size/2, i*gap), V2(size/2, i*gap));\r\n        marks.push(l)\r\n    }\r\n    let dg_marks = diagram_combine(...marks);\r\n    return dg_marks.rotate(n_angle).move_origin('center-center').position(p_mid);\r\n}\r\n\r\n/**\r\n * Create a parallel mark\r\n * @param p1 start point of the line\r\n * @param p2 end point of the line\r\n * @param count number of marks\r\n * @param size size of the mark\r\n * @param gap gap between the marks\r\n * @param arrow_angle angle of the arrow\r\n */\r\nexport function parallel_mark(p1 : Vector2, p2 : Vector2, count : number, size : number = 1, gap? : number, arrow_angle : number = 0.5) : Diagram {\r\n    let v = p2.sub(p1)\r\n    let n_angle = Math.atan2(v.x, -v.y);\r\n    let p_mid = p1.add(p2).scale(0.5);\r\n    gap = gap ?? size/2;\r\n\r\n    let marks = [];\r\n    let dy = size/2 * Math.cos(arrow_angle);\r\n    for (let i = 0; i < count; i++){\r\n        let p0 = V2(0, i*gap - dy);\r\n        let l1 = line(V2(-size/2, i*gap), p0)\r\n        let l2 = line(V2(size/2, i*gap), p0)\r\n        marks.push(l1.combine(l2));\r\n    }\r\n    let dg_marks = diagram_combine(...marks);\r\n    return dg_marks.rotate(n_angle).move_origin('center-center').position(p_mid);\r\n}\r\n","import { Diagram, polygon, curve } from '../diagram.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\nimport { linspace } from '../utils.js';\r\n\r\n/**\r\n * Create an inclined plane.\r\n * @param length The length of the inclined plane.\r\n * @param angle The angle of the inclined plane.\r\n * @returns A diagram of the inclined plane.\r\n */\r\nexport function inclined_plane(length : number, angle : number) : Diagram {\r\n    return polygon([V2(0,0), V2(length, length*Math.tan(angle)), V2(length,0)]);\r\n}\r\n\r\n/**\r\n * Create a spring between two points.\r\n * @param p1 The first point.\r\n * @param p2 The second point.\r\n * @param radius The radius of the spring.\r\n * @param coil_number The number of coils in the spring.\r\n * @param separation_coefficient The coefficient of separation between coils.\r\n * \\* at 0, no coils are overlapping. (there is no max value)\r\n * @param sample_number The number of points to sample in the spring.\r\n * @returns A diagram of the spring.\r\n */\r\nexport function spring(p1 : Vector2, p2 : Vector2, radius : number = 1, coil_number : number = 10,\r\n    separation_coefficient : number = 0.5, sample_number : number = 100) : Diagram {\r\n\r\n    // I got this equation from https://www.reddit.com/r/desmos/comments/i3m3yd/interactive_spring_graphic/\r\n\r\n    let angle  = p2.sub(p1).angle();\r\n    let length = p2.sub(p1).length();\r\n\r\n    // abbrev\r\n    let R = separation_coefficient;\r\n    let n = coil_number;\r\n\r\n    let k = radius/R; // k*R = radius\r\n\r\n    let a = (2 * n + 1) * Math.PI;\r\n    let b = (length - 2*R) / a;\r\n\r\n    let parametric_function = (t : number) => V2(b*t + R - R*Math.cos(t), k*R*Math.sin(t));\r\n    let points = linspace(0, a, sample_number).map(parametric_function);\r\n    return curve(points).rotate(angle).translate(p1);\r\n}\r\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\nimport { rectangle, } from '../shapes.js'\r\nimport { axes_options, yticks, axes_transform } from './shapes_graph.js'\r\n\r\nexport type bar_options = {\r\n    gap : number,\r\n    yrange? : [number, number],\r\n    yticks? : number[],\r\n    bbox? : [Vector2, Vector2],\r\n    ticksize : number,\r\n}\r\n\r\nexport let default_bar_options : bar_options = {\r\n    gap: 0.1,\r\n    ticksize: 0.2,\r\n    bbox: [V2(0,0), V2(10,10)],\r\n}\r\n\r\n\r\nfunction to_ax_options(datavalues : number[], baropt : Partial<bar_options>) : axes_options {\r\n    let opt = {...default_bar_options, ...baropt}; // use default if not defined\r\n    let n = datavalues.length;\r\n\r\n    let ymax = Math.max(...datavalues);\r\n    let yrange = opt.yrange ?? [0, ymax];\r\n    let bbox = opt.bbox ?? [V2(0,0), V2(10,ymax)];\r\n\r\n    let ax_opt : axes_options = {\r\n        xrange   : [-1, n],\r\n        yrange   : yrange,\r\n        headsize : 0,\r\n        ticksize : opt.ticksize,\r\n        bbox     : bbox,\r\n    }\r\n    return ax_opt;\r\n}\r\n\r\n/**\r\n * Plot a bar chart\r\n * @param datavalues the data values to plot\r\n * @param bar_options options for the bar chart\r\n * @returns a diagram of the bar chart\r\n */\r\nexport function plot(datavalues : number[], bar_options : Partial<bar_options> = {}) : Diagram {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n\r\n    let ax_opt = to_ax_options(datavalues, opt);\r\n    let ax_f = axes_transform(ax_opt);\r\n\r\n    let bar_arr = datavalues.map((y,i) => \r\n        rectangle(1.0-opt.gap, y).move_origin('bottom-center')\r\n            .position(V2(Number(i), 0)).transform(ax_f)\r\n    );\r\n    return diagram_combine(...bar_arr);\r\n}\r\n\r\n/**\r\n * x-axes with label for bar chart\r\n * @param datanames the data names\r\n * @param bar_options options for the bar chart\r\n * @returns a diagram of the x-axes\r\n */\r\nexport function xaxes(datanames : string[], bar_options : Partial<bar_options> = {}) : Diagram {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n    let n = datanames.length;\r\n\r\n    let ax_opt = to_ax_options(datanames.map(() => 1), opt);\r\n    let ax_f = axes_transform(ax_opt);\r\n\r\n    let l = line(V2(-1,0), V2(n,0)).transform(ax_f).stroke('gray');\r\n    let label_arr = datanames.map((name,i) => \r\n        text(name).move_origin_text('top-center').position(V2(Number(i), 0)).transform(ax_f)\r\n            .translate(V2(0,-opt.ticksize/2)).textfill('gray')\r\n    );\r\n    return diagram_combine(l, ...label_arr);\r\n}\r\n\r\n/**\r\n * y-axes with label for bar chart\r\n * @param datavalues the data values\r\n * @param bar_options options for the bar chart\r\n */\r\nexport function yaxes(datavalues : number[], bar_options : Partial<bar_options> = {}) : Diagram {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n\r\n    let ax_opt = to_ax_options(datavalues, opt);\r\n\r\n    let ymax   = ax_opt.yrange[1];\r\n    let yrange = opt.yrange ?? [0, ymax];\r\n\r\n    let ax_f = axes_transform(ax_opt);\r\n\r\n    let l = line(V2(-1,0), V2(-1,yrange[1])).transform(ax_f).stroke('gray');\r\n    return yticks(ax_opt, -1).combine(l);\r\n}\r\n\r\nexport function axes_tansform(datavalues : number[], bar_options : Partial<bar_options> = {}) : (v : Vector2) => Vector2 {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n    let ax_opt = to_ax_options(datavalues, opt);\r\n    return axes_transform(ax_opt);\r\n}\r\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\r\nimport { V2 } from '../vector.js';\r\nimport { arrow2 } from '../shapes.js'\r\nimport { TAG } from '../tag_names.js';\r\n\r\n/**\r\n * Draw an empty axis from xmin to xmax with arrowsize\r\n * @param xmin minimum value of the numberline\r\n * @param xmax maximum value of the numberline\r\n * @param arrowsize the size of the arrowhead\r\n * returns a Diagram\r\n */\r\nexport function axis(xmin : number, xmax : number, arrowsize : number = 1) : Diagram {\r\n    return arrow2(V2(xmin, 0), V2(xmax,0), arrowsize).fill('black').append_tags(TAG.GRAPH_AXIS);\r\n}\r\n\r\n/**\r\n * Draw a numbered ticks for a numberline\r\n * @param xs the values of the ticks\r\n * @param ticksize the size of the ticks\r\n * @param number_offset the offset of the number from the ticks\r\n * returns a Diagram\r\n */\r\nexport function numbered_ticks(xs : number[], ticksize : number, number_offset : number) : Diagram {\r\n    let d_ticks : Diagram[] = [];\r\n    for (let i of xs) {\r\n        let tick = line(V2(i, -ticksize/2), V2(i, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\r\n        let num  = text(i.toString()).move_origin('top-center').position(V2(i, -ticksize/2 - number_offset))\r\n            .append_tags(TAG.GRAPH_TICK_LABEL);\r\n        d_ticks.push(diagram_combine(tick, num));\r\n    }\r\n    return diagram_combine(...d_ticks);\r\n}\r\n\r\n/**\r\n * Draw ticks for a numberline\r\n * @param xs the values of the ticks\r\n * @param ticksize the size of the ticks\r\n * returns a Diagram\r\n */\r\nexport function ticks(xs : number[], ticksize : number) : Diagram {\r\n    let d_ticks : Diagram[] = [];\r\n    for (let i of xs) {\r\n        let tick = line(V2(i, -ticksize/2), V2(i, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\r\n        d_ticks.push(tick);\r\n    }\r\n    return diagram_combine(...d_ticks);\r\n}\r\n\r\n/**\r\n * Draw a single tick for a numberline\r\n * @param x the value of the tick\r\n * @param txt the text of the tick\r\n * @param ticksize the size of the tick\r\n * @param text_offset the offset of the text from the tick\r\n * returns a Diagram\r\n */\r\nexport function single_tick(x : number, txt : string, ticksize : number, text_offset : number) : Diagram {\r\n    let tick = line(V2(x, -ticksize/2), V2(x, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\r\n    if (txt == '') return tick;\r\n\r\n    let num  = text(txt).move_origin('top-center').position(V2(x, -ticksize/2 - text_offset))\r\n        .append_tags(TAG.GRAPH_TICK_LABEL);\r\n    return diagram_combine(tick, num);\r\n}\r\n","import { Diagram, diagram_combine } from '../diagram.js';\r\nimport { rectangle_corner } from '../shapes.js';\r\nimport { V2, Vector2 } from '../vector.js';\r\nimport { transpose, expand_directional_value } from '../utils.js';\r\nimport { TAG } from '../tag_names.js';\r\n\r\nenum TableOrientation {\r\n    ROWS    = 'rows',\r\n    COLUMNS = 'columns',\r\n}\r\n\r\nexport type cell_style = { index : [number,number], fill? : string, stroke? : string, strokewidth? : number };\r\n\r\n/**\r\n * Create a table with diagrams inside\r\n * @param diagrams 2D array of diagrams\r\n * @param orientation orientation of the table (default: 'rows')\r\n * can be 'rows' or 'columns'\r\n * @param min_rowsize minimum size of each row\r\n * @param min_colsize minimum size of each column\r\n * @returns a diagram of the table with the diagrams inside\r\n */\r\nexport function table(diagrams : Diagram[][], padding : number | number[] = 0, orientation : TableOrientation = TableOrientation.ROWS, \r\n    min_rowsize : number = 0, min_colsize : number = 0) : Diagram {\r\n    // if the orientation is columns, then we just transpose the rows and columns\r\n    let diagram_rows = orientation == TableOrientation.ROWS ? diagrams : transpose(diagrams);\r\n\r\n    const pad = expand_directional_value(padding);\r\n    function f_size(d? : Diagram) : [number, number] {\r\n        if (d == undefined) return [min_colsize, min_rowsize];\r\n        let [bottomleft, topright] = d.bounding_box();\r\n        let width  = topright.x - bottomleft.x + pad[1] + pad[3];\r\n        let height = topright.y - bottomleft.y + pad[0] + pad[2];\r\n        return [width, height];\r\n    }\r\n\r\n    let row_count = diagram_rows.length;\r\n    let col_count = Math.max(...diagram_rows.map(row => row.length));\r\n    let rowsizes : number[] = Array(row_count).fill(min_rowsize);\r\n    let colsizes : number[] = Array(col_count).fill(min_colsize);\r\n    // find the maximum size of each row and column\r\n    for (let r = 0; r < row_count; r++) {\r\n        for (let c = 0; c < col_count; c++) {\r\n            let [w, h] = f_size(diagram_rows[r][c]);\r\n            rowsizes[r] = Math.max(rowsizes[r], h);\r\n            colsizes[c] = Math.max(colsizes[c], w);\r\n        }\r\n    }\r\n\r\n    return fixed_size(diagrams, rowsizes, colsizes, orientation);\r\n}\r\n\r\n/**\r\n * WARNING: Deprecated, use tags instead\r\n * Style the cells of a table\r\n * @param table_diagram a diagram of a table\r\n * @param styles an array of cell styles\r\n * each style has an index of the cell and the style\r\n * e.g. { index : [0,0], fill : 'red', stroke : 'black', strokewidth : 2 }\r\n * not all styles are required\r\n * e.g. { index : [0,0], fill : 'red' }\r\n * @returns a new diagram with the cells styled\r\n */\r\nexport function style_cell(table_diagram : Diagram, styles : cell_style[]) : Diagram {\r\n    let newd = table_diagram.copy();\r\n    if (table_diagram.tags.includes(TAG.CONTAIN_TABLE)) {\r\n        let table_index = newd.children.findIndex(d => d.tags.includes(TAG.TABLE));\r\n        let new_table = style_cell(newd.children[table_index], styles);\r\n        newd.children[table_index] = new_table;\r\n        return newd;\r\n    }\r\n    else if (!table_diagram.tags.includes(TAG.TABLE)) { return table_diagram; }\r\n\r\n    for (let style of styles) {\r\n        let [r, c] = style.index;\r\n        let cell = newd.children[r].children[c];\r\n        if (style.fill) { cell = cell.fill(style.fill); }\r\n        if (style.stroke) { cell = cell.stroke(style.stroke); }\r\n        if (style.strokewidth) { cell = cell.strokewidth(style.strokewidth); }\r\n        newd.children[r].children[c] = cell;\r\n    }\r\n    return newd;\r\n}\r\n\r\n/**\r\n * Create a table with fixed size\r\n * @param diagrams 2D array of diagrams\r\n * @param rowsizes size of each row\r\n * if `rowsizes.length` is less than `diagrams.length`, the last value will be repeated\r\n * e.g. [1,2,3] -> [1,2,3,3,3]\r\n * @param colsizes size of each column\r\n * if `colsizes.length` is less than `diagrams[0].length`, the last value will be repeated\r\n * @param orientation orientation of the table (default: 'rows')\r\n * can be 'rows' or 'columns'\r\n * @returns a diagram of the table with the diagrams inside\r\n */\r\nexport function fixed_size(diagrams : Diagram[][], rowsizes : number[], colsizes : number[]\r\n    , orientation : TableOrientation = TableOrientation.ROWS ) : Diagram \r\n{\r\n    // if the orientation is columns, then we just transpose the rows and columns\r\n    let diagram_rows = orientation == TableOrientation.ROWS ? diagrams : transpose(diagrams);\r\n    let row_count = diagram_rows.length;\r\n    let col_count = Math.max(...diagram_rows.map(row => row.length));\r\n\r\n    const empty_map = get_empty_map(diagrams);\r\n    let table = empty_fixed_size(row_count, col_count, rowsizes, colsizes, empty_map);\r\n    let points = get_points(table);\r\n\r\n    let diagram_grid : Diagram[] = [];\r\n    for (let r = 0; r < row_count; r++) {\r\n        for (let c = 0; c < col_count; c++) {\r\n            let d = diagram_rows[r][c];\r\n            if (d == undefined) continue;\r\n            d = d.move_origin('center-center').position(points[r][c])\r\n                .append_tags(TAG.TABLE_CONTENT)\r\n                .append_tags(TAG.ROW_ + r)\r\n                .append_tags(TAG.COL_ + c);\r\n            diagram_grid.push(d);\r\n        }\r\n    }\r\n    let diagram_grid_combined = diagram_combine(...diagram_grid);\r\n    return diagram_combine(table, diagram_grid_combined).append_tags(TAG.CONTAIN_TABLE);\r\n}\r\n\r\nfunction get_empty_map(diagrams : Diagram[][]) : boolean[][] {\r\n    let row_count = diagrams.length;\r\n    let col_count = Math.max(...diagrams.map(row => row.length));\r\n    let empty_indices_map : boolean[][] = Array(row_count).fill(false).map(() => Array(col_count).fill(false));\r\n    for (let r = 0; r < row_count; r++) {\r\n        for (let c = 0; c < col_count; c++) {\r\n            const d = diagrams[r][c];\r\n            if (d == undefined || d?.is_empty?.()) \r\n                empty_indices_map[r][c] = true;\r\n        }\r\n    }\r\n    return empty_indices_map;\r\n}\r\n\r\n/**\r\n * Create an empty table with fixed size\r\n * @param row_count number of rows\r\n * @param col_count number of columns\r\n * @param rowsizes size of each row\r\n * if `rowsizes.length` is less than `row_count`, the last value will be repeated\r\n * e.g. [1,2,3] -> [1,2,3,3,3]\r\n * @param colsizes size of each column\r\n * if `colsizes.length` is less than `col_count`, the last value will be repeated\r\n */\r\nexport function empty_fixed_size(row_count : number, col_count : number, \r\n    rowsizes : number[], colsizes : number[], empty_map : boolean[][]\r\n) : Diagram \r\n{\r\n    while (rowsizes.length < row_count) { rowsizes.push(rowsizes[rowsizes.length-1]); }\r\n    while (colsizes.length < col_count) { colsizes.push(colsizes[colsizes.length-1]); }\r\n\r\n    let rows : Diagram[] = [];\r\n    let y_top = 0;\r\n    for (let r = 0; r < row_count; r++) {\r\n        let y_bot   = y_top - rowsizes[r];\r\n        let x_left = 0;\r\n        let cols : Diagram[] = [];\r\n        for (let c = 0; c < col_count; c++) {\r\n            let x_right = x_left + colsizes[c];\r\n            let x_mid = (x_left + x_right) / 2;\r\n            let y_mid = (y_top + y_bot) / 2;\r\n\r\n            //TODO: draw line instead of recangles\r\n            let rect = rectangle_corner(V2(x_left, y_bot), V2(x_right, y_top)).move_origin(V2(x_mid, y_mid))\r\n                .append_tags(TAG.TABLE_CELL)\r\n                .append_tags(TAG.ROW_ + r)\r\n                .append_tags(TAG.COL_ + c);\r\n            if (empty_map[r][c]) rect = rect.append_tags(TAG.EMPTY_CELL);\r\n            cols.push(rect);\r\n            x_left = x_right;\r\n        }\r\n        rows.push(diagram_combine(...cols));\r\n        y_top = y_bot;\r\n    }\r\n\r\n    return diagram_combine(...rows).append_tags(TAG.TABLE);\r\n}\r\n\r\n/**\r\n * Get the midpoints of the cells from a table diagram\r\n * @param table_diagram a table diagram\r\n * @returns a 2D array of points\r\n * the first index is the row, the second index is the column\r\n */\r\nexport function get_points(table_diagram : Diagram) : Vector2[][] {\r\n    let table_diagram_ = table_diagram;\r\n    if (table_diagram.tags.includes(TAG.CONTAIN_TABLE)) {\r\n        for (let d of table_diagram.children){\r\n            if (d.tags.includes(TAG.TABLE)) {\r\n                table_diagram_ = d;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (!table_diagram_.tags.includes(TAG.TABLE)) return [];\r\n\r\n    let rows : Vector2[][] = [];\r\n    for (let row of table_diagram_.children){\r\n        let cols : Vector2[] = [];\r\n        for (let cell of row.children){\r\n            cols.push(cell.origin);\r\n        }\r\n        rows.push(cols);\r\n    }\r\n    return rows;\r\n}\r\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\r\nimport { Vector2, V2 } from '../vector.js';\r\nimport { rectangle, arrow2 } from '../shapes.js'\r\nimport { axes_options, xticks, yticks, axes_transform, xtickmark_empty, ytickmark_empty } from './shapes_graph.js'\r\n\r\nexport type boxplot_options = {\r\n    range? : [number, number],\r\n    ticks? : number[],\r\n    bbox? : [Vector2, Vector2],\r\n    ticksize : number,\r\n    headsize : number,\r\n    orientation : 'x' | 'y',\r\n    tick_label_offset? : number,\r\n}\r\n\r\nexport let default_bar_options : boxplot_options = {\r\n    ticksize: 0.2,\r\n    range : [0,1],\r\n    bbox: [V2(0,0), V2(10,10)],\r\n    orientation: 'x',\r\n    headsize : 0.05,\r\n    tick_label_offset : 0,\r\n}\r\n\r\nexport function to_ax_options(baropt : Partial<boxplot_options>) : axes_options {\r\n    let opt = {...default_bar_options, ...baropt}; // use default if not defined\r\n    opt.bbox = opt.bbox ?? [V2(0,0), V2(10,10)]; // just to make sure it is defined\r\n\r\n    if (opt.orientation == 'x') {\r\n        let ax_opt : axes_options = {\r\n            xrange   : opt.range as [number, number],\r\n            yrange   : [opt.bbox[0].y, opt.bbox[1].y],\r\n            xticks   : opt.ticks,\r\n            headsize : opt.headsize,\r\n            ticksize : opt.ticksize,\r\n            bbox     : opt.bbox,\r\n            tick_label_offset : opt.tick_label_offset,\r\n        }\r\n        return ax_opt;\r\n    } else {\r\n        let ax_opt : axes_options = {\r\n            xrange   : [opt.bbox[0].x, opt.bbox[1].x],\r\n            yrange   : opt.range as [number, number],\r\n            yticks   : opt.ticks,\r\n            headsize : opt.headsize,\r\n            ticksize : opt.ticksize,\r\n            bbox     : opt.bbox,\r\n            tick_label_offset : opt.tick_label_offset,\r\n        }\r\n        return ax_opt;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * axis for boxplot\r\n * @param bar_options options for the bar chart\r\n * @returns a diagram of the axes\r\n */\r\nexport function axes(bar_options : Partial<boxplot_options> = {}) : Diagram {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n    let ax_opt = to_ax_options(opt);\r\n    // let ax_f = axes_transform(ax_opt);\r\n\r\n    let [lowerleft, upperright] = opt.bbox as [Vector2, Vector2];\r\n\r\n    if (opt.orientation == 'x') {\r\n        let xaxis = arrow2(V2(lowerleft.x,0), V2(upperright.x,0), opt.headsize);\r\n        let xtickmarks = xticks(ax_opt, 0);\r\n        return diagram_combine(xaxis, xtickmarks).stroke('gray').fill('gray');\r\n    } else {\r\n        let yaxis = arrow2(V2(0,lowerleft.y), V2(0,upperright.y), opt.headsize);\r\n        let ytickmarks = yticks(ax_opt, 0);\r\n        return diagram_combine(yaxis, ytickmarks).stroke('gray').fill('gray');\r\n    }\r\n}\r\n\r\n/**\r\n */\r\nexport function empty_tickmarks(xs: number[], bar_options : Partial<boxplot_options> = {}) : Diagram {\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n    let ax_opt = to_ax_options(opt);\r\n    // let ax_f = axes_transform(ax_opt);\r\n    if (opt.orientation == 'x') {\r\n        ax_opt.xticks = xs;\r\n        return xticks(ax_opt, 0, true);\r\n    } else {\r\n        ax_opt.yticks = xs;\r\n        return yticks(ax_opt, 0, true);\r\n    }\r\n}\r\n\r\n/**\r\n * Plot a boxplot from quartiles\r\n * @param quartiles [Q0, Q1, Q2, Q3, Q4]\r\n * @param pos position of the boxplot\r\n * @param size size of the boxplot\r\n * @param bar_options options for the bar chart\r\n * @returns a diagram of the boxplot\r\n */\r\nexport function plotQ(quartiles : number[], pos : number, size : number, bar_options : Partial<boxplot_options>){\r\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\r\n    let ax_opt = to_ax_options(opt);\r\n    let ax_f = axes_transform(ax_opt);\r\n    let [Q0, Q1, Q2, Q3, Q4] = quartiles;\r\n\r\n    let whisker_size = 0.8 * size;\r\n    if (opt.orientation == 'x') {\r\n        let box = rectangle(Q3-Q1, size).move_origin('center-left').position(V2(Q1, pos)).transform(ax_f);\r\n        let min    = line(V2(Q0, pos - whisker_size/2), V2(Q0, pos + whisker_size/2)).transform(ax_f);\r\n        let max    = line(V2(Q4, pos - whisker_size/2), V2(Q4, pos + whisker_size/2)).transform(ax_f);\r\n        let median = line(V2(Q2, pos - size/2), V2(Q2, pos + size/2)).transform(ax_f);\r\n        let whisker_min = line(V2(Q0, pos), V2(Q1, pos)).transform(ax_f);\r\n        let whisker_max = line(V2(Q3, pos), V2(Q4, pos)).transform(ax_f);\r\n        return diagram_combine(box, min, max, median, whisker_min, whisker_max);\r\n    } else {\r\n        let box = rectangle(size, Q3-Q1).move_origin('bottom-center').position(V2(pos, Q1)).transform(ax_f);\r\n        let min    = line(V2(pos - whisker_size/2, Q0), V2(pos + whisker_size/2, Q0)).transform(ax_f);\r\n        let max    = line(V2(pos - whisker_size/2, Q4), V2(pos + whisker_size/2, Q4)).transform(ax_f);\r\n        let median = line(V2(pos - size/2, Q2), V2(pos + size/2, Q2)).transform(ax_f);\r\n        let whisker_min = line(V2(pos, Q0), V2(pos, Q1)).transform(ax_f);\r\n        let whisker_max = line(V2(pos, Q3), V2(pos, Q4)).transform(ax_f);\r\n        return diagram_combine(box, min, max, median, whisker_min, whisker_max);\r\n    }\r\n}\r\n\r\n// TODO: plot boxplot from data\r\n// TODO: plot multiple boxplots at once\r\n","import { Diagram, line as dgline, text, diagram_combine, empty  } from '../diagram.js';\r\nimport { circle, textvar } from '../shapes.js';\r\nimport { V2, Vector2, Vdir } from '../vector.js';\r\n\r\nenum GeoType {\r\n    LINE = 'LINE',\r\n}\r\nexport type GeoCtx = {[key : string] : (GeoObj | Vector2 | number)}\r\nexport interface GeoObj { type : GeoType; }\r\n\r\nexport interface GeoLine extends GeoObj {\r\n    type : GeoType.LINE;\r\n    p : Vector2\r\n    dir : Vector2 // not necessarily a unit vector\r\n}\r\n// TODO : CeoCircle\r\n\r\nexport function intersect(o1 : GeoObj, o2 : GeoObj) : Vector2[] {\r\n    if (o1.type === GeoType.LINE && o2.type === GeoType.LINE) {\r\n        let l1 = o1 as GeoLine;\r\n        let l2 = o2 as GeoLine;\r\n        let p = line_intersection(l1, l2);\r\n        return [p]\r\n    }\r\n    return [];\r\n}\r\n\r\n\r\n/**\r\n * Get a point that is `d` distance away from `p` in the direction of `dir`\r\n * *ideally, point `p` should be in line `l`*\r\n */\r\nexport function point_onLine_atDistance_from(l : GeoLine, d : number, p : Vector2) : Vector2 {\r\n    let dir = l.dir.normalize();\r\n    return p.add(dir.scale(d));\r\n}\r\n\r\n/**\r\n * Get a point\r\n * - that is collinear with `p1` and `p2`\r\n * - that is `len` away from `p2` in the direction away from `p1`\r\n */\r\nexport function point_collinear_extend_length(p1 : Vector2, p2 : Vector2, len : number) : Vector2 {\r\n    let dir = p2.sub(p1).normalize();\r\n    return p2.add(dir.scale(len));\r\n}\r\n\r\n/** Get a point that is `t` fraction of the way from `p1` to `p2` */\r\nexport function point_collinear_fraction(p1 : Vector2, p2 : Vector2, t : number) : Vector2 {\r\n    let dir = p2.sub(p1);\r\n    return p1.add(dir.scale(t));\r\n}\r\n\r\n/** Get a point on line `l` with x-coordinate `x` */\r\nexport function point_onLine_with_x(l : GeoLine, x : number) : Vector2 {\r\n    let m = l.dir.y / l.dir.x;\r\n    let c = l.p.y - m * l.p.x;\r\n    return V2(x, m * x + c);\r\n}\r\n\r\n/** Get a point on line `l` with y-coordinate `y` */\r\nexport function point_onLine_with_y(l : GeoLine, y : number) : Vector2 {\r\n    let m = l.dir.y / l.dir.x;\r\n    let c = l.p.y - m * l.p.x;\r\n    return V2((y - c) / m, y);\r\n}\r\n\r\n\r\n/** Get the intersection point of two lines */\r\nexport function line_intersection(l1 : GeoLine, l2 : GeoLine) : Vector2 {\r\n    let a1 = l1.p; let b1 = l1.p.add(l1.dir);\r\n    let a2 = l2.p; let b2 = l2.p.add(l2.dir);\r\n\r\n    let x1 = a1.x; let y1 = a1.y; let x2 = b1.x; let y2 = b1.y;\r\n    let x3 = a2.x; let y3 = a2.y; let x4 = b2.x; let y4 = b2.y;\r\n\r\n    let d = (x1-x2)*(y3-y4) - (y1-y2)*(x3-x4);\r\n    let x = ((x1*y2 - y1*x2)*(x3-x4) - (x1-x2)*(x3*y4 - y3*x4))/d;\r\n    let y = ((x1*y2 - y1*x2)*(y3-y4) - (y1-y2)*(x3*y4 - y3*x4))/d;\r\n    return V2(x, y);\r\n}\r\n\r\n\r\n// Constructing lines\r\nexport function line(p : Vector2, dir : Vector2) : GeoLine {\r\n    return {type:GeoType.LINE, p, dir};\r\n}\r\nexport function line_from_points(p1 : Vector2, p2 : Vector2) : GeoLine {\r\n    return line(p1, p2.sub(p1));\r\n}\r\nexport function line_from_slope(p : Vector2, slope : number) : GeoLine {\r\n    return line(p, V2(1, slope));\r\n}\r\nexport function line_from_angle(p : Vector2, angle : number) : GeoLine {\r\n    return line(p, Vdir(angle));\r\n}\r\n\r\n/** Define a line that is parallel to `l` and passes through `p` */\r\nexport function line_parallel_at_point(l : GeoLine, p : Vector2) : GeoLine {\r\n    return line(p, l.dir);\r\n}\r\n/** Define a line that is perpendicular to `l` and passes through `p` */\r\nexport function line_perpendicular_at_point(l : GeoLine, p : Vector2) : GeoLine {\r\n    return line(p, V2(-l.dir.y, l.dir.x));\r\n}\r\n/** Define a line that has the direction of `l` rotated by `angle` and passes through `p` */\r\nexport function line_rotated_at_point(l : GeoLine, angle : number, p : Vector2) : GeoLine {\r\n    return line(p, l.dir.rotate(angle));\r\n}\r\n\r\nfunction line_intersect_bbox(l : GeoLine, bbox : [Vector2, Vector2]) : Diagram | undefined {\r\n    let [bottom_left, top_right] = bbox;\r\n    let bl = bottom_left;\r\n    let tr = top_right;\r\n    let tl = V2(bl.x, tr.y);\r\n    let br = V2(tr.x, bl.y);\r\n    let intersections = [\r\n        line_intersection(l, line_from_points(tl, tr)),\r\n        line_intersection(l, line_from_points(tr, br)),\r\n        line_intersection(l, line_from_points(br, bl)),\r\n        line_intersection(l, line_from_points(bl, tl)),\r\n    ];\r\n    const tol = 1e-6; // tolerance\r\n    const is_inside_bbox = (p : Vector2) => { \r\n        return p.x >= bl.x - tol && p.x <= tr.x + tol && p.y >= bl.y - tol && p.y <= tr.y + tol;\r\n    }\r\n    let points = intersections.filter(p => is_inside_bbox(p));\r\n    if (points.length <= 1) return undefined;\r\n    return dgline(points[0], points[1]);\r\n}\r\n\r\n// drawing\r\nfunction normalize_padding(padding : number[] | number) : [number, number, number, number] {\r\n    let p = (typeof padding === 'number') ? [padding] : padding;\r\n    switch (p.length) {\r\n        case 0: return [0, 0, 0, 0];\r\n        case 1: return [p[0], p[0], p[0], p[0]];\r\n        case 2: return [p[0], p[1], p[0], p[1]];\r\n        case 3: return [p[0], p[1], p[2], p[1]];\r\n        default: return [p[0], p[1], p[2], p[3]];\r\n    }\r\n}\r\n\r\n/**\r\n * Get a preview diagram of the context\r\n * @param ctx the Geo context (a dictionary of GeoObj and Vector2)\r\n * @param pad padding around the diagram (determine how far away from the defined point the visible diagram is)\r\n */\r\nexport function get_preview_diagram(ctx : GeoCtx, pad? : number[] | number) : Diagram {\r\n    let points : {name : string, p : Vector2}[] = [];\r\n    let lines : {name : string, obj : GeoLine}[] = [];\r\n\r\n    let typelist : {[key in GeoType] : {name: string, obj : GeoObj}[]} = {\r\n        [GeoType.LINE] : lines\r\n    }\r\n\r\n    let object_names = Object.keys(ctx);\r\n    for (let name of object_names) {\r\n        let obj = ctx[name];\r\n        if (typeof(obj) === 'number'){\r\n            continue;\r\n        }\r\n        else if (obj instanceof Vector2) {\r\n            points.push({name, p:obj});\r\n        } else {\r\n            typelist[obj.type].push({name, obj});\r\n        }\r\n    }\r\n\r\n    let minx = Math.min(...points.map(p => p.p.x));\r\n    let maxx = Math.max(...points.map(p => p.p.x));\r\n    let miny = Math.min(...points.map(p => p.p.y));\r\n    let maxy = Math.max(...points.map(p => p.p.y));\r\n\r\n    if (pad == undefined) pad = Math.max(maxx - minx, maxy - miny) * 0.1;\r\n    pad = normalize_padding(pad);\r\n    let bbox = [V2(minx - pad[0], miny - pad[1]), V2(maxx + pad[2], maxy + pad[3])] as [Vector2, Vector2];\r\n\r\n    let dg_lines = lines.map(l => line_intersect_bbox(l.obj, bbox)).filter(d => d !== undefined) as Diagram[];\r\n    let r = Math.max(bbox[1].x - bbox[0].x, bbox[1].y - bbox[0].y) * 0.01 * 2/3;\r\n    let dg_points = points.map(p => {\r\n        let c = circle(r).translate(p.p).fill('black');\r\n        let name = textvar(p.name).translate(p.p.add(V2(r*2, r*2))).move_origin_text('bottom-left');\r\n        let namebg = name.copy().textfill('white').textstroke('white').textstrokewidth(10).opacity(0.7)\r\n        return c.combine(namebg, name)\r\n    });\r\n    return diagram_combine(...dg_lines, ...dg_points);\r\n}\r\n","import { Diagram } from '../diagram.js';\r\nimport { V2 } from '../vector.js';\r\nimport { size } from './shapes_geometry.js';\r\nimport type { TreeNode } from './shapes_tree.js';\r\n\r\n// C. Buchheim, M. J Unger, and S. Leipert. Improving Walker's algorithm to run in linear time. In Proc. Graph Drawing (GD), 2002. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.16.8757\r\n// article : https://llimllib.github.io/pymag-trees/\r\nexport class TreeDraw  {\r\n    diagram: Diagram;\r\n    size: [number,number];\r\n    tree: TreeNode;\r\n    children: TreeDraw[];\r\n    x : number; \r\n    y : number;\r\n    parent: TreeDraw | undefined;\r\n    thread: TreeDraw | undefined;\r\n    mod: number;\r\n    ancestor: TreeDraw;\r\n    change: number;\r\n    shift: number;\r\n    number: number;\r\n\r\n    constructor(tree: TreeNode, parent : TreeDraw | undefined, depth : number = 0, number : number = 0) {\r\n        this.diagram = tree.value;\r\n        this.size = size(this.diagram);\r\n        this.x = -1.0;\r\n        this.y = depth;\r\n        this.tree = tree;\r\n        let tree_children = tree.children ?? [];\r\n        this.children = tree_children.map((child, i) => new TreeDraw(child, this, depth + 1, i));\r\n        this.parent = parent;\r\n        this.thread = undefined;\r\n        this.mod = 0;\r\n        this.ancestor = this;\r\n        this.change = 0;\r\n        this.shift = 0;\r\n        this.number = number;\r\n    }\r\n\r\n    left() : TreeDraw | undefined {\r\n        if (this.thread) return this.thread;\r\n        if (this.children.length > 0) return this.children[0];\r\n        return undefined;\r\n    }\r\n    right() : TreeDraw | undefined{\r\n        if (this.thread) return this.thread;\r\n        if (this.children.length > 0) return this.children[this.children.length-1];\r\n        return undefined;\r\n    }\r\n    lsibling() : TreeDraw | undefined {\r\n        if (!this.parent) return undefined;\r\n        if (this.number > 0) return this.parent.children[this.number-1];\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport function calculate_tree_buchheim(tree : TreeNode, vertical_dist : number, horizontal_gap : number) : TreeDraw{\r\n    let treeDraw = new TreeDraw(tree, undefined);\r\n    let dt = first_walk(treeDraw, horizontal_gap);\r\n    let min = second_walk(dt, 0, 0, vertical_dist, 0);\r\n    if (min < 0) third_walk(dt, -min);\r\n    position_diagram(dt);\r\n    return dt;\r\n}\r\n\r\nfunction position_diagram(tree : TreeDraw) {\r\n    tree.diagram = tree.diagram.position(V2(tree.x, tree.y));\r\n    tree.children.forEach(position_diagram);\r\n}\r\n\r\nfunction third_walk(td : TreeDraw, n : number){\r\n    td.x += n;\r\n    td.children.forEach(child => third_walk(child, n));\r\n}\r\n\r\nfunction first_walk(td : TreeDraw, horizontal_gap : number){\r\n    let self_halfwidth = td.size[0] / 2;\r\n    if (td.children.length === 0){\r\n        let lbrother = td.lsibling();\r\n        if (lbrother) {\r\n            let lbrother_halfwidth = lbrother.size[0] / 2;\r\n            let dist = lbrother_halfwidth + self_halfwidth + horizontal_gap;\r\n            td.x = lbrother.x + dist;\r\n        } else {\r\n            td.x = 0\r\n        }\r\n    } else {\r\n        let default_ancestor = td.children[0];\r\n        td.children.forEach(w => {\r\n            first_walk(w, horizontal_gap);\r\n            default_ancestor = apportion(w, default_ancestor, horizontal_gap);\r\n        });\r\n        execute_shifts(td);\r\n        let midpoint = (td.children[0].x + td.children[td.children.length-1].x) / 2;\r\n        let lbrother = td.lsibling();\r\n        if (lbrother){\r\n            let lbrother_halfwidth = lbrother.size[0] / 2;\r\n            let dist = lbrother_halfwidth + self_halfwidth + horizontal_gap;\r\n            td.x = lbrother.x + dist;\r\n            td.mod = td.x - midpoint;\r\n        } else {\r\n            td.x = midpoint;\r\n        }\r\n    }\r\n    return td;\r\n}\r\n\r\ntype V = TreeDraw | undefined;\r\nfunction apportion(v : TreeDraw, default_ancestor : TreeDraw, horizontal_gap : number) {\r\n    let w = v.lsibling();\r\n    if (w !== undefined) {\r\n        let lmost_sibling = (!v.parent || v.number === 0) ? undefined : v.parent.children[0];\r\n        let vir : V = v;\r\n        let vor : V = v;\r\n        let vil : V = w;\r\n        let vol : V = lmost_sibling ;\r\n        let sir = v.mod;\r\n        let sor = v.mod;\r\n        let sil = vil.mod;\r\n        let sol = vol!.mod;\r\n\r\n        while (vil?.right() !== undefined && vir?.left() !== undefined) {\r\n            vil = vil.right();\r\n            vir = vir.left();\r\n            vol = vol?.left();\r\n            vor = vor?.right();\r\n            vor!.ancestor = v;\r\n            let lhalfwidth = vil!.size[0] / 2;\r\n            let rhalfwidth = vir!.size[0] / 2;\r\n            let dist = lhalfwidth + rhalfwidth + horizontal_gap;\r\n            let shift = (vil!.x + sil) - (vir!.x + sir) + dist;\r\n            if (shift > 0) {\r\n                let a = ancestor(vil!, v, default_ancestor);\r\n                move_subtree(a, v, shift);\r\n                sir += shift;\r\n                sor += shift;\r\n            }\r\n            sil += vil!.mod;\r\n            sir += vir!.mod;\r\n            sol += vol!.mod;\r\n            sor += vor!.mod;\r\n        }\r\n        if (vil!.right() !== undefined && vor!.right() === undefined) {\r\n            vor!.thread = vil!.right();\r\n            vor!.mod += sil - sor;\r\n        } else {\r\n            if (vir?.left() !== undefined && vol?.left() === undefined) {\r\n                vol!.thread = vir.left();\r\n                vol!.mod += sir - sol;\r\n            }\r\n            default_ancestor = v;\r\n        }\r\n    }\r\n    return default_ancestor;\r\n}\r\n\r\nfunction move_subtree(wl : TreeDraw, wr : TreeDraw, shift : number){\r\n    let subtrees = wr.number - wl.number;\r\n    wr.change -= shift / subtrees;\r\n    wr.shift += shift;\r\n    wl.change += shift / subtrees;\r\n    wr.x += shift;\r\n    wr.mod += shift;\r\n}\r\n\r\nfunction execute_shifts(td : TreeDraw){\r\n    let shift = 0;\r\n    let change = 0;\r\n    for (let i = td.children.length - 1; i >= 0; i--){\r\n        let w = td.children[i];\r\n        w.x += shift;\r\n        w.mod += shift;\r\n        change += w.change;\r\n        shift += w.shift + change;\r\n    }\r\n}\r\n\r\nfunction ancestor(vil : TreeDraw, v : TreeDraw, default_ancestor : TreeDraw){\r\n    if (v.parent?.children.includes(vil.ancestor)) return vil.ancestor;\r\n    return default_ancestor;\r\n}\r\n\r\nfunction second_walk(td : TreeDraw, m : number, depth : number, vertical_dist : number, min? : number){\r\n    td.x += m;\r\n    td.y = -depth * vertical_dist;\r\n\r\n    // if (min === undefined) min = v.x;\r\n    min = Math.min(min ?? td.x, td.x);\r\n\r\n    td.children.forEach(w => {\r\n        min = second_walk(w, m + td.mod, depth + 1, vertical_dist, min);\r\n    });\r\n    return min;\r\n}\r\n","import { Diagram, diagram_combine, line } from '../diagram.js';\r\nimport { calculate_tree_buchheim, TreeDraw } from './utils_tree.js';\r\n\r\n\r\nexport interface TreeNode {\r\n    value: Diagram;\r\n    children?: TreeNode[];\r\n}\r\n\r\n/**\r\n * Create a tree diagram from a tree node\r\n * @param node root node of the tree\r\n * @param vertical_dist vertical distance between nodes\r\n * @param horizontal_gap horizontal gap between nodes\r\n * @returns tree diagram\r\n */\r\nexport function tree(node : TreeNode, vertical_dist : number, horizontal_gap : number) : Diagram {\r\n    let treeDraw = calculate_tree_buchheim(node, vertical_dist, horizontal_gap);\r\n    return diagram_from_treeDraw(treeDraw);\r\n}\r\n\r\n/**\r\n * Mirror a tree node\r\n * @param node root node of the tree\r\n * @returns mirrored tree node\r\n */\r\nexport function mirror_treenode(node : TreeNode) : TreeNode {\r\n    return {value: node.value, children: (node.children ?? []).map(mirror_treenode).reverse()};\r\n}\r\n\r\n/**\r\n * Helper function to create a diagram from a treeDraw\r\n * @param node treeDraw node\r\n * @returns diagram\r\n */\r\nfunction diagram_from_treeDraw(node : TreeDraw) : Diagram {\r\n    let node_dg = node.diagram;\r\n    let children_dglist = node.children.map(diagram_from_treeDraw);\r\n    let line_diagrams = node.children.map(child_node => {\r\n        let start = node_dg.get_anchor('bottom-center');\r\n        let end = child_node.diagram.get_anchor('top-center');\r\n        return line(start, end);\r\n    });\r\n    return diagram_combine(node_dg, ...line_diagrams, ...children_dglist);\r\n}\r\n\r\n","import { Diagram, curve } from '../diagram.js';\r\nimport { V2, Vector2 } from '../vector.js';\r\n\r\n/**\r\n* Combine multiple curves into a single curve\r\n* @param curves an array of curves\r\n* \\* you can reverse the order of the point in a curve by using the reverse() method\r\n*/\r\nexport function curve_combine(...curves : Diagram[]) : Diagram {\r\n    const points = curves.map(c => c.path?.points ?? []).flat();\r\n    return curve(points);\r\n}\r\n\r\nexport function bezier_quadratic(p0 : Vector2, p1 : Vector2, p2 : Vector2, n_sample = 100 ) {\r\n    const dt = 1/(n_sample-1);\r\n    const points = Array<Vector2>(n_sample);\r\n    for (let i = 0; i < n_sample; i++) {\r\n        const t = i*dt;\r\n        // B(t) = (1-t)^2 * P0 + 2t(1-t)P1 + t^2P2\r\n        const a = p0.scale((1-t)*(1-t));\r\n        const b = p1.scale(2*t*(1-t));\r\n        const c = p2.scale(t*t);\r\n        points[i] = a.add(b).add(c);\r\n    }\r\n    return curve(points);\r\n}\r\n\r\nexport function bezier_cubic(p0 : Vector2, p1 : Vector2, p2 : Vector2, p3 : Vector2, n_sample = 100 ) {\r\n    const dt = 1/(n_sample-1);\r\n    const points = Array<Vector2>(n_sample);\r\n    for (let i = 0; i < n_sample; i++) {\r\n        const t = i*dt;\r\n        // B(t) = (1-t)^3 * P0 + 3t(1-t)^2P1 + 3t^2(1-t)P2 + t^3P3\r\n        const a = p0.scale((1-t)*(1-t)*(1-t));\r\n        const b = p1.scale(3*t*(1-t)*(1-t));\r\n        const c = p2.scale(3*t*t*(1-t));\r\n        const d = p3.scale(t*t*t);\r\n        points[i] = a.add(b).add(c).add(d);\r\n    }\r\n    return curve(points);\r\n}\r\n\r\n// interpolations\r\n\r\n/**\r\n* Create a curve from the cubic spline interpolation of the given points\r\n* @param points array of points to interpolate\r\n* @param n number of points to interpolate between each pair of points (default 10)\r\n*/\r\nexport function cubic_spline(points : Vector2[], n : number = 10) : Diagram {\r\n    const interpolated_points = interpolate_cubic_spline(points, n);\r\n    return curve(interpolated_points);\r\n}\r\n\r\n/**\r\n * Cubic spline interpolation\r\n * @param points array of points to interpolate\r\n * @param n number of points to interpolate between each pair of points (default 10)\r\n * @returns array of interpolated points\r\n */\r\nexport function interpolate_cubic_spline(points: Vector2[], n: number = 10): Vector2[] {\r\n    const n_points = points.length;\r\n    let a: number[] = points.map(p => p.y);\r\n    let b: number[] = new Array(n_points).fill(0);\r\n    let d: number[] = new Array(n_points).fill(0);\r\n    let h: number[] = new Array(n_points - 1);\r\n    for (let i = 0; i < n_points - 1; i++) {\r\n        h[i] = points[i + 1].x - points[i].x;\r\n    }\r\n\r\n    // Solve tridiagonal system for the c[i] coefficients (second derivatives)\r\n    let alpha : number[] = new Array(n_points - 1).fill(0);\r\n    let c     : number[] = new Array(n_points).fill(0);\r\n    let l     : number[] = new Array(n_points).fill(1);\r\n    let mu    : number[] = new Array(n_points).fill(0);\r\n    let z     : number[] = new Array(n_points).fill(0);\r\n\r\n    for (let i = 1; i < n_points - 1; i++) {\r\n        alpha[i] = (3 / h[i]) * (a[i + 1] - a[i]) - (3 / h[i - 1]) * (a[i] - a[i - 1]);\r\n    }\r\n\r\n    for (let i = 1; i < n_points - 1; i++) {\r\n        l[i] = 2 * (points[i + 1].x - points[i - 1].x) - h[i - 1] * mu[i - 1];\r\n        mu[i] = h[i] / l[i];\r\n        z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];\r\n    }\r\n\r\n    // Back substitution\r\n    for (let j = n_points - 2; j >= 0; j--) {\r\n        c[j] = z[j] - mu[j] * c[j + 1];\r\n        b[j] = (a[j + 1] - a[j]) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;\r\n        d[j] = (c[j + 1] - c[j]) / (3 * h[j]);\r\n    }\r\n\r\n    // Now that we have coefficients, we can construct the spline between each pair of points\r\n    let spline_points: Vector2[] = [];\r\n    for (let i = 0; i < n_points - 1; i++) {\r\n        for (let j = 0; j <= n; j++) {\r\n            let x = points[i].x + j * (points[i + 1].x - points[i].x) / n;\r\n            let y = a[i] + b[i] * (x - points[i].x) + c[i] * Math.pow(x - points[i].x, 2) + d[i] * Math.pow(x - points[i].x, 3);\r\n            spline_points.push(V2(x, y));\r\n        }\r\n    }\r\n\r\n    return spline_points;\r\n}\r\n","import {curve, Diagram, diagram_combine, line} from \"../diagram\"\r\nimport { circle, square} from \"../shapes\";\r\nimport { round_corner } from \"../modifier\";\r\nimport { TAG } from \"../tag_names\";\r\nimport { V2 } from \"../vector\";\r\n\r\n\r\n\r\nexport function arrowHead (headsize: number): Diagram {\r\n    return curve([V2(-headsize, -headsize), V2(0,0), V2(headsize, -headsize)]).fill('none').move_origin(V2(0,0)).append_tags(TAG.ARROW_HEAD)\r\n}\r\n\r\nexport function arrow2( size: number , headsize: number, color: string): Diagram {\r\n    const arrow = arrowHead(headsize).stroke(color).strokewidth(3).translate(V2(0, size)).strokewidth(2)\r\n    const arrowline = line(V2(0, size), V2(0, -size)).stroke(color).strokewidth(2).append_tags(TAG.ARROW_LINE)\r\n    const arrowDown = arrow.position(arrowline.get_anchor('bottom-center')).reflect()\r\n    return diagram_combine(arrow,  arrowDown, arrowline,).move_origin(arrowline.get_anchor('center-center'))\r\n}\r\n\r\nexport function verticalLocator  (radius: number = 3, fill: string = 'white', color: string = \"#8B5CF6\", headsize:number = 1.2 ): Diagram  {\r\n    const padding = radius * 0.5\r\n    const bg_sq = square(radius*2.4).fill(color).opacity(0.25).apply(round_corner(4)).stroke('none')\r\n    const sq = square(radius*2).fill(fill).apply(round_corner(3)).stroke('none')\r\n    const arr = arrow2(padding, headsize, color)\r\n    return diagram_combine(bg_sq, sq, arr)\r\n}\r\n\r\nexport function horizontalLocator  (radius: number = 3, fill: string = 'white', color: string = \"#8B5CF6\", headsize:number = 1.2 ): Diagram  {\r\n  return verticalLocator(radius, fill, color, headsize).rotate(Math.PI / 2)\r\n}\r\n\r\nexport function spanLocator  (radius: number = 3, fill: string = 'white', color: string = \"#8B5CF6\", headsize:number = 1.2 ): Diagram  {\r\n    const padding = radius * 0.5\r\n    const bg_sq = square(radius*2.4).fill(color).opacity(0.25).apply(round_corner(4)).stroke('none')\r\n    const sq = square(radius*2).fill(fill).apply(round_corner(3)).stroke('none')\r\n    const ci = circle(padding).stroke('none').fill(color)\r\n    return diagram_combine(bg_sq, sq, ci)\r\n}\r\n","// Simple encoding/decoding utilities using btoa, atob and encodeURIComponent, decodeURIComponent\r\n// can be used to store user code and pass it in the URL\r\n\r\nexport function encode(s: string): string {\r\n    return btoa(encodeURIComponent(s));\r\n}\r\n\r\nexport function decode(s: string): string {\r\n    return decodeURIComponent(atob(s));\r\n}\r\n"],"names":["line","arrow2","line_intersection","intersect","plot","default_bar_options","to_ax_options","dgline"],"mappings":"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IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,IAAI;AACpB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,IAAI;AACnB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,IAAI;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,IAAI;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;A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","x_google_ignoreList":[13]}